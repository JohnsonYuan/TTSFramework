//----------------------------------------------------------------------------
// <copyright file="FrCASliceData.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
//
// <summary>
//     This module implements French slice data
// </summary>
//----------------------------------------------------------------------------

namespace Microsoft.Tts.Offline
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Collections.ObjectModel;
    using System.IO;
    using System.Text.RegularExpressions;
    using Microsoft.Tts.Offline.Utility;

    /// <summary>
    /// Definition of French slice data.
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming",
        "CA1706:ShortAcronymsShouldBeUppercase")]
    public sealed class FrCASliceData : SliceData
    {
        #region Fields

        private static readonly string[] _onsetSlicesData = new string[]
            {
                "k s",
                "s t",
                "s k",
                "s p",
                "t r",
                "k r",
                "p l",
                "f r",
                "p s",
                "b r",
                "d zh",
                "d r",
                "t h",
                "k l",
                "p t",
                "f l",
                "s h",
                "t sh",
                "s f",
                "g r",
                "r p",
                "v r",
                "r k",
                "r t",
                "d h",
                "b l",
                "t s",
                "l h",
                "sh h",
                "sh t",
                "g z",
                "z h",
                "k w",
                "g w",
                "p r",
                "r v",
                "n h",
                "d w",
                "g l",
                "r s",
                "sh v",
                "f w",
                "l y",
                "t w",
                "d z",
                "l w",
                "p w",
                "b h",
                "r d",
                "n y",
                "s w",
                "d s",
                "d d zh",
                "r g",
                "r y",
                "r f",
                "sh w",
                "r w",
                "zh w",
                "l v",
                "f y",
                "s hw",
                "s v",
                "l hw",
                "k h",
                "k s h",
                "r hw",
                "b r hw",
                "t hw",
                "f t",
                "s g",
                "r b",
                "b hw",
                "n w",
                "d v",
                "zh t",
                "s y",
                "g r w",
                "p f",
                "b w",
                "n hw",
                "m z",
                "sh y",
                "p h",
                "zh h",
                "m y",
                "d y",
                "r sh",
                "m w",
                "s b",
                "m h",
                "r zh",
                "d hw",
                "v w",
                "z w",
                "b y",
                "zh hw",
                "zh y",
                "k hw",
                "v l",
                "b",
                "d",
                "f",
                "g",
                "gn",
                "k",
                "l",
                "l_n",
                "l_t",
                "l_z",
                "m",
                "n",
                "ng",
                "p",
                "r",
                "s",
                "sh",
                "t",
                "v",
                "z",
                "zh",
                "y",
                "w",
                "hw",
            }; 

        private static readonly string[] _codaSlicesData = new string[]
            {
                "t l_z",
                "s l_t",
                "k s",
                "k l_z",
                "s t",
                "d l_z",
                "zh l_z",
                "s t l_z",
                "z l_z",
                "s m",
                "s l_z",
                "v l_z",
                "f l_z",
                "t l_t",
                "z l_t",
                "m l_z",
                "sh l_z",
                "p s",
                "p l_z",
                "g l_z",
                "n l_z",
                "d l_t",
                "s k",
                "b l_z",
                "l l_z",
                "s m l_z",
                "t s",
                "r l_t",
                "ng g",
                "zh l_t",
                "gn l_z",
                "k t",
                "y l_z",
                "sh l_t",
                "k l_t",
                "t sh",
                "v l_t",
                "p l_t",
                "k t l_z",
                "s k l_z",
                "b s",
                "gn l_t",
                "p t",
                "n t",
                "g l_t",
                "m l_t",
                "n l_t",
                "b l_t",
                "y l_t",
                "f l_t",
                "f t",
                "r l_z",
                "ng l_z",
                "s t l_t",
                "d zh",
                "t r",
                "l l_t",
                "t sh l_z",
                "k t l_t",
                "d z",
                "m p",
                "p t l_z",
                "n s",
                "y n",
                "y t",
                "y s",
                "k s t",
                "n d",
                "f s",
                "sh t",
                "k s l_t",
                "k s l_z",
                "w s",
                "ng k",
                "t z",
                "p r",
                "y l",
                "s l",
                "ng g l_z",
                "m s",
                "s p",
                "r s",
                "d s",
                "l d",
                "l s",
                "g s",
                "s n l_z",
                "f t l_z",
                "p t l_t",
                "g z",
                "s n",
                "g m",
                "s k l_t",
                "w n",
                "n sh",
                "y d",
                "l t",
                "r t",
                "g n",
                "m z",
                "b",
                "d",
                "f",
                "g",
                "gn",
                "k",
                "l",
                "l_n",
                "l_t",
                "l_z",
                "m",
                "n",
                "ng",
                "p",
                "r",
                "s",
                "sh",
                "t",
                "v",
                "z",
                "zh",
                "y",
                "w",
                "hw",
            };

        private static readonly string[] _nucleusSlicesData = new string[]
            {
                "y eh r",
                "y on l_n",
                "m ae r",
                "l eh r",
                "y eh n",
                "n eh r",
                "m eh r",
                "w ae r",
                "y oh n",
                "m oh r",
                "n ae l",
                "y in l_n",
                "l ae r",
                "r ae l",
                "n eh l",
                "y ae l",
                "r eh n",
                "n ae r",
                "m ae l",
                "y eh l",
                "l iy n",
                "n af m",
                "r eh r",
                "l in l_n",
                "m uy l",
                "m iy n",
                "r iy n",
                "l oe r",
                "y oe r",
                "l af m",
                "y af m",
                "y ae r",
                "r eh l",
                "r af m",
                "r on l_n",
                "r in l_n",
                "r oh n",
                "y eh m",
                "r ae y",
                "l eh n",
                "m ae n",
                "m eh l",
                "r an l_n",
                "m eh n",
                "m an l_n",
                "l oh r",
                "n oh r",
                "r ae m",
                "n oe r",
                "r iy m",
                "y oh m",
                "l an l_n",
                "l on l_n",
                "w ae l",
                "r eh y",
                "l oh n",
                "y an l_n",
                "m iy l",
                "n iy l",
                "m ow r",
                "hw eh l",
                "m uy r",
                "r oe r",
                "y oh l",
                "r ae r",
                "m oe r",
                "l uy r",
                "l ae m",
                "m in l_n",
                "r oh m",
                "r oh l",
                "un l_n",
                "r ae",
                "r eh",
                "r ey",
                "eh r",
                "r iy",
                "y ey",
                "r ax",
                "l iy",
                "y on",
                "ae r",
                "l ae",
                "r on",
                "m ae",
                "n ae",
                "r oh",
                "n iy",
                "w ae",
                "oh r",
                "l eh",
                "m iy",
                "r an",
                "y ae",
                "l ey",
                "m an",
                "y oh",
                "ae l",
                "y eh",
                "l oh",
                "l ax",
                "n ey",
                "n eh",
                "eh l",
                "m ey",
                "uy r",
                "m oh",
                "on l_n",
                "r ow",
                "oe r",
                "n ax",
                "uw r",
                "eh n",
                "af m",
                "l uy",
                "l an",
                "m eh",
                "r uw",
                "r uy",
                "iy n",
                "oh n",
                "in l_n",
                "n oh",
                "hw iy",
                "uy l",
                "m uy",
                "iy l",
                "oh l",
                "iy r",
                "m ax",
                "l ow",
                "an l_n",
                "n ow",
                "n uy",
                "y ax",
                "y in",
                "m on",
                "y an",
                "m uw",
                "y ow",
                "r in",
                "l uw",
                "n an",
                "ae n",
                "ae y",
                "l on",
                "l in",
                "eh m",
                "m ow",
                "l af",
                "n on",
                "r af",
                "oh m",
                "n af",
                "w iy",
                "iy m",
                "y eu",
                "iy y",
                "w in",
                "y af",
                "ow r",
                "ae m",
                "l oe",
                "eh y",
                "uw l",
                "n uw",
                "n eu",
                "n oe",
                "r eu",
                "y iy",
                "w eh",
                "iy ng",
                "l eu",
                "m in",
                "ey r",
                "y oe",
                "m af",
                "uw y",
                "ow l",
                "y uw",
                "uy m",
                "ow m",
                "r oe",
                "m oe",
                "oe y",
                "m eu",
                "n in",
                "hw ae",
                "oe l",
                "af r",
                "oh w",
                "y uy",
                "hw eh",
                "ow n",
                "oe n",
                "uy n",
                "uw m",
                "w af",
                "ey n",
                "r un",
                "w an",
                "w as",
                "w ax",
                "w eu",
                "w ey",
                "w oe",
                "w oh",
                "w on",
                "w ow",
                "w un",
                "w uw",
                "w uy",
                "hw af",
                "hw an",
                "hw as",
                "hw ax",
                "hw eu",
                "hw ey",
                "hw in",
                "hw oe",
                "hw oh",
                "hw on",
                "hw ow",
                "hw un",
                "hw uw",
                "hw uy",
                "y as",
                "y un",
                "ae",
                "af",
                "an",
                "as",
                "ax",
                "eh",
                "eu",
                "ey",
                "in",
                "iy",
                "oe",
                "oh",
                "on",
                "ow",
                "un",
                "uw",
                "uy",
                "b l",
                "b r",
                "d l",
                "d r",
                "p l",
                "p r",
                "t l",
                "t r",
                "f l",
                "f r",
                "g l",
                "g r",
                "k l",
                "k r",
                "v l",
                "v r",
            };

        #endregion

        #region Construction

        /// <summary>
        /// Construction.
        /// </summary>
        public FrCASliceData()
        {
            Helper.FillData(_codaSlicesData, CodaSlices);
            Helper.FillData(_nucleusSlicesData, NucleusSlices);
            Helper.FillData(_onsetSlicesData, OnsetSlices);

            // Since we did not(don't know how) generate fr-CA truncate table, 
            // we can use simple table as below:
            // static TruncNucleusRuleType g_TruncNucleusRuleTableFRC[] = 
            // {
            //    {TruncFromRight, {all coda},
            //    {TruncFromLeft, {all onset},
            // };
            // That is, if a phone string is not a nucleus, we first cut one phone from left,
            // then from right, then left, then right, until we find the final nucleus.
            // TODO: terryw will provide this table like en-US and es-MX.
            NucleusTruncateRules.Clear();

            // Truncate the Right Nasal consonant, if exist
            NucleusTruncateRules.Add(
                new NucleusTruncateRule(TruncateSide.Right, "m n l_n ng"));

            // Truncate the Left Nasal consonant, if exist
            NucleusTruncateRules.Add(
                new NucleusTruncateRule(TruncateSide.Left, "m n l_n ng"));

            // Truncate the Right "y, w, hw" consonant, if exist
            // Actually, it should not exist here
            NucleusTruncateRules.Add(
                new NucleusTruncateRule(TruncateSide.Right, "y w hw"));

            // Truncate the Left lateral consonant, if exist
            // Here, the nucleus pattern should organize as [y w] xx [l r]
            NucleusTruncateRules.Add(
                new NucleusTruncateRule(TruncateSide.Left, "l r"));

            // Truncate the Right "l" consonant, if exist
            NucleusTruncateRules.Add(
                new NucleusTruncateRule(TruncateSide.Right, "l"));

            // Truncate the Left y w consonant, if exist
            NucleusTruncateRules.Add(
                new NucleusTruncateRule(TruncateSide.Left, "y w hw"));

            // Truncate the Right "r" consonant, if exist
            NucleusTruncateRules.Add(
                new NucleusTruncateRule(TruncateSide.Right, "r"));
        }

        #endregion

        #region Properties

        /// <summary>
        /// Language of this instance.
        /// </summary>
        public override Language Language
        {
            get { return Language.FrCA; }
        }

        #endregion
    }
}