<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Tts.Offline</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Tts.Offline.FileListMap">
            <summary>
            Class to manage file list map file
            File list map file has following format:
            ((sentence id) (relatice path))+.
            <example>
            100001 Am_En101\100001
            100002 Am_En101\100002.
            </example>
            Advantage of using file list map:
            1) Group related files into same folder, and give the folder a meaningful label
               this make the data easy to understand and management
            2) Can divide all files into many subdirs, this can speed up the file searching.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.MapToFolder(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Map filemap into folder indexing items 
            For example, it will map following items
                10001 ENU001\10001
                10002 ENU001\10002
                10003 ENU002\10003
            Into
                ENU001  10001
                        10002
                ENU002  10003.
            </summary>
            <param name="map">File list map.</param>
            <returns>Folder indexing items.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.CreateInstance(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Build file list instance from given file directory,
            The value in the dictionary would be sorted by the key.
            </summary>
            <param name="items">Directory to search, in 2 levels.</param>
            <returns>FileListMap.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.CreateInstance(System.String,System.String)">
            <summary>
            Build file list instance from given file directory,
            The value in the dictionary would be sorted by the key.
            </summary>
            <param name="targetDir">Directory to search, in 2 levels.</param>
            <param name="fileExt">Such as ".wav" or ".txt".</param>
            <returns>FileListMap.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.Build(System.String,System.String)">
            <summary>
            Build filemap file from given  file directory,
            The value in the dictionary would be sorted by the key.
            </summary>
            <param name="targetDir">Directory to search, in 2 levels.</param>
            <param name="fileExt">Such as ".wav" or ".txt".</param>
            <returns>File list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.Contains(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Compare whether fileListA contains fileListB.
            </summary>
            <param name="fileListA">File list A.</param>
            <param name="fileListB">File list B.</param>
            <returns>Whether fileListA contains fileListB.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.Compare(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Compare whether the two filelists are the same.
            </summary>
            <param name="fileListA">File list A.</param>
            <param name="fileListB">File list B.</param>
            <returns>Whether the two filelist are the same.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.BuildSubMap(System.String,System.String,System.String,System.String)">
            <summary>
            Delete sentences contained in dirB from dirA.
            </summary>
            <param name="dirA">The dir to build file list, from which will delete
            the stencnes in dirB.</param>
            <param name="fileExtA">The file extension to build file list, from which
            will delete the stencnes in dirB.</param>
            <param name="dirB">The dir to build file list, sentences in this set
            fill be deleted form dirA fileList.</param>
            <param name="fileExtB">The file extension to build file list, sentences
            in this set fill be deleted form dirA fileList.</param>
            <returns>Result map.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.BuildSubMap(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Delete sentences contained in mapB from mapA.
            </summary>
            <param name="mapA">Filelist from which will delete the stencnes in dirB.</param>
            <param name="mapB">Sentences in this set fill be deleted form dirA fileList.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.BuildIntersectionMap(System.String,System.String,System.String)">
            <summary>
            Build intersection file map, which only includes those items in both directories.
            </summary>
            <param name="leftDir">Left direcroty.</param>
            <param name="rightDir">Right directory.</param>
            <param name="fileExt">File extension.</param>
            <returns>Map: sentence id to relative path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.BuildIntersectionMap(System.String,System.String,System.String,System.String)">
            <summary>
            Build intersection file map, which only includes those items in both directories.
            </summary>
            <param name="leftDir">Left direcroty.</param>
            <param name="leftFileExt">Left file extension.</param>
            <param name="rightDir">Right directory.</param>
            <param name="rightFileExt">Right file extension.</param>
            <returns>Map: sentence id to relative path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.BuildIntersectionMap(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Build intersection map from given two maps,
            And un-common items will be removed from the operated map .
            </summary>
            <param name="operatedMap">First map to operate on and
            un-common items will be removed from this instance.</param>
            <param name="referenceMap">Second map to operate on, it is used for reference.</param>
            <returns>Item id list which is removed from operated map.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.BuildIntersectionMap(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Build intersection map from given two maps,
            And un-common items will be removed from the operated map .
            </summary>
            <param name="operatedMap">First map to operate on and
            un-common items will be removed from this instance.</param>
            <param name="referenceMap">Second map to operate on, it is used for reference.</param>
            <param name="errorDataMap">If there are the same key but different relative path
            In operatedMap and referenceMap, these keys will be saved in errorDataList parameter.
            </param>
            <returns>Item id list which is removed from operated map.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.RemoveItems(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove given id list from the keyed dictionary.
            </summary>
            <param name="dictionary">Dictionary to operate on.</param>
            <param name="removedList">Id list to remove.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.GroupFileIntoSubDir(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            According to FileListMap file, group/move files
            Under fileDir with extension fileExt to sub directory.
            </summary>
            <param name="fileDir">Target file directory.</param>
            <param name="fileExt">File extension to process.</param>
            <param name="targetDir">Target directory to save grouped files.</param>
            <param name="mapFilePath">According map file.</param>
            <param name="writeOutToConsole">Whether to write out to console.</param>
            <param name="copy">Whether to copy or move file to new location.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.ReadAllData(System.String,System.Boolean)">
            <summary>
            Sentence id => relative location.
            </summary>
            <param name="mapFilePath">File list map file to read.</param>
            <param name="sort">Whether sort by key.</param>
            <returns>File list map.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.ReadAllData(System.String)">
            <summary>
            Sentence id => relative location.
            </summary>
            <param name="mapFilePath">File list map file to read.</param>
            <returns>File list map.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.WriteAllData(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Write all data into file list file.
            </summary>
            <param name="fileMaps">File list.</param>
            <param name="filePath">Target file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.WriteAllData(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Int32)">
            <summary>
            Save filelist map to file.
            </summary>
            <param name="fileMaps">File list map.</param>
            <param name="filePath">Target file path to save.</param>
            <param name="maxEntryNumber">Maximum entry count to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.RemoveErrorSentence(Microsoft.Tts.Offline.DataErrorSet,System.String)">
            <summary>
            Remove error sentence from map file.
            </summary>
            <param name="errorSet">Data error set.</param>
            <param name="mapFilePath">File list map file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.RemoveErrorSentence(Microsoft.Tts.Offline.Common.ErrorSet,System.String)">
            <summary>
            Remove error sentence from map file.
            </summary>
            <param name="errorSet">Data error set.</param>
            <param name="mapFilePath">File list map file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.IsValidFileListMap(System.String)">
            <summary>
            Check the file map is invalid or not.
            </summary>
            <param name="filePath">The file path.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.Merge(System.String,System.String,System.Boolean)">
            <summary>
            Merge source file list to target file list.
            </summary>
            <param name="sourceFileListPath">SourceFileListPath.</param>
            <param name="targetFileListPath">TargetFileListPath.</param>
            <param name="removeNotExists">RemoveNotExists.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.BuildPath(Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String)">
            <summary>
            Build file path according to the given information.
            </summary>
            <param name="map">The given map. If it is null, the sentence id will be used directly.</param>
            <param name="folder">The given folder.</param>
            <param name="sid">Sentence id.</param>
            <param name="extension">Extension name.</param>
            <returns>File path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.RemoveItems(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove given id list from file map.
            </summary>
            <param name="removedList">Id list to remove.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.Load(System.String)">
            <summary>
            Load file list from file.
            </summary>
            <param name="filePath">File to load from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.Save(System.String)">
            <summary>
            Save file list into file.
            </summary>
            <param name="filePath">Target file to save to.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FileListMap.BuildPath(System.String,System.String,System.String)">
            <summary>
            Build file path.
            </summary>
            <param name="directory">Directory.</param>
            <param name="id">Sentence id.</param>
            <param name="extension">Extension name.</param>
            <returns>File path.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.FileListMap.Map">
            <summary>
            Gets Map data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FileListMap.FilePath">
            <summary>
            Gets or sets File path of this file list map.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.StatusRecorder">
            <summary>
            User Interface class, provides the function for end user to record the finished steps.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.StatusRecorder._schema">
            <summary>
            Status recorder schema.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.StatusRecorder._statusFilePath">
            <summary>
            The status file path.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.StatusRecorder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the StatusRecorder class.
            </summary>
            <param name="statusFilePath">The status file path to record status information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.StatusRecorder.CheckStepStatus(System.String)">
            <summary>
            Checks whether the step is successfully finished last time.
            </summary>
            <param name="stepName">The step name.</param>
            <returns>Whether the step is successfully finished last time.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.StatusRecorder.RecordCurrentStatus(System.String)">
            <summary>
            Records current status.
            </summary>
            <param name="stepName">The status information needs to record.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.StatusRecorder.GetCurrentStatus">
            <summary>
            Parses the status file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.StatusRecorder.ParseFinishedSteps(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse the status file to get finished modules and steps.
            </summary>
            <param name="dom">StatusRecorder XML document.</param>
            <param name="nsmgr">XML namespace.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.StatusRecorder.FinishedSteps">
            <summary>
            Gets or sets the array to record finished steps.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.StatusRecorder.StatusFilePath">
            <summary>
            Gets or sets status file path (with externsion .xml).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.StatusRecorder.ConfigSchema">
            <summary>
            Gets status file schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.StatusRecorder.IndexOfPreviousStep">
            <summary>
            Gets or sets the index of previous step.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.WaveSegment">
            <summary>
            Segmentation point information
            In segmentation file, this is presented as (start time and label).
            <example>
            0.10000 sil.
            </example>
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WaveSegment._rootMeanSquare">
            <summary>
            Signal metrics
            The mean of a signal x is defined as the average value of its samples:
            <![CDATA[
                meanOf(x)
                {
                    mean = 0;
                    for ( i = 0; i < n; i++)
                    {
                        mean += x[n];
                    }
                    mean = mean / n;
                    return mean;
                }
            ]]>
            The total energy of a signal x is defined as the sum of squared moduli:
            <![CDATA[
                energyOf(x)
                {
                    energy = 0;
                    for ( i = 0; i < n; i++)
                    {
                        energy += x[n]^2;
                    }
                    return energy;
                }
            ]]>
            The average power of a signal x is defined as the energy per sample:
            Signal power represents energy per sample. 
            <![CDATA[
                averagePowerOf(x)
                {
                    return energyOf(x) / n;
                }
            ]]>
            The root mean square (RMS) level of a signal x
            <![CDATA[
                rootMeanSquareOf(x)
                {
                    return Math.Sqrt(averagePowerOf(x));
                }
            ]]>
            The variance (more precisely the sample variance) of the signal x
            Is defined as the power of the signal with its mean removed
            <![CDATA[
                varianceOf(x)
                {
                    variance = 0;
                    for ( i = 0; i < n; i++)
                    {
                        variance += (x[n] - meanOf(x))^2;
                    }
                    variance = variance / n;
                    return Math.Sqrt(variance);
                }
            ]]>
            The norm of a signal  is defined as the square root of its total energy
            We think of normOf(x) as the length of x in N-space.
            Furthermore, |normOf(x) - normOf(y)| is regarded as the distance 
            Between x and y. The norm can also be thought of as the ``absolute value''
            Or ``radius'' of a vector.
            <![CDATA[
                normOf(x)
                {
                    return Math.Sqrt(energyOf(x));
                }
            ]]>
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WaveSegment.FormatLabel(System.String)">
            <summary>
            Format label.
            </summary>
            <param name="label">Label to format.</param>
            <returns>Formated label.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WaveSegment.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>String presentation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WaveSegment.ToString(System.Boolean)">
            <summary>
            Convert to string presentation.
            </summary>
            <param name="hasEndTime">Has end time in string.</param>
            <returns>String presentation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WaveSegment.Clone">
            <summary>
            Clone current instance to a new one.
            </summary>
            <returns>A WaveSegment object.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.PitchRange">
            <summary>
            Gets or sets Pitch range.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.RootMeanSquare">
            <summary>
            Gets or sets Energy in root mean square.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.Energy">
            <summary>
            Gets Logged energy, this is Math.Log(RootMeanSquare).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.AveragePitch">
            <summary>
            Gets or sets Average of pitch.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.StartTime">
            <summary>
            Gets or sets  the start time stamp fo this segment in original waveform file (second).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.EndTime">
            <summary>
            Gets or sets End time stamp fo this segment in original waveform file (second).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.Duration">
            <summary>
            Gets Duration of this segment (second).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.Tag">
            <summary>
            Gets or sets Tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.Label">
            <summary>
            Gets or sets Label/name of this segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.IsSilenceFeature">
            <summary>
            Gets a value indicating whether the segment has silence feature.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.IsSilencePhone">
            <summary>
            Gets a value indicating whether this segment is a silence segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.IsShortPausePhone">
            <summary>
            Gets a value indicating whether this segment is a short pause segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.Confidence">
            <summary>
            Gets or sets Confidence level, applied when do automatic alignment or something else.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.LeftPhone">
            <summary>
            Gets Left phone of this segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveSegment.RightPhone">
            <summary>
            Gets Right phone of this segment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.MapEntry">
            <summary>
            Mapping between two alignment files.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.MapEntry.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.MapEntry"/> class.
            </summary>
            <param name="left">Left segment index.</param>
            <param name="right">Right segment index.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.MapEntry.RightIndex">
            <summary>
            Gets or sets Left side alignment file, -1 stands for dropped.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.MapEntry.LeftIndex">
            <summary>
            Gets or sets Right side alignment file, -1 stands for dropped.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.SegmentSetting">
            <summary>
            Segment file process setting.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.SegmentSetting"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentSetting.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.SegmentSetting"/> class.
            </summary>
            <param name="hasEndTime">End time in segment file.</param>
            <param name="hasHeadSilence">Head silence in segment file.</param>
            <param name="hasTailSilence">Tail silence in segment file.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentSetting.HasEndTime">
            <summary>
            Gets or sets a value indicating whether Has End timestamp for each segment in alignment file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentSetting.HasHeadSilence">
            <summary>
            Gets or sets a value indicating whether there has a silence segment at the head of segments in alignment file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentSetting.HasTailSilence">
            <summary>
            Gets or sets a value indicating whether there has a silence segment at the tail of segments in alignment file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.SegmentFile">
            <summary>
            Class to manage segmentation data.
            <example>
            0.00000 sil
            0.28000 ax
            0.38000 m+eh
            0.55000 r+ax
            0.71000 k
            0.76000 ax+n
            0.92000 sil.
            </example>
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SegmentFile.FileExtension">
            <summary>
            Segment file extension.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.AssertSegmentsEqual(System.String,System.String)">
            <summary>
            Assert two segments are equal with each other.
            </summary>
            <param name="leftDir">Left segment dir to compare.</param>
            <param name="rightDir">Right segment dir to compare.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.ConvertTriphoneMlf2Phone(System.String,System.String)">
            <summary>
            Convert triphone MLF(mast label file) to phone MLF.
            </summary>
            <param name="triphoneMlf">Tri-phone based MLF file path.</param>
            <param name="phoneMlf">Phone based MLF file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.ConvertPhone2SyllableMlf(System.String,System.String)">
            <summary>
            Convert phone MLF file to syllable MLF file.
            </summary>
            <param name="phoneMlf">Phone based MLF file path.</param>
            <param name="syllableMlf">Syllable based MLF file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.ReadAllDataFromMlf(System.String)">
            <summary>
            Load MLF file.
            </summary>
            <param name="filePath">MLF file path.</param>
            <returns>Segment file dictionary, indexed by sentence id.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.ReadAllData(System.IO.TextReader)">
            <summary>
            Load segment data from text reader stream.
            </summary>
            <param name="tr">Text reader to read segment from.</param>
            <returns>Wave segment collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.ReadAllData(System.IO.TextReader,Microsoft.Tts.Offline.SegmentSetting)">
            <summary>
            Load segment data from text reader stream.
            </summary>
            <param name="tr">Text reader to read segment from.</param>
            <param name="setting">Setting.</param>
            <returns>Wave segment collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.IsValid(System.String)">
            <summary>
            Tell whether one segment file is a valid one.
            </summary>
            <param name="filePath">Segment file to test.</param>
            <returns>True if valid, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.IsValid(System.String,Microsoft.Tts.Offline.SegmentSetting)">
            <summary>
            Tell whether one segment file is a valid one.
            </summary>
            <param name="filePath">Segment file to test.</param>
            <param name="setting">Setting.</param>
            <returns>True if valid, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.ReadAllData(System.String)">
            <summary>
            Load segment data from text file.
            </summary>
            <param name="filePath">Segment file path.</param>
            <returns>Wave segment collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.ReadAllData(System.String,Microsoft.Tts.Offline.SegmentSetting)">
            <summary>
            Load segment data from text file.
            </summary>
            <param name="filePath">Segment file path.</param>
            <param name="setting">Setting.</param>
            <returns>Wave segment collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.MatchSegments(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.WaveSegment},System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.WaveSegment})">
            <summary>
            Match manual alignment segments with forced alignment segments.
            Manual alignment can only add or delete silence tags against forced alignment.
            </summary>
            <param name="leftSegments">Left wave segment collection.</param>
            <param name="rightSegments">Right wave segment collection.</param>
            <returns>Matched entry collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.RemoveDuplicatedSilence(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.WaveSegment})">
            <summary>
            Delete continue silence tags (duplicated) in segmentation sequence.
            </summary>
            <param name="segments">Wave segment collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Load(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initialize from a segment file.
            </summary>
            <param name="filePath">Segment file.</param>
            <param name="fHasEndTime">Whether to check the ending silence.</param>
            <param name="fHasHeadSilence">Whether to check the head silence.</param>
            <param name="fHasTailSilence">Whether to check the tail silence.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Load(System.String)">
            <summary>
            Initialize from a segment file.
            </summary>
            <param name="filePath">Segment file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Load(System.String,Microsoft.Tts.Offline.SegmentSetting)">
            <summary>
            Initialize from a segment file.
            </summary>
            <param name="filePath">Segment file.</param>
            <param name="setting">Setting.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Load(System.IO.TextReader)">
            <summary>
            Initialize from text stream.
            </summary>
            <param name="tr">Segment text stream.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Load(System.IO.TextReader,Microsoft.Tts.Offline.SegmentSetting)">
            <summary>
            Initialize from text stream.
            </summary>
            <param name="tr">Segment text stream.</param>
            <param name="setting">Setting.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Save(System.String)">
            <summary>
            Save this segment data into file.
            </summary>
            <param name="filePath">Target file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Save(System.String,Microsoft.Tts.Offline.SegmentSetting)">
            <summary>
            Save this segment data into file.
            </summary>
            <param name="filePath">Target file to save.</param>
            <param name="setting">Setting.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Save(System.IO.TextWriter)">
            <summary>
            Save this segment data into TextWriter.
            </summary>
            <param name="tw">Text writer to write the segments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Save(System.IO.TextWriter,Microsoft.Tts.Offline.SegmentSetting)">
            <summary>
            Save this segment data into TextWriter.
            </summary>
            <param name="tw">Text writer to write the segments.</param>
            <param name="setting">Setting.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.ConvertSilenceToShortPause(System.Double)">
            <summary>
            Converts silence (excluding intial/final silence) to short pause.
            </summary>
            <param name="threshold">The silence whose duration is greater than the threshold won't be convert to short pause.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.RemoveSilenceSegment(System.Int32)">
            <summary>
            Removes the silence segment in the given index.
            The duration of silence phone will be equally split into the left and right adjacent phones.
            </summary>
            <param name="index">The index should be removed. The segment should have silence feature.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.InsertShortPauseSegment(System.Int32)">
            <summary>
            Insert a new short pause phone in the given index.
            The duration of the short pause will be equally splitted from the left and right adjacent phones.
            </summary>
            <param name="index">The new short pause phone will be inserted into the position represented by 'index'.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.UpdateNonSilenceWaveSegments">
            <summary>
            Update Non-silence wave segments from the all segments.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentFile.Shift(System.Single)">
            <summary>
            Shift certain timespan for each alignment boundary.
            </summary>
            <param name="shiftDuration">Shift duration.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentFile.AverageConfidence">
            <summary>
            Gets Average automatic alignment confidence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentFile.Id">
            <summary>
            Gets Sentence id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentFile.FilePath">
            <summary>
            Gets or sets Sentence file path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentFile.WaveSegments">
            <summary>
            Gets Segment collection.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentFile.NonSilenceWaveSegments">
            <summary>
            Gets Non-silence segement collection.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.MessageCombine">
            <summary>
            Message Combination Manner definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MessageCombine.Concatenate">
            <summary>
            Directly concatenate the message.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MessageCombine.Nested">
            <summary>
            Put inner message nested inside the formatted message
            Inner Message is reserved as 1st parameter in the formatted message.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.ErrorSeverity">
            <summary>
            Error severity.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.ErrorSeverity.MustFix">
            <summary>
            Default Severity
            If not fix, it will break the process.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.ErrorSeverity.Warning">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.ErrorSeverity.NoError">
            <summary>
            No error, or just log information.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.ErrorAttribute">
            <summary>
            Error Attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.ErrorAttribute"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorAttribute.GetAttribute(System.Enum)">
            <summary>
            Get attribute for the error enum.
            </summary>
            <param name="error">Error num.</param>
            <returns>Error attribute.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.ErrorAttribute.Message">
            <summary>
            Gets or sets Error Message.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.ErrorAttribute.Manner">
            <summary>
            Gets or sets Message combination manner.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.ErrorAttribute.ConcateString">
            <summary>
            Gets or sets Concatenation string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.ErrorAttribute.Severity">
            <summary>
            Gets or sets Error severity.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.Error">
            <summary>
            Basic Error class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.#ctor(System.Enum,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.Error"/> class.
            </summary>
            <param name="error">Error enum.</param>
            <param name="args">Argument list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.#ctor(System.Enum,Microsoft.Tts.Offline.Common.Error,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.Error"/> class.
            </summary>
            <param name="error">Error enum.</param>
            <param name="innerError">Inner error.</param>
            <param name="args">Argument list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.BuildMessage(System.Enum,System.String[])">
            <summary>
            Build error message according to error enum and argument list.
            </summary>
            <param name="errorEnum">Error enum.</param>
            <param name="argList">Argument list.</param>
            <returns>Error message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.ToString">
            <summary>
            ToString.
            </summary>
            <returns>Expanded error message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.ToString(System.Boolean)">
            <summary>
            ToString.
            </summary>
            <param name="inner">Whether containing inner error message.</param>
            <returns>Error message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.ToString(System.Boolean,System.Boolean)">
            <summary>
            ToString with whether inner message and whether with prefix.
            </summary>
            <param name="inner">Whether inner message.</param>
            <param name="prefix">Whether with prefix.</param>
            <returns>Error message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.Equals(System.Object)">
            <summary>
            Override the Equals function.
            </summary>
            <param name="obj">Object.</param>
            <returns>True for equal.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.GetHashCode">
            <summary>
            Override the GetHashCode function.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.AddHead(System.String[],System.String)">
            <summary>
            Insert string before the string array.
            </summary>
            <param name="list">String array.</param>
            <param name="head">The inserted head.</param>
            <returns>Added string array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.BuildMessageWithPrefix(System.Boolean)">
            <summary>
            Build error string with prefix.
            </summary>
            <param name="inner">Whether build with inner message.</param>
            <returns>Error string with prefix.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.ValidateArgument">
            <summary>
            Validate the argument list whether match the error formatted message.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.Error.ArgumentEquals(System.String[])">
            <summary>
            Check whether the arguments are equals to this.args.
            </summary>
            <param name="args">Arguments.</param>
            <returns>True for equal.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.Error.Severity">
            <summary>
            Gets or sets Error severity.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.Error.Enum">
            <summary>
            Gets The error enum.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.Error.InnerError">
            <summary>
            Gets The inner error.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.Error.Args">
            <summary>
            Gets Argument list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.CommonError">
            <summary>
            Common Error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.CommonError.NotConsistentLanguage">
            <summary>
            Not consistent language between two objects.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.CommonError.FailedParseEnum">
            <summary>
            Empty symbol.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.ErrorSet">
            <summary>
            Error set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.ErrorSet"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Add(Microsoft.Tts.Offline.Common.Error)">
            <summary>
            Add an error to the error set.
            </summary>
            <param name="error">New error.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.AddRange(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Add an error set to current error set.
            </summary>
            <param name="errorSet">Error set to be added.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Add(System.Enum,System.String[])">
            <summary>
            Add an error to the error set.
            </summary>
            <param name="errorEnum">Error enum.</param>
            <param name="argList">Argument list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Add(System.Enum,Microsoft.Tts.Offline.Common.Error,System.String[])">
            <summary>
            Add an error containing the inner error to the error set.
            </summary>
            <param name="errorEnum">Error enum.</param>
            <param name="innerError">Inner error.</param>
            <param name="argList">Argument list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Remove(Microsoft.Tts.Offline.Common.Error)">
            <summary>
            Remove an error from the error set.
            </summary>
            <param name="error">Error to be removed.</param>
            <returns>Whether the error is successfully removed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.RemoveRange(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Remove an error set from current error set.
            </summary>
            <param name="errorSet">Error set to be removed.</param>
            <returns>Error set be actually removed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Clear">
            <summary>
            Clear the error set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Merge(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Merge with another error set.
            </summary>
            <param name="errorSet">Another error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Contains(Microsoft.Tts.Offline.Common.ErrorSeverity)">
            <summary>
            Check the error set whether containing the error with certain severity.
            </summary>
            <param name="severity">Quried error severity.</param>
            <returns>True for containing, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.GetSeverityCount(Microsoft.Tts.Offline.Common.ErrorSeverity)">
            <summary>
            Get the count of errors with certain severity.
            </summary>
            <param name="severity">Error severity.</param>
            <returns>Count of error.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.SetSeverity(Microsoft.Tts.Offline.Common.ErrorSeverity)">
            <summary>
            Set severity of all errors to specified severity.
            </summary>
            <param name="severity">Severity specified to set to.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Contains(System.Enum)">
            <summary>
            Check whether contains the special error enum.
            </summary>
            <param name="errorEnum">Error enum.</param>
            <returns>True for ccontaining, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Export(System.IO.TextWriter)">
            <summary>
            Export the error report.
            </summary>
            <param name="textWriter">Text writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Export(System.String,System.String,System.Boolean)">
            <summary>
            Append this instance to text file.
            </summary>
            <param name="filePath">Target file to append.</param>
            <param name="title">Tag of the errors.</param>
            <param name="append">Whether appending.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.ErrorsString">
            <summary>
            Override ErrorSet ToString method.
            </summary>
            <returns>String value represents the error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.ErrorsString(System.Boolean)">
            <summary>
            Override ErrorSet ToString method.
            </summary>
            <param name="sort">Whether need sort the error.</param>
            <returns>String value represents the error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.ErrorSet.Export(System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Export the errors into string collection.
            </summary>
            <param name="errors">Error string.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.ErrorSet.Count">
            <summary>
            Gets Error number.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.ErrorSet.Errors">
            <summary>
            Gets Error collection in this set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.MathHelper">
            <summary>
            Common math functions.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.MathHelper.LogFunctions">
            <summary>
            The class for all kinds of Log scale functions.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.LogFunctions.LogMin">
            <summary>
            The minimal log value (corresponds to 0.0).
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.MathHelper.LogFunctions.Add(System.Double,System.Double)">
            <summary>
            Log Add function.
            </summary>
            <param name="logNum1">The fist number to be added.</param>
            <param name="logNum2">The second number to be added.</param>
            <returns>The log scale sum value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.MathHelper.LogFunctions.Multiply(System.Double,System.Double)">
            <summary>
            Log Multiply function.
            </summary>
            <param name="logNum1">The multiplier 1.</param>
            <param name="logNum2">The multiplier 2.</param>
            <returns>The log scale product value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.MathHelper.LogFunctions.Average(System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Log Average function.
            </summary>
            <param name="logNums">The log scale values.</param>
            <returns>The log scale average values.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.MathHelper.Range`1">
            <summary>
            The Range class.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.Range`1.Min">
            <summary>
            The minimal value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.Range`1.Mean">
            <summary>
            The mean value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.Range`1.Median">
            <summary>
            The median value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.Range`1.Max">
            <summary>
            The maximum value.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.MathHelper.LeastSquaresFitter">
            <summary>
            The least square fitter class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.MathHelper.LeastSquaresFitter.DoLinearFitting(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Perform linear fitting on the inputing vectors.
            </summary>
            <param name="variableXs">The independent variable vector.</param>
            <param name="variableYs">The dependent variable vector.</param>
            <returns>The linear fitting result.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.MathHelper.LeastSquaresFitter.LinearFittingResult">
            <summary>
            The least square fitting result structure
            Y = aX + b
            A: the fitting slope
            B: the offset.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.LeastSquaresFitter.LinearFittingResult.Offset">
            <summary>
            The offset value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.LeastSquaresFitter.LinearFittingResult.Slope">
            <summary>
            The slope of fitting line.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.LeastSquaresFitter.LinearFittingResult.CorrelationCoefficient">
            <summary>
            The correlation coefficient.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.LeastSquaresFitter.LinearFittingResult.AverageX">
            <summary>
            The average value of X.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.MathHelper.LeastSquaresFitter.LinearFittingResult.AverageY">
            <summary>
            The average value of Y.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.XmlDataFile">
            <summary>
            Base class for Xml Data file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.XmlDataFile.validated">
            <summary>
            Whether data has been validated.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.XmlDataFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.XmlDataFile"/> class.
            </summary>
            <param name="language">Language of this data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Load(System.String)">
            <summary>
            Load file from given location.
            </summary>
            <param name="filePath">Location of the file to load from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Load(System.String,System.Object)">
            <summary>
            Load file from given location.
            </summary>
            <param name="filePath">Location of the file to load from.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Load(System.IO.StreamReader)">
            <summary>
            Load from stream reader, including the schema checking
            Using PerformanceLoad() first, if it is not overrided, use Load().
            </summary>
            <param name="reader">Stream to load from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Load(System.IO.StreamReader,System.Object)">
            <summary>
            Load from stream reader, including the schema checking
            Using PerformanceLoad() first, if it is not overrided, use Load().
            </summary>
            <param name="reader">Stream to load from.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.SaveAs(System.String)">
            <summary>
            Save the file to a new one, after saving as, if user save again, it will saved to
            The changed file path.
            </summary>
            <param name="filePath">File to be saved as.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.SaveAs(System.String,System.Text.Encoding,System.Object)">
            <summary>
            Save the file to a new one, after saving as, if user save again, it will saved to
            The changed file path.
            </summary>
            <param name="filePath">File to be saved as.</param>
            <param name="encoding">Encoding.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Save(System.String)">
            <summary>
            Save into target file using default encoding; 
            If the data are loaded from original file, use the encoding of the input file;
            If not, use the Encoding.Default.
            </summary>
            <param name="filePath">Target file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Save(System.String,System.Text.Encoding)">
            <summary>
            Save into target file.
            </summary>
            <param name="filePath">Target file path.</param>
            <param name="encoding">Encoding of the target file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Save(System.String,System.Text.Encoding,System.Object)">
            <summary>
            Save into target file.
            </summary>
            <param name="filePath">Target file path.</param>
            <param name="encoding">Encoding of the target file.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Save(System.Xml.XmlWriter,System.Object)">
            <summary>
            Save data into target XML writer.
            </summary>
            <param name="writer">Writer stream.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Validate">
            <summary>
            Validate.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Validate(Microsoft.Tts.Offline.Common.XmlValidateSetting)">
            <summary>
            Validate.
            </summary>
            <param name="setting">Validation setting.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Reset">
            <summary>
            Reset xml data file for re-use.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.ForcedValidate">
            <summary>
            Forced Validate.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.ReplaceHexString(System.String)">
            <summary>
            Convert hex string in XML file to unicode format.
            </summary>
            <param name="from">Original string read from XML file.</param>
            <returns>Converted unicode format string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.PerformanceLoad(System.IO.StreamReader,System.Object)">
            <summary>
            Performance load.
            </summary>
            <param name="reader">Stream reader.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load data file from XML document.
            </summary>
            <param name="xmlDoc">XML document to load from.</param>
            <param name="nsmgr">Namespace, with local tag 'tts'.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Performance save operations.
            </summary>
            <param name="writer">Writer.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.XmlDataFile.LoadInternal(System.IO.StreamReader,System.Object)">
            <summary>
            Load from stream reader, including the schema checking
            Using PerformanceLoad() first, if it is not overrided, use Load().
            </summary>
            <param name="reader">Stream to load from.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.XmlDataFile.Schema">
            <summary>
            Gets Configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.XmlDataFile.Language">
            <summary>
            Gets or sets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.XmlDataFile.Encoding">
            <summary>
            Gets or sets Xml encoding.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.XmlDataFile.FilePath">
            <summary>
            Gets or sets File path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.XmlDataFile.ErrorSet">
            <summary>
            Gets Data error.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.XmlDataFile.SaveSettings">
            <summary>
            Gets or sets Save xml file format settings.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.XmlValidateSetting">
            <summary>
            Base class for xml validation data set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.NullObjectFieldException">
            <summary>
            Exception for null object field.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.NullObjectFieldException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.NullObjectFieldException"/> class.
            </summary>
            <param name="msg">Msg.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.GeneralException">
            <summary>
            Exception for general offline exception.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.GeneralException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.GeneralException"/> class.
            </summary>
            <param name="msg">Msg.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.GeneralException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.GeneralException"/> class.
            </summary>
            <param name="msg">Msg.</param>
            <param name="e">E.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.ExceptionCollection">
            <summary>
            Exception for general offline exception.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ExceptionCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ExceptionCollection"/> class.
            </summary>
            <param name="msg">The message of the exception.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ExceptionCollection.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ExceptionCollection"/> class.
            </summary>
            <param name="msg">The message of the exception.</param>
            <param name="e">The inner exception of this new exception.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get object data.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ExceptionCollection.Exceptions">
            <summary>
            Gets or sets the instances of exceptions hosted by this collection.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.CharTableError">
            <summary>
            Char table error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.EmptySymbol">
            <summary>
            Empty symbol.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.DuplicateSymbol">
            <summary>
            Duplicate symbol.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.MismatchUpperAndLower">
            <summary>
            Uppercase and lowercase count doesn't match.
            </summary>
            <remarks>In languages such as deDE, frFR, jaJP, itIT, ruRU, uppercase and lowercase character counts are not same.</remarks>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.ErrorDigitCount">
            <summary>
            Digit count is not 10.
            </summary>
            <remarks>In some languages (daDK, zhHK, zhTW), digit count is more than 10 because we also support full-width chars.</remarks>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.EmptyIsolatedSymbol">
            <summary>
            Isolated symbol readout cannot be empty.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.NonAlphabetShouldNoFeatures">
            <summary>
            No-alphabet should not have features.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.NonAlphabetShouldNoPronunciation">
            <summary>
            No-alphabet should not have pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.AlphabetNoPron">
            <summary>
            Alphabet symbol must have pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.AlphabetInvalidPron">
            <summary>
            Invalid symbol pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.AlphabetNoFeatures">
            <summary>
            Alphabet symbol must have feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.AlphabetShouldNoExpansion">
            <summary>
            Alphabet symbol shoud not have expansion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.ExpansionWordNotInLexicon">
            <summary>
            Expansion word not in lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.SymbolNotInLexicon">
            <summary>
            Symbol [{0}] in chartable not in lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharTableError.SymbolNotSingleChar">
            <summary>
            Symbol [{0}] in chartable is not single char, only first char take effect.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.CharElement">
            <summary>
            Store char element from chartable.xml.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.CharElement.IsSingleChar(System.String)">
            <summary>
            Check whether input string is a single unicode character.
            Unicode character longer than 16-bit will be presented by a string with length 2.
            </summary>
            <param name="str">Input string.</param>
            <returns>Return true: single character.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.CharElement.IsAlphabet">
            <summary>
            Is alpha symbol.
            </summary>
            <returns>True/false.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharElement.Type">
            <summary>
            Gets or sets Char type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharElement.Feature">
            <summary>
            Gets or sets Char feature.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharElement.Symbol">
            <summary>
            Gets or sets Symbol of the char element.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharElement.EncodedSymbol">
            <summary>
            Gets encoded symbol in binary file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharElement.ContextualExpansion">
            <summary>
            Gets or sets Expansion of the char element.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharElement.IsolatedExpansion">
            <summary>
            Gets or sets Isolated expansion.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharElement.Pronunciation">
            <summary>
            Gets or sets Pron of the char element.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.CharElement.CharType">
            <summary>
            CharType.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharElement.CharType.LowerCase">
            <summary>
            LowerCase.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharElement.CharType.UpperCase">
            <summary>
            UpperCase.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharElement.CharType.Digit">
            <summary>
            Digit.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.CharElement.CharType.Symbol">
            <summary>
            Symbol.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.CharTable">
            <summary>
            Char table class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.CharTable.ExtractExpansionWords">
            <summary>
            Extract the spell out words and those symbols with contextRead attribute.
            </summary>
            <returns>The word list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.CharTable.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load XML file.
            </summary>
            <param name="xmlDoc">Xml document.</param>
            <param name="nsmgr">Nsmgr.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.CharTable.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            PerformanceSave.
            </summary>
            <param name="writer">Writer.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharTable.Schema">
            <summary>
            Gets Configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharTable.CharList">
            <summary>
            Gets the char list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.CharTable.Symbols">
            <summary>
            Gets all symbol list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ChartableValidator">
            <summary>
            Char table validator.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ChartableValidator.Validate(Microsoft.Tts.Offline.CharTable,System.Boolean,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Validate char table.
            </summary>
            <param name="table">Char table.</param>
            <param name="shallow">Shallow validation.</param>
            <param name="wordsNotInLexicon">WordsNotInLexicon.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ChartableValidator.ValidateCharElement(Microsoft.Tts.Offline.CharElement,Microsoft.Tts.Offline.Common.ErrorSet,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Validate char element.
            </summary>
            <param name="element">Char element.</param>
            <param name="errorSet">Errors.</param>
            <param name="wordsNotInLexicon">WordsNotInLexicon.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ChartableValidator.CheckContextualSymbolInLexicon(Microsoft.Tts.Offline.CharTable,System.String,System.String,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Check and geneate isolated symbol lexion.
            </summary>
            <param name="chartable">Char table.</param>
            <param name="posSymbol">Pos of symbol.</param>
            <param name="lexiconOutput">Lexicon output.</param>
            <param name="errors">Errors.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ChartableValidator.EnsureInitialized">
            <summary>
            Initialize the validator.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ChartableValidator.ValidateExpansion(System.String,System.String,Microsoft.Tts.Offline.Common.ErrorSet,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Check expansion type.
            </summary>
            <param name="expansion">Expansion words.</param>
            <param name="expansionType">Type string.</param>
            <param name="errorSet">Errors.</param>
            <param name="wordsNotInLexicon">WordsNotInLexicon.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ChartableValidator.Language">
            <summary>
            Gets or sets Language id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ChartableValidator.Lexicon">
            <summary>
            Gets or sets Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ChartableValidator.PhoneSet">
            <summary>
            Gets or sets TTS Phone Set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ChartableValidator.PhoneSetFilePath">
            <summary>
            Gets or sets Phone set xml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ChartableValidator.LexiconFilePath">
            <summary>
            Gets or sets Lexicon xml.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ChartableValidator.AttributeError">
            <summary>
            ChartableValidator's AttributeError.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.UnknownType">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.EmptyType">
            <summary>
            Empty type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.InvalidTypeWarning">
            <summary>
            Invalid Type warning.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.UnknownFeature">
            <summary>
            Unknown feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.OOVSymbolExpansion">
            <summary>
            OOV Symbol expansion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.OOVWordExpansion">
            <summary>
            OOV Symbol expansion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.EmptySpellOutExpansion">
            <summary>
            Empty spell out expansion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.InvalidSymbol">
            <summary>
            Invalid symbol.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.DuplicateSymbol">
            <summary>
            Duplicate symbol.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.SymbolCaseCountMismatch">
            <summary>
            Uppercase and lowercase count doesn't match.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.UnCompletedDigits">
            <summary>
            Digit count is not 10.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.AlphabetSymbolLackOfPron">
            <summary>
            Alphabet symbol must have pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.AlphabetSymbolLackOfFeature">
            <summary>
            Alphabet symbol must have feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.AlphabetSymbolRemoveExpansion">
            <summary>
            Alphabet symbol should not have expansion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.NonAlphabetSymbolRemoveFeature">
            <summary>
            Non alphabet symbol should not have feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.NonAlphabetSymbolRemovePron">
            <summary>
            Non alphabet symbol should not have pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.SymbolDiffPronFromLex">
            <summary>
            Isolated symbol has a different pronunciation in lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.InfoSymbolInLex">
            <summary>
            Symbol already in lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ChartableValidator.AttributeError.SymbolPronGenError">
            <summary>
            Failed to generate pronunciation for the specific symbol.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.AppConfigManager">
            <summary>
            App config manager.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.AppConfigManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Config.AppConfigManager"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.AppConfigManager.UpdateSeverity(Microsoft.Tts.Offline.Common.Error)">
            <summary>
            Update severity of the error.
            </summary>
            <param name="error">Error.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.AppConfigManager.GetSeverity(Microsoft.Tts.Offline.Common.Error)">
            <summary>
            Get severity of the error.
            </summary>
            <param name="error">Error.</param>
            <returns>Severity of the error.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.AppConfigManager.GetErrorKey(Microsoft.Tts.Offline.Common.Error)">
            <summary>
            Get error key.
            </summary>
            <param name="error">Error.</param>
            <returns>Error key string.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.AppConfigManager.Instance">
            <summary>
            Gets Singleton instance.
            </summary>
        </member>
        <member name="T:ScriptReviewer.XmlScriptCommentHelper">
            <summary>
            Xml script comment helper.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptCommentHelper.ItemApproveCommentName">
            <summary>
            Comment to store whether item has been approved.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptCommentHelper.WordPronStatusName">
            <summary>
            Words pronunciation status XML element name.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptCommentHelper.WordTcgppScoreStatusName">
            <summary>
            Words TCGPP score status XML element name.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptCommentHelper.WordTextStatusName">
            <summary>
            Words text status XML element name.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptCommentHelper.HighSecverity">
            <summary>
            High severity of the operation.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptCommentHelper.LowSecverity">
            <summary>
            Low severity of the operation.
            </summary>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetOriginalWordList(Microsoft.Tts.Offline.ScriptSentence)">
            <summary>
            Get original sentence word list.
            </summary>
            <param name="scriptSentence">Script sentence.</param>
            <returns>Original word list.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetItemStatusActionDisplayString(ScriptReviewer.XmlScriptCommentHelper.ScriptItemStatus)">
            <summary>
            ScriptItemStatus display string.
            </summary>
            <param name="status">ScriptItemStatus.</param>
            <returns>Script item display string.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetChangeTypeString(ScriptReviewer.XmlScriptCommentHelper.ScriptItemStatus)">
            <summary>
            Get ChangeType string.
            </summary>
            <param name="status">Script item status.</param>
            <returns>Change type string.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetChangeTypeString(Microsoft.Tts.Offline.Utility.TtsXmlStatus.EditStatus,System.Boolean,System.Boolean)">
            <summary>
            Get ChangeType string.
            </summary>
            <param name="wordEditStatus">Edit status.</param>
            <param name="wordTextChanged">Word text changed.</param>
            <param name="wordPronChanged">Word pronunciation changed.</param>
            <returns>Change type string.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetDeletedWordIndex(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Find deleted word index, when delete more than one words in the same position.
            For example:
            Original sentence:  A, B, C, D.
            Current sentence:   A, D.
            Then:   Both B and C's deleted word position is 1.
                    But B's deleted word index is 0, and C's deleted word index is 1.
            </summary>
            <param name="scriptWord">Script word to be checked.</param>
            <returns>The word index.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetDeletedWordPosition(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Find the deleted word position in original sentence.
            For example:
            Original sentence:  A, B, C, D.
            Current sentence:   A, D.
            Then:   Both B and C's deleted word position is 1.
                    But B's deleted word index is 0, and C's deleted word index is 1.
            </summary>
            <param name="scriptWord">Script word to be checked.</param>
            <returns>Deleted word position in original word, if revert this deleted word,
            should insert this word to this position in the sentence word list.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.UndoChangeInScript(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Undo changes in script item.
            </summary>
            <param name="scriptItem">Script item to undo.</param>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.UndoChangeInScript(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Undo changes in script.
            </summary>
            <param name="scriptWord">Word of which the comment to be undo.</param>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetScriptWordEditStatus(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Get word edit status.
            </summary>
            <param name="scriptWord">Script word to get status.</param>
            <returns>Edit status of the word.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetScriptItemStatus(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Get script item status.
            </summary>
            <param name="scriptItem">Script item to be checked.</param>
            <returns>ScriptItemStatus.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetScriptItemStatus(Microsoft.Tts.Offline.ScriptItem,System.String@)">
            <summary>
            Get script item status.
            </summary>
            <param name="scriptItem">Script item to be checked.</param>
            <param name="timeStamp">Time stamp of the operation.</param>
            <returns>ScriptItemStatus.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.SetApproved(Microsoft.Tts.Offline.ScriptItem,ScriptReviewer.XmlScriptCommentHelper.ScriptItemStatus)">
            <summary>
            Set script items to approve status.
            </summary>
            <param name="scriptItem">Script items to be set.</param>
            <param name="status">Whether approve or reject the script item.</param>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.CheckScriptItemApproved(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Check whether script item is approved.
            </summary>
            <param name="scriptItem">Script item to be checked.</param>
            <returns>Whether the script item is approved.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetWordCommentStatus(Microsoft.Tts.Offline.ScriptWord,System.String)">
            <summary>
            Get word pronunciation status.
            </summary>
            <param name="scriptWord">Script word to check.</param>
            <param name="commentName">Comment name.</param>
            <returns>Tts xml status.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.GetScriptWordStatus(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Get word status.
            </summary>
            <param name="scriptWord">Script word to get status.</param>
            <returns>Edit status of the word.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.DeleteScriptWord(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Delete script word from sentence.
            </summary>
            <param name="scriptWord">Script word to be deleted.</param>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.SubmitChanges(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Submit word's changes.
            </summary>
            <param name="scriptWord">Script word.</param>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.InsertWordText(Microsoft.Tts.Offline.ScriptWord,System.Boolean,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Insert word text.
            </summary>
            <param name="nearWord">Insert the word near this word.</param>
            <param name="insertBefore">Insert before or after the near word.</param>
            <param name="wordText">Word text to add.</param>
            <param name="pronText">Word pronunciation to add.</param>
            <param name="isPunctuation">Whether the word is punctuation.</param>
            <param name="highSeverity">Insert secverity.</param>
            <returns>ScriptWord.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.ModifyPronText(Microsoft.Tts.Offline.ScriptWord,System.String)">
            <summary>
            Modify word's pronunciation text.
            </summary>
            <param name="scriptWord">Script word to be modified.</param>
            <param name="pronText">Pronunciation text to be modified.</param>
            <returns>Whether the word's pronciation has been modified.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.ModifyPronText(Microsoft.Tts.Offline.ScriptWord,System.String,System.String)">
            <summary>
            Modify word's pronunciation text.
            </summary>
            <param name="scriptWord">Script word to be modified.</param>
            <param name="pronText">Pronunciation text to be modified.</param>
            <param name="severity">Severity.</param>
            <returns>Whether the word's pronciation has been modified.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.UpdateStatusSeverity(Microsoft.Tts.Offline.Utility.TtsXmlStatus,System.String)">
            <summary>
            Update status severity.
            </summary>
            <param name="status">TtsXmlStatus to be updated.</param>
            <param name="severity">Severity to be updated.</param>
            <returns>Whether the severity has been updated.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.ModifyWordText(Microsoft.Tts.Offline.ScriptWord,System.String)">
            <summary>
            Modify word text.
            </summary>
            <param name="scriptWord">Words to be modified.</param>
            <param name="wordText">Word text to modify.</param>
            <returns>Whether the word text has been modified.</returns>
        </member>
        <member name="M:ScriptReviewer.XmlScriptCommentHelper.ModifyWordText(Microsoft.Tts.Offline.ScriptWord,System.String,System.String)">
            <summary>
            Modify word text.
            </summary>
            <param name="scriptWord">Words to be modified.</param>
            <param name="wordText">Word text to modify.</param>
            <param name="severity">Severity.</param>
            <returns>Whether the word text has been modified.</returns>
        </member>
        <member name="T:ScriptReviewer.XmlScriptCommentHelper.ScriptItemStatus">
            <summary>
            Script item status.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptCommentHelper.ScriptItemStatus.Original">
            <summary>
            Not in any status.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptCommentHelper.ScriptItemStatus.Approved">
            <summary>
            Approved.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptCommentHelper.ScriptItemStatus.Reject">
            <summary>
            Rejected.
            </summary>
        </member>
        <member name="T:ScriptReviewer.ListItemAttribute">
            <summary>
            Listitem attribute for Column information for ListView.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ListItemAttribute.Width">
            <summary>
            Gets or sets Width.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ListItemAttribute.Name">
            <summary>
            Gets or sets Name.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ListItemAttribute.Index">
            <summary>
            Gets or sets Index.
            </summary>
        </member>
        <member name="T:ScriptReviewer.ScriptWordComment">
            <summary>
            ScriptItemComment class manages the comments of ScriptItem.
            </summary>
        </member>
        <member name="M:ScriptReviewer.ScriptWordComment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.ScriptWordComment"/> class.
            </summary>
        </member>
        <member name="M:ScriptReviewer.ScriptWordComment.#ctor(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.ScriptWordComment"/> class.
            </summary>
            <param name="scriptItem">Script Item.</param>
        </member>
        <member name="M:ScriptReviewer.ScriptWordComment.#ctor(Microsoft.Tts.Offline.ScriptWord,Microsoft.Tts.Offline.PhoneMap)">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.ScriptWordComment"/> class.
            </summary>
            <param name="scriptWord">Script word.</param>
            <param name="phoneMap">The phone map.</param>
        </member>
        <member name="M:ScriptReviewer.ScriptWordComment.ToString">
            <summary>
            Combin the comment elements to one string.
            </summary>
            <returns>The string type.</returns>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.ScriptWord">
            <summary>
            Gets Script word of the comment.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.ScriptItem">
            <summary>
            Gets Script item of the comment.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.Sid">
            <summary>
            Gets Comment id, used to distinguish comment list on different ScriptItems.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.ChangeType">
            <summary>
            Gets Issue type.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.WordEditStatus">
            <summary>
            Gets Comment status.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.OriginalWord">
            <summary>
            Gets Original word.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.OriginalPron">
            <summary>
            Gets Fixed word.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.FixedWord">
            <summary>
            Gets Fixed word.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.FixedPron">
            <summary>
            Gets Fixed word.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.Severity">
            <summary>
            Gets The severity of one comment.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptWordComment.TimeStamp">
            <summary>
            Gets The severity of one comment.
            </summary>
        </member>
        <member name="T:ScriptReviewer.DetectMismatchItem">
            <summary>
            Detect mismatch item.
            </summary>
        </member>
        <member name="M:ScriptReviewer.DetectMismatchItem.#ctor(Microsoft.Tts.Offline.ScriptSentence,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.DetectMismatchItem"/> class.
            </summary>
            <param name="scriptSentence">Script sentence.</param>
            <param name="isOriginalText">If it is original text.</param>
        </member>
        <member name="P:ScriptReviewer.DetectMismatchItem.ScriptSentence">
            <summary>
            Gets Script sentence.
            </summary>
        </member>
        <member name="P:ScriptReviewer.DetectMismatchItem.Sid">
            <summary>
            Gets Comment id.
            </summary>
        </member>
        <member name="P:ScriptReviewer.DetectMismatchItem.Type">
            <summary>
            Gets Comment id.
            </summary>
        </member>
        <member name="P:ScriptReviewer.DetectMismatchItem.SentenceText">
            <summary>
            Gets Sentence text.
            </summary>
        </member>
        <member name="T:ScriptReviewer.FindResultItem">
            <summary>
            Script find result.
            </summary>
        </member>
        <member name="M:ScriptReviewer.FindResultItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.FindResultItem"/> class.
            </summary>
        </member>
        <member name="M:ScriptReviewer.FindResultItem.#ctor(Microsoft.Tts.Offline.ScriptWord,Microsoft.Tts.Offline.PhoneMap)">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.FindResultItem"/> class.
            </summary>
            <param name="scriptWord">Script word.</param>
            <param name="phoneMap">The phone map.</param>
        </member>
        <member name="P:ScriptReviewer.FindResultItem.ScriptWord">
            <summary>
            Gets Script word of the comment.
            </summary>
        </member>
        <member name="P:ScriptReviewer.FindResultItem.PhoneMap">
            <summary>
            Gets Phone map of the comment.
            </summary>
        </member>
        <member name="P:ScriptReviewer.FindResultItem.Sid">
            <summary>
            Gets Comment id.
            </summary>
        </member>
        <member name="P:ScriptReviewer.FindResultItem.WordText">
            <summary>
            Gets Word text.
            </summary>
        </member>
        <member name="P:ScriptReviewer.FindResultItem.WordPron">
            <summary>
            Gets Word pronunciation.
            </summary>
        </member>
        <member name="T:ScriptReviewer.ScriptItemComment">
            <summary>
            ScriptItemComment class manages the comments of ScriptItem.
            </summary>
        </member>
        <member name="F:ScriptReviewer.ScriptItemComment.EmptyIssue">
            <summary>
            Empty issue.
            </summary>
        </member>
        <member name="F:ScriptReviewer.ScriptItemComment.SentenceNoIssueTag">
            <summary>
            Sentence no issue tag.
            </summary>
        </member>
        <member name="F:ScriptReviewer.ScriptItemComment.SentencePassed">
            <summary>
            Sentence passed tag.
            </summary>
        </member>
        <member name="F:ScriptReviewer.ScriptItemComment.SentenceRejected">
            <summary>
            Reject the modify tag.
            </summary>
        </member>
        <member name="F:ScriptReviewer.ScriptItemComment.SentenceUnreviewed">
            <summary>
            Unreviewed tag.
            </summary>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.ScriptItemComment"/> class.
            </summary>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.ScriptItemComment"/> class.
            </summary>
            <param name="issue">Issue.</param>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.BuildCommentId(System.String,System.Int32,System.Int32)">
            <summary>
            Combine the three parameters to one string.
            </summary>
            <param name="sid">String type.</param>
            <param name="issueOffset">Offset.</param>
            <param name="issueLength">Length.</param>
            <returns>String.</returns>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.CreateComment(System.String,Microsoft.Tts.Offline.ScriptWord,System.Int32,System.String,System.String)">
            <summary>
            Create scriptItemComment.
            </summary>
            <param name="sid">Sentence id.</param>
            <param name="word">Word to be comment.</param>
            <param name="wordOffset">The word's offset in script item.</param>
            <param name="wordFix">Word replaced with.</param>
            <param name="pronFix">Pronunciation repalced with.</param>
            <returns>ScriptItemComment that created.</returns>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.ToString">
            <summary>
            Combin the comment elements to one string.
            </summary>
            <returns>The string type.</returns>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.System#IComparable{ScriptReviewer#ScriptItemComment}#CompareTo(ScriptReviewer.ScriptItemComment)">
            <summary>
            Implement the CompareTo method.
            </summary>
            <param name="other">ScriptItemComment instance.</param>
            <returns>IComparable instance.</returns>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.Clone(ScriptReviewer.ScriptItemComment)">
            <summary>
            Clone the element of the current instance to another instance.
            </summary>
            <param name="comment">The instance of scriptItemComment.</param>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.GetHashCode">
            <summary>
            Get hash code for this object.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.Equals(System.Object)">
            <summary>
            Equal.
            </summary>
            <param name="obj">Other object to compare with.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.Equals(ScriptReviewer.ScriptItemComment)">
            <summary>
            Equal.
            </summary>
            <param name="other">Other object to compare with.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:ScriptReviewer.ScriptItemComment.CompareTo(ScriptReviewer.ScriptItemComment)">
            <summary>
            Implement the CompareTo method.
            </summary>
            <param name="other">ScriptItemComment instance.</param>
            <returns>IComparable instance.</returns>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.Sid">
            <summary>
            Gets or sets Comment id, used to distinguish comment list on different ScriptItems.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.IssueOffset">
            <summary>
            Gets or sets Comment started position of one item .
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.IssueLength">
            <summary>
            Gets or sets Comment length.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.IssueEnd">
            <summary>
            Gets Issue end.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.Id">
            <summary>
            Gets Comment sub-id, used to distinguish comments on one ScriptItem.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.Issue">
            <summary>
            Gets or sets Issue text.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.IssueType">
            <summary>
            Gets or sets Issue type.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.OriginalWord">
            <summary>
            Gets or sets Original word.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.FixedWord">
            <summary>
            Gets or sets Fixed word.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.OriginalPronOffset">
            <summary>
            Gets or sets Original unit pronunciation offset from the word's pronunciation start position.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.OriginalPronLength">
            <summary>
            Gets or sets Original unit pronunciation lenght.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.OriginalPron">
            <summary>
            Gets Original pronunciation.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.FixedPron">
            <summary>
            Gets or sets Fixed pronunciation.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.OriginalWordPron">
            <summary>
            Gets or sets Original whole word's pronunciation.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.FixedWordPron">
            <summary>
            Gets Fixed pronunciation.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.Severity">
            <summary>
            Gets or sets The severity of one comment.
            </summary>
        </member>
        <member name="P:ScriptReviewer.ScriptItemComment.Description">
            <summary>
            Gets or sets More descriptions on one comment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptAcousticsHolder">
            <summary>
            Script Acoustics holder.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticsHolder.RemoveAcousticsValue">
            <summary>
            Remove the acoustics vlaue.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcousticsHolder.HasAcousticsValue">
            <summary>
            Gets a value indicating whether this object has acoustics value or not.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcousticsHolder.Acoustics">
            <summary>
            Gets or sets Acoustics.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.IntervalValueMode">
            <summary>
            Definition of interval value mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.IntervalValueMode.Absolute">
            <summary>
            Absolute value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.IntervalValueMode.Relative">
            <summary>
            Relative value.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptAcousticChunkEncoding">
            <summary>
            Definition of script acoustic chunk encoding type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcousticChunkEncoding.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcousticChunkEncoding.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcousticChunkEncoding.Base64Binary">
            <summary>
            Base64Binary.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcousticChunkEncoding.HexBinary">
            <summary>
            HexBinary.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptUvSegType">
            <summary>
            Definition of script acoustic chunk type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSegType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSegType.Voiced">
            <summary>
            Voiced.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSegType.Unvoiced">
            <summary>
            Unvoiced.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSegType.Silence">
            <summary>
            Silence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSegType.Mixed">
            <summary>
            Mixed.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.IScriptElement">
            <summary>
            Interface for script element.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IScriptElement.ParseFromXml(System.Xml.XmlTextReader)">
            <summary>
            Generate the IScriptElement object from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IScriptElement.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation scope.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IScriptElement.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the IScriptElement object to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.TimeInterval">
            <summary>
            Time interval class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TimeInterval.AbsoluteBegin">
            <summary>
            Const element name for begin in absolute mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TimeInterval.AbsoluteEnd">
            <summary>
            Const element name for end in absolute mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TimeInterval.RelativeBegin">
            <summary>
            Const element name for begin in relative mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TimeInterval.RelativeEnd">
            <summary>
            Const element name for end in relative mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TimeInterval._valueMode">
            <summary>
            Interval value mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TimeInterval._begin">
            <summary>
            Beginning of the interval, in milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TimeInterval._end">
            <summary>
            End of the interval, in milliseconds.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TimeInterval.#ctor(Microsoft.Tts.Offline.IntervalValueMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TimeInterval"/> class.
            </summary>
            <param name="valueMode">Value mode.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TimeInterval.#ctor(Microsoft.Tts.Offline.IntervalValueMode,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TimeInterval"/> class.
            </summary>
            <param name="valueMode">Value mode.</param>
            <param name="begin">Beginning of the interval.</param>
            <param name="end">End of the interval.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TimeInterval.InnerParseFromXml(System.Xml.XmlReader)">
            <summary>
            Generate the TimeInterval object from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TimeInterval.InnerIsValid">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <returns>Valid or not.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TimeInterval.InnerWriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the TimeInterval object to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.TimeInterval.Begin">
            <summary>
            Gets or sets Beginning of the interval, in milliseconds.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TimeInterval.End">
            <summary>
            Gets or sets End of the interval, in milliseconds.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TimeInterval.IntervalDuration">
            <summary>
            Gets Duration calculated from interval.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptUvSegInterval">
            <summary>
            Script unvoiced-voiced segment interval class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSegInterval.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptUvSegInterval"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSegInterval.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptUvSegInterval"/> class.
            </summary>
            <param name="begin">Beginning of the interval.</param>
            <param name="end">End of the interval.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSegInterval.ParseFromXml(System.Xml.XmlTextReader)">
            <summary>
            Generate the ScriptUvSegInterval object from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSegInterval.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation scope.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSegInterval.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the ScriptUvSegInterval object to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.SegmentInterval">
            <summary>
            Script unvoiced-voiced segment interval class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentInterval.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.SegmentInterval"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentInterval.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.SegmentInterval"/> class.
            </summary>
            <param name="begin">Beginning of the interval.</param>
            <param name="end">End of the interval.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentInterval.ParseFromXml(System.Xml.XmlTextReader)">
            <summary>
            Generate the ScriptUvSegInterval object from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentInterval.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation scope.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SegmentInterval.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the ScriptUvSegInterval object to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptAcousticChunk">
            <summary>
            Script acoustic chunk class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.StringToChunkEncoding(System.String)">
            <summary>
            Convert chunk encoding from string type to enum type.
            </summary>
            <param name="encoding">String type of the chunk encoding.</param>
            <returns>Enum type of the chunk encoding.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.ChunkEncodingToString(Microsoft.Tts.Offline.ScriptAcousticChunkEncoding)">
            <summary>
            Convert chunk encoding from enum type to string type.
            </summary>
            <param name="chunkEncoding">Enum type of the chunk encoding.</param>
            <returns>String type of the chunk encoding.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.ParseFromXml(System.Xml.XmlTextReader,Microsoft.Tts.Offline.ScriptAcousticChunkEncoding)">
            <summary>
            Get chunk type and chunk data from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="chunkEncoding">Encoding of the chunk.</param>
            <returns>Chunk data parsed from xml script.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.WriteToXml(System.Xml.XmlWriter,Microsoft.Tts.Offline.ScriptAcousticChunkEncoding,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Write the acoustic chunk data to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
            <param name="chunkEncoding">Encoding of the chunk.</param>
            <param name="chunkData">Chunk data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.ParseTextData(System.Xml.XmlTextReader,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Parse text chunk data from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="chunkData">Chunk data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.ParseBase64BinaryData(System.Xml.XmlTextReader,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Parse base64Binary chunk data from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="chunkData">Chunk data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.ParseHexBinaryData(System.Xml.XmlTextReader,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Parse hexBinary chunk data from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="chunkData">Chunk data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.ParseBinaryData(System.Xml.XmlTextReader,Microsoft.Tts.Offline.ScriptAcousticChunkEncoding,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Parse binary chunk data according to encoding type from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="chunkEncoding">Encoding of the chunk.</param>
            <param name="chunkData">Chunk data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.WriteTextData(System.Xml.XmlWriter,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Write the text chunk data to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
            <param name="chunkData">Chunk data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.WriteBase64BinaryData(System.Xml.XmlWriter,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Write base64Binary chunk data to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
            <param name="chunkData">Chunk data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.WriteHexBinaryData(System.Xml.XmlWriter,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Write hexBinary chunk data to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
            <param name="chunkData">Chunk data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcousticChunk.WriteBinaryData(System.Xml.XmlWriter,Microsoft.Tts.Offline.ScriptAcousticChunkEncoding,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Write binary chunk data according to encoding type to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
            <param name="chunkEncoding">Encoding of the chunk.</param>
            <param name="chunkData">Chunk data.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptF0Contour">
            <summary>
            Script f0 contour class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptF0Contour._chunkEncoding">
            <summary>
            Chunk coding of the element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptF0Contour._contour">
            <summary>
            F0 contour.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptF0Contour.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptF0Contour"/> class.
            </summary>
            <param name="name">Name of the contour.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptF0Contour.#ctor(Microsoft.Tts.Offline.ScriptAcousticChunkEncoding,System.Collections.ObjectModel.Collection{System.Single},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptF0Contour"/> class.
            </summary>
            <param name="chunkEncoding">Encoding of the chunk.</param>
            <param name="contour">Contour.</param>
            <param name="name">Name of the contour.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptF0Contour.ParseFromXml(System.Xml.XmlTextReader)">
            <summary>
            Generate the ScriptF0Contour object from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptF0Contour.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation scope.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptF0Contour.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the ScriptF0Contour object to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptF0Contour.ChunkEncoding">
            <summary>
            Gets or sets Encoding of the acoustic chunk.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptF0Contour.Contour">
            <summary>
            Gets F0 contour.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptF0Contour.Name">
            <summary>
            Gets or sets the name of the f0 contour: f0, qf0 (quantized f0), etc.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptPowerContour">
            <summary>
            Script Power contour class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptPowerContour._chunkEncoding">
            <summary>
            Chunk coding of the element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptPowerContour._contour">
            <summary>
            F0 contour.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptPowerContour.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptPowerContour"/> class.
            </summary>
            <param name="name">Name of the contour.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptPowerContour.#ctor(Microsoft.Tts.Offline.ScriptAcousticChunkEncoding,System.Collections.ObjectModel.Collection{System.Single},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptPowerContour"/> class.
            </summary>
            <param name="chunkEncoding">Encoding of the chunk.</param>
            <param name="contour">Contour.</param>
            <param name="name">Name of the contour.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptPowerContour.ParseFromXml(System.Xml.XmlTextReader)">
            <summary>
            Generate the ScriptF0Contour object from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptPowerContour.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation scope.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptPowerContour.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the ScriptF0Contour object to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPowerContour.ChunkEncoding">
            <summary>
            Gets or sets the encoding of the acoustic chunk.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPowerContour.Contour">
            <summary>
            Gets power contour.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPowerContour.Name">
            <summary>
            Gets or sets the name of the power contour: pow, qpow (quantized power), etc.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptUvSeg">
            <summary>
            Definition of script voice/unvoice type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSeg.MinF0Value">
            <summary>
            Minimum (exclusive) f0 value allowed.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSeg._segType">
            <summary>
            UV segment type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSeg._interval">
            <summary>
            UV segment element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSeg._f0Contour">
            <summary>
            F0 contour element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptUvSeg._f0ContourQuantized">
            <summary>
            Quantized f0 contour element.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSeg.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptUvSeg"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSeg.#ctor(Microsoft.Tts.Offline.ScriptUvSegType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptUvSeg"/> class.
            </summary>
            <param name="segType">Unvoiced-voiced segment type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSeg.FromStringToUvSegType(System.String)">
            <summary>
            Convert unvoiced-voiced segment type from string type to enum type.
            </summary>
            <param name="type">String type of the unvoiced-voiced segment type.</param>
            <returns>Enum type of the unvoiced-voiced segment type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSeg.FromUvSegTypeToString(Microsoft.Tts.Offline.ScriptUvSegType)">
            <summary>
            Convert unvoiced-voiced segment type from enum type to string type.
            </summary>
            <param name="segType">Enum type of the unvoiced-voiced segment type.</param>
            <returns>String type of the unvoiced-voiced segment type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSeg.ParseFromXml(System.Xml.XmlTextReader)">
            <summary>
            Generate the ScriptUvSeg object from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSeg.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation scope.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSeg.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the ScriptUvSeg object to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSeg.RemoveIntervalValue">
            <summary>
            Remove the unvoiced-voiced segment interval value.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptUvSeg.RemoveF0ContourValue">
            <summary>
            Remove the unvoiced-voiced F0 contour value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptUvSeg.SegType">
            <summary>
            Gets or sets Type of the unvoiced-voiced segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptUvSeg.HasIntervalValue">
            <summary>
            Gets a value indicating whether this object has unvoiced-voiced segment interval value or not.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptUvSeg.Interval">
            <summary>
            Gets or sets Interval of the unvoiced-voiced segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptUvSeg.HasF0ContourValue">
            <summary>
            Gets a value indicating whether this object has F0 contour value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptUvSeg.HasQuantizedF0ContourValue">
            <summary>
            Gets a value indicating whether this object has F0 contour value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptUvSeg.F0Contour">
            <summary>
            Gets or sets F0 contour.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptUvSeg.QuantizedF0Contour">
            <summary>
            Gets or sets quantized F0 contour.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptAcoustics">
            <summary>
            Script acoustics class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcoustics._duration">
            <summary>
            Duration, in milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcoustics._quanDuration">
            <summary>
            Quantized duration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcoustics._segmentIntervals">
            <summary>
            Element segment element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcoustics._scriptUvSegs">
            <summary>
            UV segment elements.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcoustics._powContour">
            <summary>
            Power contour element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptAcoustics._powContourQuantized">
            <summary>
            Quantized power contour element.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptAcoustics"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptAcoustics"/> class.
            </summary>
            <param name="duration">Duration.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.ParseFromXml(System.Xml.XmlTextReader)">
            <summary>
            Generate the ScriptAcoustics object from the xml doc indicated by reader.
            </summary>
            <param name="reader">Xml text reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation scope.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the ScriptAcoustics object to xml script.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.RemoveDurationValue">
            <summary>
            Remove the duration vlaue.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.RemovePowerValue">
            <summary>
            Remove the power vlaue.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.RemoveQuantizedPowerValue">
            <summary>
            Remove the quantized power vlaue.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.RemoveSegmentInterval">
            <summary>
            Remove the segment interval value.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.ClearAllUvSegs">
            <summary>
            Clear all unvoiced-voiced segs object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptAcoustics.AddUvSeg(Microsoft.Tts.Offline.ScriptUvSeg)">
            <summary>
            Add a unvoiced-voiced segs object.
            </summary>
            <param name="uvseg">Uv segment.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.HasDurationValue">
            <summary>
            Gets a value indicating whether this object has duration value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.HasQuanDurationValue">
            <summary>
            Gets a value indicating whether this object has a quantilized duration value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.Duration">
            <summary>
            Gets or sets Duration of the acoustics, in milliseconds.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.QuanDuration">
            <summary>
            Gets or sets quantized duration of the acoustics.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.HasPowerContourValue">
            <summary>
            Gets a value indicating whether this object has Power contour value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.HasQuantizedPowerContourValue">
            <summary>
            Gets a value indicating whether this object has Power contour value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.PowerContour">
            <summary>
            Gets or sets power contour.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.QuantizedPowerContour">
            <summary>
            Gets or sets quantized Power contour.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.HasSegmentInterval">
            <summary>
            Gets a value indicating whether this object has segment interval or not.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.SegmentIntervals">
            <summary>
            Gets or sets Segment interval.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptAcoustics.UvSegs">
            <summary>
            Gets Unvoiced-voiced segments in the acoustics.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptDomainType">
            <summary>
            Definition of script domain types.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptDomainType.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptDomainType.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptDomainType.Digit">
            <summary>
            Digit.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptDomainType.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PronunciationSeparator">
            <summary>
            Pronunciation separator.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.PronunciationSeparator.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.PronunciationSeparator"/> class.
            Build pronunciation separator from all kinds of separator.
            </summary>
            <param name="word">Word separator.</param>
            <param name="syllable">Syllable separator.</param>
            <param name="slice">Slice separator.</param>
            <param name="phone">Phone separator.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PronunciationSeparator.SplitSyllables(System.String)">
            <summary>
            Get all syllable in the pronunciation.
            </summary>
            <param name="pronunciation">Pronunciation to be processed.</param>
            <returns>Splitted syllables array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PronunciationSeparator.SplitSlices(System.String)">
            <summary>
            Get all slices in the pronunciation.
            </summary>
            <param name="pronunciation">Pronunciation to be processed.</param>
            <returns>Splitted slices array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PronunciationSeparator.SplitPhones(System.String)">
            <summary>
            Get all phones in the pronunciation, this methods will not delete tone.
            </summary>
            <param name="pronunciation">Pronunciation to be processed.</param>
            <returns>Splitted phoens array, tones are not deleted in the array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PronunciationSeparator.RemoveEmptyItems(System.String[])">
            <summary>
            Remove empty items.
            </summary>
            <param name="items">Items to be processed.</param>
            <returns>Non empty items array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PronunciationSeparator.GetAllForPhone">
            <summary>
            Get all phone level separators.
            </summary>
            <returns>Phone separators.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PronunciationSeparator.GetAllForSlice">
            <summary>
            Get all slice level separators.
            </summary>
            <returns>Slice separators.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PronunciationSeparator.GetAllForSyllable">
            <summary>
            Get all syllable level separators.
            </summary>
            <returns>Syllable separators.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.PronunciationSeparator.Phone">
            <summary>
            Gets or sets Phone separator.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.PronunciationSeparator.Slice">
            <summary>
            Gets or sets Slice separator.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.PronunciationSeparator.Syllable">
            <summary>
            Gets or sets Syllable separator.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.PronunciationSeparator.Word">
            <summary>
            Gets or sets Word separator.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptItem">
            <summary>
            Class represents one script item in transcript file
            This class is compatible of the two-line script
             An example of two-line item is:
            <example>
            100006 this was a good deal * #2 for citibank * #2 and for germany.
                   dh . ih 1 . s / w . ax 1 . z / ax / g . uh 1 . d / d . iy 1 l 
            / f . ao 1 r / s . ih 1 - t . iy - b . ae 2 ng . k / ae 1 n . d 
            / f . ao 1 r / jh . er 1 r - m ax - n iy /.
            </example>
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptItem.WordToneLabels">
            <summary>
            Word tone labels.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptItem.SentenceIdDelimiter">
            <summary>
            The appended string following the sentence ID.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptItem.SentenceDelimiter">
            <summary>
            The appended string following the sentence
            ATTENTION: Do NOT use Environment.NewLine as the line break!!!
            Because it (\r\n) will be converted to "\n" in RichTextBox, and this
            Leads to the mismatch between ScriptItem.cs and ScriptItemBox.cs.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptItem.SentenceDelimiterInFile">
            <summary>
            Append \r\n after sentence if to write the string to file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptItem.ItemIdPattern">
            <summary>
            Item ID pattern.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptItem.ItemIdLength">
            <summary>
            Item id Length.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptItem.DefaultFrequency">
            <summary>
            Default frequency.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptItem"/> class.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.GetCleanSetnence(System.String)">
            <summary>
            Get clean sentence.
            This assumes script is in text format.
            </summary>
            <param name="sentence">Sentence to be cleaned.</param>
            <returns>Cleaned sentence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.LabelToWordTone(System.String)">
            <summary>
            Convert label (single letter, [c|R|r|F|f]) to TtsWordTone.
            </summary>
            <param name="label">Label to convert.</param>
            <returns>TtsWordTone of the label.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.WordToneToLabel(Microsoft.Tts.Offline.TtsWordTone)">
            <summary>
            Convert TtsWordTone to label (single letter, [c|R|r|F|f]).
            </summary>
            <param name="wordTone">WordTone to convert.</param>
            <returns>Label of the TtsWordTone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.AlignOffset(System.String,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.TtsUnit})">
            <summary>
            Align offset of each unit against the given pronunciation string.
            </summary>
            <param name="pronunciation">Pronunciation to align.</param>
            <param name="units">Unit collection to update offset.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.ReverseBuildSentence(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord})">
            <summary>
            This method is extracted from the old method ReverseBuildSentence()
            Attention: Only using it for two-line scripts.
            </summary>
            <param name="words">Words to build from.</param>
            <returns>The built sentence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.ReverseBuildPronunciation(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord},System.Boolean)">
            <summary>
            Build pronunciation string from ScriptWord collection
            This method is extracted from the old method ReverseBuildPronunciation()
            Attention: Only using it for two-line scripts.
            </summary>
            <param name="words">Words to build from.</param>
            <param name="useUnits">Whether usin units to build pronunciation.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.CalculatePosInSyllable(Microsoft.Tts.Offline.TtsUnit,Microsoft.Tts.Offline.TtsUnit)">
            <summary>
            Calculate PosInSyllable feature for a given unit
            Change it to public for code re-use in script sentence.
            </summary>
            <param name="preUnit">Previous unit of target unit to calculate.</param>
            <param name="unit">Target unit to calculate.</param>
            <returns>PosInSyllable feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.CalculatePosInWord(Microsoft.Tts.Offline.ScriptSyllable,Microsoft.Tts.Offline.ScriptSyllable)">
            <summary>
            Calculate PosInWord feature for a given syllable
            Change it to public for code re-use in script sentence.
            </summary>
            <param name="preSyllable">Previous syllable of target syllable to calculate.</param>
            <param name="syllable">Target syllable to calculate.</param>
            <returns>PosInWord feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.CalculatePosInSentence(Microsoft.Tts.Offline.ScriptWord,Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Calculate PosInSentence feature for a given word
            Change it to public for code re-use in script sentence.
            </summary>
            <param name="preWord">Previous word of target word to calculate.</param>
            <param name="word">Target word to calculate.</param>
            <returns>PosInSentence feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.FindPreviousWord(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord},Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Find previos word, which is normal word
            Change it to public for code re-use in script sentence.
            </summary>
            <param name="words">Word collection to search.</param>
            <param name="word">Word to find previous word for.</param>
            <returns>Found word.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.FindPreviousSyllable(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.TtsUnit},System.Int32)">
            <summary>
            Find previos syllable for a given unit through indexing
            Change it to public for code re-use in script sentence.
            </summary>
            <param name="units">Unit collection.</param>
            <param name="index">Index of the unit to find previous syllable.</param>
            <returns>Found syllanle.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.IsValidItem(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Common.ErrorSet,Microsoft.Tts.Offline.XmlScriptValidateSetting)">
            <summary>
            Check whether a script item is valid
            We don't check schema here
            Validation conditions: 
            1. Normal word should have pronunciation 
            2. Pronunciation should be good
            3. POS should be in POS set
            We could use some flag to control the validation conditions
            When we need flexible control.
            </summary>
            <param name="item">The item to be checked.</param>
            <param name="errors">Errors if item is invalid.</param>
            <param name="validateSetting">Validation data set.</param>
            <returns>True is valid.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.IsValidItemId(System.String)">
            <summary>
            Validate Item id patter.
            </summary>
            <param name="itemId">Item ID to be checked.</param>
            <returns>Whether item ID is valid.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.StringToDomainType(System.String)">
            <summary>
            Get the domain type from domain string name.
            </summary>
            <param name="domain">Domain string name.</param>
            <returns>ScriptDomainType.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.DomainTypeToString(Microsoft.Tts.Offline.ScriptDomainType)">
            <summary>
            Convert script domain type to string used in script file.
            </summary>
            <param name="type">Sctipt domain type.</param>
            <returns>
            String representation of script domain type.
            Return empty for ScriptDomainType.Unknown.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.WriteToXml(System.Xml.XmlWriter,Microsoft.Tts.Offline.XmlScriptFile.ContentControler,Microsoft.Tts.Offline.Language)">
            <summary>
            Write the item to xml writer.
            </summary>
            <param name="writer">XmlWriter.</param>
            <param name="scriptContentController">XmlScriptFile ContentControler.</param>
            <param name="scriptLanguage">The language of the script.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.GetPhones(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the Phones of this item.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <param name="errors">Errors if having invalid phone.</param>
            <returns>The phones.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.GetNormalPhoneNames(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the normal phones' names.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <param name="errors">Errors is having.</param>
            <returns>The pohne names.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.GetSyllables(Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Get the syllable strings this item has
            The syllable contains stress but doesn't contain unit boundaries.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <returns>Syllable strings.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.GetUnits(Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData)">
            <summary>
            Get the unit list this item has.
            </summary>
            <param name="phoneme">Phoneme.</param>
            <param name="sliceData">Slice data.</param>
            <returns>Tts units.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.GetSentenceId(Microsoft.Tts.Offline.ScriptSentence)">
            <summary>
            Get sentence ID, sentence ID informat of: "itemID-sentenceIndex", start from 1.
            </summary>
            <param name="scriptSentence">Script sentence to get ID.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.Parse(System.String)">
            <summary>
            Parse script entry string.
            </summary>
            <param name="entry">Entry string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.Clear">
            <summary>
            Clear the intermediate data, words and units.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildTextFromSentences">
            <summary>
            Build text from sentences.
            </summary>
            <returns>Built text.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildTextFromAllWords">
            <summary>
            Build text from all the words.
            </summary>
            <returns>Built text.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildTextFromAllWords(System.Boolean)">
            <summary>
            Build text from all the words.
            </summary>
            <param name="hasBreak">Whether text contains break.</param>
            <returns>Built text.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildPronunciationFromAllWords">
            <summary>
            Build pronunciation from all the words.
            </summary>
            <returns>Built pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.ReverseBuildPronunciation">
            <summary>
            Build pronunciation string from ScriptWord collection
            Using units to build the pronunciation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.ReverseBuildSentence">
            <summary>
            Build sentence string from ScriptWord collection.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildInNamedEntity(System.Boolean)">
            <summary>
            Builds in the named entities into the word list or vise versa.
            </summary>
            <param name="reverse">Flag indicating whether to reverse from word into named enitty or not.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.Validate">
            <summary>
            Validate matching between sentence content and pronunciation line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.GetPhones">
            <summary>
            Get all phones for this sentence's pronunciation string.
            </summary>
            <returns>Phone string collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.GetSyllables">
            <summary>
            Get all syllables for this sentence's pronunciation string.
            </summary>
            <returns>Syllable string array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.CombinePhone(System.String,System.String,System.String)">
            <summary>
            Given one sentence's pronunciation string, convert
            One Phone-based segment file to Unit-based segment file.
            </summary>
            <param name="pronunciation">Pronunciation string.</param>
            <param name="filePath">Phone-based segment file.</param>
            <param name="targetFilePath">Unit-based segment file.</param>
            <returns>Data error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.Clone">
            <summary>
            Clone the script item.
            </summary>
            <returns>Cloned script item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.Refresh">
            <summary>
            Refresh sentence and pronunciation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.ToString(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Convert a script item to string.
            </summary>
            <param name="hasSid">Whether has sentence ID.</param>
            <param name="hasPron">Whether has pronunciation.</param>
            <param name="writeToFile">Whether write to file.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.ToString">
            <summary>
            In string presentation.
            </summary>
            <returns>String presentation of the script item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildWords(System.String,System.String)">
            <summary>
            Build Word list for one sentence and its pronunciation.
            </summary>
            <param name="sentence">Sentence string.</param>
            <param name="pronunciation">Pronunciation string.</param>
            <returns>Word list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.TokenizeOrthographyString(System.String)">
            <summary>
            Tokenize orthography sentence string
            Thr tokenized items are seperated by white-space.
            </summary>
            <param name="sentence">Sentence to tokenize.</param>
            <returns>Tokenized sentence string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.CheckSegments(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check for segment error in a script item.
            </summary>
            <param name="item">Script item.</param>
            <param name="errors">Error list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.CheckSegment(Microsoft.Tts.Offline.Common.ErrorSet,System.String,System.String,Microsoft.Tts.Offline.SegmentInterval,System.Int32@)">
            <summary>
            Check for segment error for a specific segment.
            </summary>
            <param name="errors">Error list.</param>
            <param name="itemID">Script ID.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="segmentInterval">Segment interval.</param>
            <param name="preSegEnd">Preivous segment end point.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.AlignOffset(System.String,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord})">
            <summary>
            Align offset of each word against the given sentence string.
            </summary>
            <param name="sentence">Sentence string to align with.</param>
            <param name="words">Word collection to update offset.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.AdjustPunctuationProperty(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord})">
            <summary>
            Adjust the normal word property with the property of
            The following punctuation .
            </summary>
            <param name="words">Word collection of the sentence.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.FixEndingPunctuation(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord},Microsoft.Tts.Offline.Language)">
            <summary>
            Fix the ending punctuation of the sentence, this is, to make sure 
            The sentence end with Period punctuation.
            </summary>
            <param name="words">Word collection of the sentence.</param>
            <param name="language">Language of the sentence.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildSyllables(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Build syllable collection for a given word.
            </summary>
            <param name="word">Word to process.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.RefreshUnits">
            <summary>
            If need, rebuild unit collection from pronunciation string.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.RefreshWords">
            <summary>
            If need, rebuild word collection from sentence and pronunciation string.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildUnits(System.String,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord})">
            <summary>
            Build unit list basing on pronunciation string and word collection.
            </summary>
            <param name="pronunciation">Pronunciation string of the script item.</param>
            <param name="words">Pre-built word collection.</param>
            <returns>Built unit collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildUnitFeatures(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord},System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.TtsUnit})">
            <summary>
            Build unit feature for each unit.
            </summary>
            <param name="words">Word list.</param>
            <param name="units">Unit list .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.PreBuildUnits(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord},System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.TtsUnit})">
            <summary>
            Prepare units building from given word collection.
            </summary>
            <param name="words">Word collection to build units from.</param>
            <param name="units">Built unit collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.BuildUnits(Microsoft.Tts.Offline.ScriptSyllable)">
            <summary>
            Build unit collection for a given syllable.
            </summary>
            <param name="syllable">Syllable to process.</param>
            <returns>Unit collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.EstimatePosInSyllable(System.String[])">
            <summary>
            Estimate position in syllable for each slice in a slice set.
            </summary>
            <param name="slices">Slice collection to estimate.</param>
            <returns>Estimated result of position in syllable.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.PostBuildWords(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord},System.String)">
            <summary>
            Post words build, attaching pronunciation for each word.
            </summary>
            <param name="words">Word list to process.</param>
            <param name="pronunciation">Sentence pronunciation string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.PreBuildWords(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord},System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            Previos words building, performance word tokenization.
            </summary>
            <param name="words">Result word list.</param>
            <param name="sentence">Sentence content string.</param>
            <param name="language">Language of the sentence.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.PreBuildWord(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord},Microsoft.Tts.Offline.Language,System.Text.RegularExpressions.Match,System.Int32)">
            <summary>
            Previos word building, process one token of word.
            </summary>
            <param name="words">Result word list.</param>
            <param name="language">Language of the sentence.</param>
            <param name="tokenMatch">Token matched.</param>
            <param name="wordIndex">Word index of current word.</param>
            <returns>Word index of next word.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.CalculateSentenceOffset">
            <summary>
            Get the sentence offset in the result of ToString().
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptItem.CalculatePronunciationOffset">
            <summary>
            Get the pronunciation offset in the result of ToString().
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.IsQuestion">
            <summary>
            Gets a value indicating whether the sentence is question sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.TtsXmlComments">
            <summary>
            Gets Tts xml comments.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.IsSsml">
            <summary>
            Gets or sets a value indicating whether text is SSML format.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.PronunciationOffsetInString">
            <summary>
            Gets or sets SententStartPos.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.SententOffsetInString">
            <summary>
            Gets or sets SententStartPos.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Sentence">
            <summary>
            Gets or sets Sentence content for this sentence
            Set:
                content should not be null.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.PlainSentence">
            <summary>
            Gets Plain sentence content, which is without prosody annotation, 
            No POS tag and only one whitespace separated words.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Pronunciation">
            <summary>
            Gets or sets Pronunciation string for this sentence
            Set:
                pronunciation should not be null.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Units">
            <summary>
            Gets Unit list of the script item
            Exceptions:
                get:
                    System.IO.InvalidDataException.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Words">
            <summary>
            Gets Word list of this script entry
            Exceptions:
                get:
                    System.IO.InvalidDataException.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.AllWords">
            <summary>
            Gets Words of all the sentences
            TODO: will rename it to Words when two-line script are removed.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.AllWordsWithNormal">
            <summary>
            Gets Words type is normal of all the sentences
            TODO: will rename it to WithNormalWords when two-line script are removed.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.NormalWords">
            <summary>
            Gets Normal word collection
            Exceptions:
                get:
                    System.IO.InvalidDataException.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.AllPronouncedNormalWords">
            <summary>
            Gets Normal words of all the sentences
            TODO: will rename it to NormalWords when two-line script are removed.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.AllPronouncedWords">
            <summary>
            Gets Pronounced and non-silence words of all the sentences.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Id">
            <summary>
            Gets or sets Script item id
            Id should not be null.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Text">
            <summary>
            Gets or sets The plain text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Domain">
            <summary>
            Gets or sets The domain type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.ReadingDifficulty">
            <summary>
            Gets or sets The reading difficulty score.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.ScriptFile">
            <summary>
            Gets or sets The XmlScriptFile this script item belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Sentences">
            <summary>
            Gets Sentences this script item has.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Frequency">
            <summary>
            Gets or sets Frequency of the script item: how many times it occurs.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Tag">
            <summary>
            Gets or sets tag of the script item, this property is used for attach data to script item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Language">
            <summary>
            Gets or sets What kind of language is this script item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.Engine">
            <summary>
            Gets or sets Engine type of this script item supported.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.PunctuationPattern">
            <summary>
            Gets Punctuation pattern for this langauge.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.PronunciationSeparator">
            <summary>
            Gets Pronunciation separator which this script item uses.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.MinVowelCountInSyllable">
            <summary>
            Gets Minimux number of vowel phone should be included in one syllable.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptItem.MaxVowelCountInSyllable">
            <summary>
            Gets Maximun number of vowel phone should be included in one syllable.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptNamedEntity">
            <summary>
            Script named entity.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptNamedEntity.DefaultEmptyPosString">
            <summary>
            The default POS string for field PosString.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptNamedEntity.DefaultEntityPosString">
            <summary>
            The default POS string for field PosString.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptNamedEntity.#cctor">
            <summary>
            Initializes static members of the ScriptNamedEntity class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptNamedEntity.#ctor">
            <summary>
            Initializes a new instance of the ScriptNamedEntity class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptNamedEntity.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
            <returns>Hash code returned.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptNamedEntity.Equals(System.Object)">
            <summary>
            Tests whether current instance equals with the other object.
            </summary>
            <param name="obj">The other object to test equal with.</param>
            <returns>True if equals, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptNamedEntity.WriteToXml(System.Xml.XmlWriter,Microsoft.Tts.Offline.XmlScriptFile.ContentControler)">
            <summary>
            Writes named entity to xml.
            </summary>
            <param name="writer">XmlWriter instance to performance writing.</param>
            <param name="scriptContentController">XmlScriptFile.ContentControler.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptNamedEntity.Validate">
            <summary>
            Validates the state of this instance, for example the reference.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptNamedEntity.ToString">
            <summary>
            Converts to the string represent of this instance.
            </summary>
            <returns>The string represent of this instance.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.SentenceId">
            <summary>
            Gets the sentence ID of the script named entity.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.Text">
            <summary>
            Gets or sets the text string for this named entity.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.Type">
            <summary>
            Gets or sets the named entity type of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.PosString">
            <summary>
            Gets or sets the part of speech string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.StartIndex">
            <summary>
            Gets the start index of the first word of this named entity in the grapheme-contained word list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.EndIndex">
            <summary>
            Gets the end index of the first word of this named entity in the grapheme-contained word list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.Count">
            <summary>
            Gets the number of words of this named entity.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.Start">
            <summary>
            Gets or sets the first word of this named entity.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.End">
            <summary>
            Gets or sets the end word of this named entity.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptNamedEntity.Words">
            <summary>
            Gets the word collection scoped by this instance.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptNamedEntity.NamedEntityTypeValues">
            <summary>
            Named entity type values static class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptNamedEntity.NamedEntityTypeValues.Phrase">
            <summary>
            Phrase named entity.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptSyllable">
            <summary>
            Script syllable.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSyllable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptSyllable"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSyllable.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptSyllable"/> class.
            </summary>
            <param name="language">Language name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSyllable.ParseStringToSyllable(System.String,Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Parsing the syllable string to a script syllable
            Here we suppose syllable is a valid pronunciation string.
            </summary>
            <param name="syllable">Syllable string, doesn't include unit boundary.</param>
            <param name="phoneSet">TtsPhoneSet.</param>
            <returns>The constructed script syllable.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSyllable.StringToStress(System.String)">
            <summary>
            Get the stress according to stress name in script file.
            </summary>
            <param name="name">Stress name.</param>
            <returns>TtsStress.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSyllable.StressToString(Microsoft.Tts.Offline.TtsStress)">
            <summary>
            Convert TtsStress to string used in script file.
            </summary>
            <param name="stress">TtsStress.</param>
            <returns>
            String representation of TtsStress.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSyllable.BuildTextFromPhones(Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Build the syllable's pronunciation.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <returns>The built pronunciation string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSyllable.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation scope.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSyllable.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write syllable to xml.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSyllable.TtsEmphasis">
            <summary>
            Gets or sets TtsEmphasis.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSyllable.TtsBreak">
            <summary>
            Gets or sets TtsBreak.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSyllable.Tag">
            <summary>
            Gets or sets Tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSyllable.Text">
            <summary>
            Gets or sets Text
            Leave this property for two-line script compatible.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSyllable.Language">
            <summary>
            Gets or sets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSyllable.Stress">
            <summary>
            Gets or sets TtsStress.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSyllable.TobiPitchAccent">
            <summary>
            Gets or sets TobiPitchAccent.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSyllable.Word">
            <summary>
            Gets or sets ScriptWord.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSyllable.Phones">
            <summary>
            Gets The phones this syllable has.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.WordType">
            <summary>
            Definition of script word types.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordType.Normal">
            <summary>
            Normal word entry type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordType.Period">
            <summary>
            Period .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordType.Exclamation">
            <summary>
            Exclamation !.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordType.Question">
            <summary>
            Question ?.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordType.OtherPunctuation">
            <summary>
            Other punctuation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordType.Punctuation">
            <summary>
            Punctuation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordType.Silence">
            <summary>
            Silence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordType.Spell">
            <summary>
            Spell out to match with the ESP.WT_SPELLOUT.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordType.Bookmark">
            <summary>
            Bookmark to match with the ESP.WT_BOOKMARK.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PType">
            <summary>
            How the word should be processed: word, spell or expand.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PType.NAN">
            <summary>
            Not applied.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PType.Word">
            <summary>
            It should read out as a word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PType.Spell">
            <summary>
            It should spell out.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PType.Expand">
            <summary>
            It should be expanded.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptWord">
            <summary>
            Definition of script word data structure.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptWord.DefaultBreak">
            <summary>
            Default break for word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptWord.UndefinedBreakAsk">
            <summary>
            Undefined value for break ask for word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptWord.DefaultWordTone">
            <summary>
            Default word tone for word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptWord.DefaultEmphasis">
            <summary>
            Default emphasis for word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptWord.DefaultPronSource">
            <summary>
            Default pronunciation source for word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptWord.TcgppScoreDelimeter">
            <summary>
            Tcgpp score delimeter.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptWord.DefaultProbability">
            <summary>
            Default probability value.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptWord"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptWord"/> class.
            Construction of word for a specified language.
            </summary>
            <param name="language">Language of the word to create.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.#ctor(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptWord"/> class.
            Construction of word for a specified language.
            </summary>
            <param name="language">Language of the word to create.</param>
            <param name="text">The word.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.#ctor(Microsoft.Tts.Offline.Language,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptWord"/> class.
            Construction of word for a specified language.
            </summary>
            <param name="language">Language of the word to create.</param>
            <param name="text">The word.</param>
            <param name="pronunciation">Pronunciation, can contain.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.ParsePronunciationToSyllables(System.String,Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Build script syllables from a word's pronunciation.
            </summary>
            <param name="pronunciation">The word's pronunciation.</param>
            <param name="phoneSet">TtsPhoneSet.</param>
            <returns>The built syllables.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.StringToWordType(System.String)">
            <summary>
            Get the word type according to type name in script file.
            </summary>
            <param name="name">Type name.</param>
            <returns>WordType.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.WordTypeToString(Microsoft.Tts.Offline.WordType)">
            <summary>
            Convert word type to string used in script file.
            </summary>
            <param name="type">Word type.</param>
            <returns>
            String representation of word type.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.StringToEmphasis(System.String)">
            <summary>
            Get the emphasis according to emphasis name in script file.
            </summary>
            <param name="name">Emphasis name.</param>
            <returns>TtsEmphasis.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.EmphasisToString(Microsoft.Tts.Offline.TtsEmphasis)">
            <summary>
            Convert TtsEmphasis to string used in script file.
            </summary>
            <param name="emphasis">TtsEmphasis.</param>
            <returns>
            String representation of TtsEmphasis.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.StringToBreak(System.String)">
            <summary>
            Get the break according to break name in script file.
            </summary>
            <param name="name">Break name.</param>
            <returns>TtsBreak.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.BreakToString(Microsoft.Tts.Offline.TtsBreak)">
            <summary>
            Convert TtsBreak to string used in script file.
            </summary>
            <param name="breakLevel">TtsBreak.</param>
            <returns>
            String representation of TtsBreak.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.BreakToString(Microsoft.Tts.Offline.TtsBreak,System.Boolean)">
            <summary>
            Convert TtsBreak to string used in script file.
            </summary>
            <param name="breakLevel">TtsBreak.</param>
            <param name="exportDefault">Whether export default break.</param>
            <returns>
            String representation of TtsBreak.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.StringToWordTone(System.String)">
            <summary>
            Get the WordTone according to WordTone name in script file.
            </summary>
            <param name="name">WordTone name.</param>
            <returns>TtsWordTone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.WordToneToString(Microsoft.Tts.Offline.TtsWordTone)">
            <summary>
            Convert WordTone to string used in script file.
            </summary>
            <param name="wordTone">TtsWordTone.</param>
            <returns>
            String representation of WordTone.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.StringToPronSource(System.String)">
            <summary>
            Get the PronSource according to PronSource name in script file.
            </summary>
            <param name="name">PronSource name.</param>
            <returns>TtsPronSource.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.PronSourceToString(Microsoft.Tts.Offline.TtsPronSource)">
            <summary>
            Convert PronSource to string used in script file.
            </summary>
            <param name="pronSource">TtsPronSource.</param>
            <returns>
            String representation of PronSource.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.SyncTcgppScoreFromPhoneToWord">
            <summary>
            Sync TCGPP score from phone to word.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.GetPronunciation(Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Get the pronunciation
            If there exist syllable list, build pronunciation from it
            Otherwise, return the pronunciation of word's attribute without unit boundary.
            Note: return empty string if this word doesn't have pronunciation(e.g. punctuation).
            </summary>
            <param name="phoneSet">Phone set.</param>
            <returns>Pronunciation string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation setting.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.WriteToXml(System.Xml.XmlWriter,Microsoft.Tts.Offline.XmlScriptFile.ContentControler,Microsoft.Tts.Offline.Language)">
            <summary>
            Write word to xml.
            </summary>
            <param name="writer">XmlWriter.</param>
            <param name="scriptContentController">XmlScriptFile.ContentControler.</param>
            <param name="scriptLanguage">The language of the script.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.GetPhones(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the Phones of this word.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <param name="errors">Errors if having invalid phone.</param>
            <returns>The phones.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.GetNormalPhoneNames(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the normal phones' names.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <param name="errors">Errors is having.</param>
            <returns>The pohne names.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.GetSyllables(Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Get the syllable strings this word has
            The syllable contains stress but doesn't contain unit boundaries.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <returns>Syllable strings.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.ReverseBuildPronunciation">
            <summary>
            Build the pronunciation string of word from the units of current word.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.GetUnits(Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData)">
            <summary>
            Get the unit list this word has.
            </summary>
            <param name="phoneme">Phoneme.</param>
            <param name="sliceData">Slice data.</param>
            <returns>Tts units.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.GetUnits(Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData,System.Boolean)">
            <summary>
            Get the unit list this word has.
            </summary>
            <param name="phoneme">Phoneme.</param>
            <param name="sliceData">Slice data.</param>
            <param name="buildUnitFeature">Whether build unit features.</param>
            <returns>Tts units.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.ClearTag">
            <summary>
            Reset Prosody tags and set them to default value,
            Including emphasis, break level and word tone.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.BuildUnitWithoutFeature(Microsoft.Tts.Offline.SliceData,Microsoft.Tts.Offline.PronunciationSeparator)">
            <summary>
            Build word unit without filling features.
            </summary>
            <param name="sliceData">Slice data.</param>
            <param name="pronunciationSeparator">Pronunciation separator.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.NextNonSilenceWord">
            <summary>
            Get next non-silence word in the sentence.
            </summary>
            <returns>Next non-silence word in the sentence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.ToString">
            <summary>
            Returns a System.string that represents the current ScriptWord.
            </summary>
            <returns>A System.string that represents the current ScriptWord.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.BuildUnitsForSyllable(Microsoft.Tts.Offline.ScriptSyllable,Microsoft.Tts.Offline.SliceData,Microsoft.Tts.Offline.PronunciationSeparator)">
            <summary>
            Build units from syllable.
            </summary>
            <param name="syllable">Syllable.</param>
            <param name="sliceData">Slice data.</param>
            <param name="pronunciationSeparator">Pronunciation separator.</param>
            <returns>Units.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.EstimatePosInSyllable(System.String[],Microsoft.Tts.Offline.SliceData)">
            <summary>
            Estimate pos in syllable for each slice.
            </summary>
            <param name="slices">Slices.</param>
            <param name="sliceData">Slice data table.</param>
            <returns>PosInSyllable list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptWord.UpdateUnitSyllables">
            <summary>
            Update the syllables for the word.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.ScriptWord.AccessingUnits">
            <summary>
            Event to indicate Units are accessed.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.TcgppScores">
            <summary>
            Gets or sets TCGPP phones scores of the word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.TtsXmlComments">
            <summary>
            Gets Tts XML comments.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.BreakTag">
            <summary>
            Gets or sets BreakTag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.WordToneTag">
            <summary>
            Gets or sets WordToneTag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.EmphasisTag">
            <summary>
            Gets or sets EmphasisTag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.PosTag">
            <summary>
            Gets or sets Tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.DetailedPosString">
            <summary>
            Gets or sets the detailed POS string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.LengthInString">
            <summary>
            Gets or sets LengthInString.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.OffsetInString">
            <summary>
            Gets or sets OffsetInString.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.IsSentenceMark">
            <summary>
            Gets a value indicating whether current word is a sentence mark.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Pos">
            <summary>
            Gets or sets POS.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Liaison">
            <summary>
            Gets or sets Liaison mark for this word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Description">
            <summary>
            Gets Description string of this word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Units">
            <summary>
            Gets Units.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.UnitSyllables">
            <summary>
            Gets Syllables used for unit generation.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Language">
            <summary>
            Gets or sets MyProperty.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Emphasis">
            <summary>
            Gets or sets Boolean, specify whether this word is marked emphasis.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Break">
            <summary>
            Gets or sets Break level, appending this word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.PronSource">
            <summary>
            Gets or sets Word pronunciation sourcem appending this word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.BreakAsk">
            <summary>
            Gets or sets the requirement of the break level for this work.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.BreakProb">
            <summary>
            Gets or sets the probability of the break level, appending this word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.WordTone">
            <summary>
            Gets or sets Word tone, appending this word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.WordType">
            <summary>
            Gets or sets Word type, specify what kind of word this is.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.IsTextWord">
            <summary>
            Gets a value indicating whether the word is text word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.IsPronouncableNormalWord">
            <summary>
            Gets a value indicating whether the word is pronouncable normal word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Grapheme">
            <summary>
            Gets or sets Word string, could be string.Empty for silence words.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Pronunciation">
            <summary>
            Gets or sets Pronunciation string of this word
            This property is left for two-line script using
            For the XML script, call GetPronunciation(TtsPhoneset).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.AcceptGrapheme">
            <summary>
            Gets or sets Acceptable word string, could be string.Empty for silence words.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.AcceptPronunciation">
            <summary>
            Gets or sets Acceptable pronunciation string of this word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Expansion">
            <summary>
            Gets or sets Word expansion.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.ProcessType">
            <summary>
            Gets or sets Process type: how the word should be processed. example: word, spell or expand.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Sentence">
            <summary>
            Gets or sets The sentence this word belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.ShallowParseTag">
            <summary>
            Gets or sets Shallow parsing tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.AcousticDomainTag">
            <summary>
            Gets or sets the acoustic domain tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.NusTag">
            <summary>
            Gets or sets the NUS tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.TobiInitialBoundaryTone">
            <summary>
            Gets or sets Tobi Initial Boundary Tone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.TobiFinalBoundaryTone">
            <summary>
            Gets or sets Tobi Final Boundary Tone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.RegularText">
            <summary>
            Gets or sets Regular Text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.PosString">
            <summary>
            Gets or sets Part of speech string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.NamedEntityTypeString">
            <summary>
            Gets or sets the type string of named entity of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.SubWords">
            <summary>
            Gets or sets the sub word list of this script word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.Syllables">
            <summary>
            Gets Syllable.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.ScriptPhones">
            <summary>
            Gets the script phones this word has.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.IsPronounced">
            <summary>
            Gets a value indicating whether is pronounced and non-silence word, silence word has pronunciation "-sil-".
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.IsLastNonSilenceWord">
            <summary>
            Gets a value indicating whether the word is last non silence word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.NETypeText">
            <summary>
            Gets or sets NE type text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptWord.BreakSuffix">
            <summary>
            Gets word break suffix:
                1) have break level bigger than #1 (word level break)
                2) there has explicit break ask > #1, which word break is #1.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlScriptFile">
            <summary>
            XML Script file class.
            </summary>
            <example>
                <code lang="C#" title="The following code example demonstrates the usage of XmlScriptFile class.">
            Using System;
            Using System.Collections.Generic;
            Using System.Text;
            Using Microsoft.Tts.Offline;
            Using Microsoft.Tts.Offline.Utility;
            Namespace FrameworkSample
            {
                class Program
                {
                    private static int Main(string[] args)
                    {
                        XmlScriptFile xmlScriptFile = new XmlScriptFile();
                        xmlScriptFile.Load(@"\\tts\shanhai\TTSData\ttsdata\en-GB\Language\Scripts\Scripts_0322326_0410275.xml");
                        foreach (ScriptItem item in xmlScriptFile.Items)
                        {
                            StringBuilder sb = new StringBuilder();
                            sb.AppendLine(Helper.NeutralFormat("ItemID={0}", item.Id));
                            sb.AppendLine(Helper.NeutralFormat("ItemText={0}", item.Text));
                            foreach (ScriptSentence sentence in item.Sentences)
                            {
                                sb.AppendLine(Helper.NeutralFormat("\tSentenceIndex={0}", item.Sentences.IndexOf(sentence)));
                                sb.AppendLine(Helper.NeutralFormat("\tSentenceText={0}", sentence.Text));
                                foreach (ScriptWord word in sentence.Words)
                                {
                                    sb.AppendLine(Helper.NeutralFormat("\t\tWordText={0}, Pron={1}, WordType={2}, Pos={3}",
                                        word.Grapheme, word.Pronunciation, word.WordType.ToString(), word.Pos));
                                }
                            }
                            Console.WriteLine(sb.ToString());
                        }
                        xmlScriptFile.Save(@"D:\script.xml");
                    }
                }
            }.
                </code>
            </example>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptFile.Extension">
            <summary>
            The extension of file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptFile.DeletedItemStatusName">
            <summary>
            Deleted sentence item status XML element name.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the XmlScriptFile class.
            </summary>
            <param name="language">Language name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.#ctor">
            <summary>
            Initializes a new instance of the XmlScriptFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XmlScriptFile class.
            </summary>
            <param name="filePath">The location of the script file to load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.LoadWithValidation(System.String,Microsoft.Tts.Offline.XmlScriptValidateSetting)">
            <summary>
            Load script and check it.
            </summary>
            <param name="scriptFile">File to be loaded.</param>
            <param name="validateSetting">Validation data set.</param>
            <returns>Script loaded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.CheckSchema(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Check whether an item is compliant with schema.
            </summary>
            <param name="item">Item to be checked.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.LoadItem(System.Xml.XmlTextReader,System.Object,Microsoft.Tts.Offline.Language)">
            <summary>
            Load one script item from the xmltextreader.
            </summary>
            <param name="reader">XmlTextReader.</param>
            <param name="contentController">ContentControler.</param>
            <param name="language">The language of the script.</param>
            <returns>ScriptItem that read.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.LoadWord(System.Xml.XmlTextReader,System.Object,Microsoft.Tts.Offline.Language)">
            <summary>
            Load one script word from the xmltextreader.
            </summary>
            <param name="reader">XmlTextReader.</param>
            <param name="contentController">ContentControler.</param>
            <param name="language">The language of the script.</param>
            <returns>ScriptWord that read.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.LoadNamedEntity(System.Xml.XmlTextReader,Microsoft.Tts.Offline.ScriptSentence,Microsoft.Tts.Offline.XmlScriptFile.ContentControler)">
            <summary>
            Load one script named entity from the xml text reader.
            </summary>
            <param name="reader">The XML reader instance to read data from.</param>
            <param name="sentence">Script sentence.</param>
            <param name="scriptContentController">ContentControler.</param>
            <returns>ScriptNamedEntity instance that read.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.Validate(Microsoft.Tts.Offline.Common.XmlValidateSetting)">
            <summary>
            Validate 
            Note that the items to be validated are compatible with script schema
            If user doesn't want to check POS, he/she should set _phoneSet = null.
            </summary>
            <param name="setting">Validation setting.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.GetItem(System.String,System.Boolean)">
            <summary>
            Get item by using item ID, if don't search deleted items can get it from ItemDict directly,
            When need search deleted items, need call this function to find the item..
            </summary>
            <param name="itemId">ID of the item to be found.</param>
            <param name="searchDeletedItem">Whether search deleted items.</param>
            <returns>Founded script item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.GetSentence(System.String,System.Boolean)">
            <summary>
            Get script sentence from script file.
            </summary>
            <param name="sentenceId">Sentence ID to be found.</param>
            <param name="searchDeletedSentence">Whether search deleted sentences.</param>
            <returns>Founded script sentence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.IsDeletedItem(System.String)">
            <summary>
            Indicating whether the item has been deleted.
            </summary>
            <param name="itemId">Item ID to be justified..</param>
            <returns>Whether the item has been deleted.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.Add(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Common.ErrorSet,System.Boolean,System.Boolean)">
            <summary>
            Add one item to script file.
            This method will check whether the item is balid before adding.
            </summary>
            <param name="item">The item to be added.</param>
            <param name="errors">The errors if failed to add.</param>
            <param name="validate">Whether validate schema and content.</param>
            <param name="sort">Whether insert the script item in the sort position.</param>
            <returns>True if successfully added.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.Add(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Common.ErrorSet,System.Boolean)">
            <summary>
            Add one item to script file.
            This method will check whether the item is balid before adding.
            </summary>
            <param name="item">The item to be added.</param>
            <param name="errors">The errors if failed to add.</param>
            <param name="validate">Whether validate schema and content.</param>
            <returns>True if successfully added.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.Remove(System.String)">
            <summary>
            Remove item from file.
            </summary>
            <param name="itemId">Item ID to be removed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.Remove(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove items from file.
            </summary>
            <param name="itemIds">Ids of items to be removed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.PerformanceLoad(System.IO.StreamReader,System.Object)">
            <summary>
            Performance loading.
            </summary>
            <param name="reader">Stream reader.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Save script into Xml writer.
            </summary>
            <param name="writer">Writer file to save into.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.LoadPhone(System.Xml.XmlTextReader)">
            <summary>
            Load phone from XmlTextReader.
            </summary>
            <param name="reader">XmlTextReader.</param>
            <returns>ScriptPhone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.LoadState(System.Xml.XmlTextReader)">
            <summary>
            Load state from XmlTextReader.
            </summary>
            <param name="reader">Xml text reader.</param>
            <returns>Script state.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.LoadWordAttributes(Microsoft.Tts.Offline.ScriptWord,System.Xml.XmlTextReader,Microsoft.Tts.Offline.Language)">
            <summary>
            Load the attributes for a given word.
            </summary>
            <param name="word">ScriptWord.</param>
            <param name="reader">XmlTextReader.</param>
            <param name="scriptLanguage">The language of the script.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.LoadSentence(System.Xml.XmlTextReader,Microsoft.Tts.Offline.XmlScriptFile.ContentControler,Microsoft.Tts.Offline.Language)">
            <summary>
            Load one sentence from the xml text reader.
            </summary>
            <param name="reader">XmlTextReader.</param>
            <param name="scriptContentController">ContentControler.</param>
            <param name="language">The language of the script.</param>
            <returns>Sentence that read.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.ParseDeletedWordsFromComments(Microsoft.Tts.Offline.ScriptSentence,Microsoft.Tts.Offline.Language)">
            <summary>
            Parse deleted words from comments.
            </summary>
            <param name="scriptSentence">Script sentence to be parse.</param>
            <param name="scriptLanguage">The language of the script.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.LoadSyllable(System.Xml.XmlTextReader,Microsoft.Tts.Offline.Language)">
            <summary>
            Load syllable from XmlTextReader.
            </summary>
            <param name="reader">XmlTextReader.</param>
            <param name="language">The language of the script.</param>
            <returns>ScriptSyllable.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.ParseDeletedItemsFromComments(Microsoft.Tts.Offline.Language)">
            <summary>
            Parse deleted items from comments.
            </summary>
            <param name="scriptLanguage">Script language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.WriteDeletedItemToComments">
            <summary>
            Write deleted item to comments.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.WriteTo(System.Xml.XmlWriter,Microsoft.Tts.Offline.XmlScriptFile.ContentControler)">
            <summary>
            Write script to xml.
            </summary>
            <param name="writer">XmlWriter.</param>
            <param name="scriptContentController">Content controller.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.IsSsml">
            <summary>
            Gets or sets a value indicating whether the script text is ssml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.TtsXmlComments">
            <summary>
            Gets Tts XML comments.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.DeletedItemsDict">
            <summary>
            Gets Deleted items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.Version">
            <summary>
            Gets or sets Script version.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.SayAs">
            <summary>
            Gets or sets Say-as type the script applied.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.Category">
            <summary>
            Gets or sets Category: Lexicon, spell, Lts, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.PhoneSet">
            <summary>
            Gets or sets Phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.PosSet">
            <summary>
            Gets or sets Pos set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.Schema">
            <summary>
            Gets Schema of script.xml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.Items">
            <summary>
            Gets The script items this file contains.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.ItemDic">
            <summary>
            Gets The script item key-value pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlScriptFile.ContentControler">
            <summary>
            XmlScriptFile content controler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptFile.ContentControler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.XmlScriptFile.ContentControler"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.ContentControler.SaveComments">
            <summary>
            Gets or sets a value indicating whether save comment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.ContentControler.LoadComments">
            <summary>
            Gets or sets a value indicating whether load comment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptFile.ContentControler.SavePronSource">
            <summary>
            Gets or sets a value indicating whether save pronunciation source.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptPhone">
            <summary>
            Script phone class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptPhone.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptPhone"/> class.
            </summary>
            <param name="name">The phone name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptPhone.IsValid(System.String,System.String,Microsoft.Tts.Offline.XmlScriptValidationScope,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check whether the element is valid or not.
            </summary>
            <param name="itemID">ID of the script item.</param>
            <param name="nodePath">Path of the node.</param>
            <param name="scope">The validation setting.</param>
            <param name="errors">Contains errors found at present.</param>
            <returns>Valid or not. Always true if no validation is performed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptPhone.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write phone to xml.
            </summary>
            <param name="writer">XmlWriter.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPhone.Name">
            <summary>
            Gets or sets Phone name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPhone.Valid">
            <summary>
            Gets or sets a value indicating whether this is a valid phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPhone.Tone">
            <summary>
            Gets or sets Phone's tone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPhone.SentenceId">
            <summary>
            Gets or sets the source sentence id of this phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPhone.UnitIndex">
            <summary>
            Gets or sets the unit index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPhone.Stress">
            <summary>
            Gets or sets TtsStress.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPhone.Syllable">
            <summary>
            Gets or sets The syllable this phone belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptPhone.States">
            <summary>
            Gets The states this phone has.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptState">
            <summary>
            Script state class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptState.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write state to xml.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptState.Phone">
            <summary>
            Gets or sets The phone this state belongs to.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.SentenceType">
            <summary>
            Definition of script sentence types.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.Declarative">
            <summary>
            Declarative.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.YesNoQuestion">
            <summary>
            Yes/No question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.WhoQuestion">
            <summary>
            Who question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.Exclamatory">
            <summary>
            Exclamatory.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.Imperative">
            <summary>
            Imperative.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.Hailing">
            <summary>
            Hailing.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.SingleWordQuestion">
            <summary>
            Single word question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.ChoiceQuestion">
            <summary>
            Choice question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SentenceType.Cuteness">
            <summary>
            Cuteness sentence.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.EmotionCategory">
            <summary>
            The emotion category.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.PraseUnknown">
            <summary>
            Prase unknow.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Neutral">
            <summary>
            Default value, does not specify the emotion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Sensitive">
            <summary>
            Sensitive emotion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Abashed">
            <summary>
            Abashed emotion, including shame, sorry, apologetic, guilt.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Satisfied">
            <summary>
            Satisfied emotion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Bouncy">
            <summary>
            Bouncy emotion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Considerate">
            <summary>
            Considerate emotion, including affectionate, kind, loving, sincere, sensitive, pity.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Sorry">
            <summary>
            Sorry emotion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Optimistic">
            <summary>
            Optimistic emotion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Elated">
            <summary>
            Elated emotion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Calm">
            <summary>
            Calm emotion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Worry">
            <summary>
            Worry emotion, including afraid, anxiety, fear.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Happy">
            <summary>
            Happy emotion, including amuse, bouncy, excited, interested, pleased, satisfied, contentment, optimistic, elated, joy.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Angry">
            <summary>
            Angry emotion, including complaining.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Confident">
            <summary>
            Confident emotion, including resolute.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Disappointed">
            <summary>
            Disappointed emotion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Disgust">
            <summary>
            Disgust emotion, including bored, contempt, hate.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EmotionCategory.Sad">
            <summary>
            Sad emotion.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptSentence">
            <summary>
            Script class definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptSentence.DeletedWordStatusName">
            <summary>
            Deleted words status XML element name.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.#ctor">
            <summary>
            Initializes a new instance of the ScriptSentence class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the ScriptSentence class.
            </summary>
            <param name="language">Language of the sentence.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.#ctor(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Initializes a new instance of the ScriptSentence class.
            </summary>
            <param name="language">Language of the sentence.</param>
            <param name="text">The text sentence.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.EmotionTypeToString(Microsoft.Tts.Offline.EmotionCategory)">
            <summary>
            Convert EmotionType to string used in script file.
            </summary>
            <param name="emotionType">EmotionType.</param>
            <returns> String representation of EmotionType.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.StringToEmotionType(System.String)">
            <summary>
            Convert string used in script file to EmotionType.
            </summary>
            <param name="emotionName">Emotion string used in script file.</param>
            <returns>Emotion type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.StringToSentenceType(System.String)">
            <summary>
            Get the sentence type according to type name in script file.
            </summary>
            <param name="name">Type name.</param>
            <returns>SentenceType.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.SentenceTypeToString(Microsoft.Tts.Offline.SentenceType)">
            <summary>
            Convert sentence type to string used in script file.
            </summary>
            <param name="type">Sentence type.</param>
            <returns>String representation of sentence type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.GetIntonationPhrase(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Get intonation phrase of the word.
            </summary>
            <param name="word">Script word.</param>
            <returns>Intonation phrase.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.GetIntermediatePhrase(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Get intermediate phrase.
            </summary>
            <param name="word">Script word.</param>
            <returns>Intermediate phrase.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.BuildIntonationPhrases">
            <summary>
            Build intonation phrases.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.ConvertNamedEntityToWord">
            <summary>
            Converts named entities to words.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.ConvertWordToNamedEntity">
            <summary>
            Converts proper words in the word list into named entities.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.DeleteWord(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Delete word from the sentence.
            For example: A, B, C, D, E.
            Current status: C, and D have been deleted.then word after word dict store: C->D, D->E.
            After deleting B, then deleted word after word will store: B->C, C->D, D->E.
            </summary>
            <param name="scriptWord">Word to be deleted.</param>
            <returns>Deleted word position.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.InsertWord(Microsoft.Tts.Offline.ScriptWord,System.Int32)">
            <summary>
            Insert word to the position.
            </summary>
            <param name="scriptWord">Word to be insert.</param>
            <param name="position">Position to be inserted.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.AddNamedEntity(Microsoft.Tts.Offline.ScriptNamedEntity)">
            <summary>
            Adds a new named entity instance into the list, while avoid the duplicated ones.
            </summary>
            <param name="entity">The named entity instance to add.</param>
            <returns>Whether succeeded added.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.BuildTextFromWords">
            <summary>
            Build sentence from word list.
            </summary>
            <returns>Sentence string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.BuildPronFromWords">
            <summary>
            Build pronunciation from sentence's word list.
            </summary>
            <returns>Pronunciation of the words.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.GetIntermediatePhrases">
            <summary>
            Get intermediate phrases of this sentence.
            </summary>
            <returns>The intermediate phrases this sentence has.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.GetPhones(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the Phones of this sentence.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <param name="errors">Errors if having invalid phone.</param>
            <returns>The phones.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.GetNormalPhoneNames(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the normal phones' names.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <param name="errors">Errors is having.</param>
            <returns>The pohne names.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.GetSyllables(Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Get the syllable strings this sentence has
            The syllable contains stress but doesn't contain unit boundaries.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <returns>Syllable strings.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.GetUnits(Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData)">
            <summary>
            Get the unit list this sentence has.
            </summary>
            <param name="phoneme">Phoneme.</param>
            <param name="sliceData">Slice data.</param>
            <returns>Tts units.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.GetUnits(Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData,System.Boolean)">
            <summary>
            Get the unit list this sentence has.
            </summary>
            <param name="phoneme">Phoneme.</param>
            <param name="sliceData">Slice data.</param>
            <param name="buildUnitFeature">Whether build unit features.</param>
            <returns>Tts units.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.WriteToXml(System.Xml.XmlWriter,Microsoft.Tts.Offline.XmlScriptFile.ContentControler,Microsoft.Tts.Offline.Language)">
            <summary>
            Write sentence to xml.
            </summary>
            <param name="writer">XmlWriter.</param>
            <param name="scriptContentController">XmlScriptFile.ContentControler.</param>
            <param name="scriptLanguage">The language of the script.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.RemoveNamedEntity(System.String)">
            <summary>
            Remove the specified named entity from script sentence.
            </summary>
            <param name="namedEntityName">Named entity name to be removed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.PickNoOverlapOnes(System.Collections.Generic.List{Microsoft.Tts.Offline.ScriptNamedEntity})">
            <summary>
            Pick no overlap ones.
            </summary>
            <param name="entities">The entities.</param>
            <returns>The script named entity list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.IsNamedEntityOverlapping(System.Collections.Generic.List{Microsoft.Tts.Offline.ScriptNamedEntity})">
            <summary>
            Tells whether named entities in current list have overlapped word cover.
            </summary>
            <param name="entities">The entities.</param>
            <returns>True if finding overlap, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.PickNoOverlapScriptNamedEntities(System.Collections.Generic.List{Microsoft.Tts.Offline.ScriptNamedEntity})">
            <summary>
            Pick no overlap named entities.
            </summary>
            <param name="entities">Script named entities.</param>
            <returns>Picked no overlap named entities.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.ToScriptNamedEntity(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Converts one word instance to script named entity.
            </summary>
            <param name="word">The word instance to convert.</param>
            <returns>The converted script named entity instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.ToScriptWord(Microsoft.Tts.Offline.ScriptNamedEntity)">
            <summary>
            Converts one named entity to script word instance.
            </summary>
            <param name="entity">The named entity instance to convert.</param>
            <returns>The converted word instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.RefreshNamedEntityRangeIndex">
            <summary>
            Refreshes the range indexes of the named entities in this sentence.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.WriteDeletedWordsToComments(Microsoft.Tts.Offline.Language)">
            <summary>
            Write dleeted words to comments.
            </summary>
            <param name="scriptLanguage">Script language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.BuildUnits(Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData,System.Boolean)">
            <summary>
            Build units for this sentence.
            </summary>
            <param name="phoneme">Phoneme.</param>
            <param name="sliceData">Slice data.</param>
            <param name="buildUnitFeature">Whether build unit features.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptSentence.BuildUnitFeatures(Microsoft.Tts.Offline.Phoneme)">
            <summary>
            Build unit features for this sentence.
            </summary>
            <param name="phoneme">Phoneme.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.IsQuestion">
            <summary>
            Gets a value indicating whether the sentence is question sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.ScriptPhones">
            <summary>
            Gets the script phones this sentence has.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.DeletedWordAndFollowingWordDict">
            <summary>
            Gets deleted word after word dictionary, each deleted words has been attached to one
            Word in the script sentence, if revert the deleted word, use this dictionary to find
            The deleted word's postion to revert.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.DeletedWordsDict">
            <summary>
            Gets deleted word dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.TtsXmlComments">
            <summary>
            Gets TTS xml comments.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.Language">
            <summary>
            Gets or sets language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.Text">
            <summary>
            Gets or sets the text of this Sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.SentenceType">
            <summary>
            Gets or sets sentence type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.Emotion">
            <summary>
            Gets or sets sentence emotion type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.ScriptItem">
            <summary>
            Gets or sets the script item this sentence belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.Words">
            <summary>
            Gets the word list this sentence contains.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.AcceptSentences">
            <summary>
            Gets the acceptable results (contains several words) for this sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.TextWords">
            <summary>
            Gets the non-empty word list this sentence contains.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.NamedEntities">
            <summary>
            Gets the named entity list this sentence has.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.NeedBuildUnits">
            <summary>
            Gets or sets a value indicating whether need build units again.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.PronouncedNormalWords">
            <summary>
            Gets the normal words this sentence has.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.PronouncedWords">
            <summary>
            Gets the pronounced and non-silence words this sentence has.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptSentence.IntonationPhrases">
            <summary>
            Gets intonation phrases.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Script.ScriptProsodicWord">
            <summary>
            Script prosodic word.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptProsodicWord.#ctor">
            <summary>
            Initializes a new instance of the ScriptProsodicWord class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptProsodicWord.ToString">
            <summary>
            Get string value of the prosodic word.
            </summary>
            <returns>String value of the prosodic word.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptProsodicWord.IntermediatePhrase">
            <summary>
            Gets or sets intermediate phrase.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptProsodicWord.Words">
            <summary>
            Gets words in the intermediate phrase.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Script.ScriptIntermediatePhrase">
            <summary>
            Script intermediate phrase.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptIntermediatePhrase.#ctor">
            <summary>
            Initializes a new instance of the ScriptIntermediatePhrase class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptIntermediatePhrase.Parse(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord})">
            <summary>
            Parse words to intermediate phrase.
            </summary>
            <param name="intermediateWords">Words to be parsed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptIntermediatePhrase.GetProsodicWord(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Get prosodic word contains this word.
            </summary>
            <param name="scriptWord">Script word.</param>
            <returns>Prosodic word contained this word.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptIntermediatePhrase.ToString">
            <summary>
            Get string value of the prosodic word.
            </summary>
            <returns>String value of the prosodic word.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptIntermediatePhrase.IntonationPhrase">
            <summary>
            Gets or sets intonation phrase.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptIntermediatePhrase.ProsodicWords">
            <summary>
            Gets prosodic words in the intermediate phrase.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptIntermediatePhrase.AllWords">
            <summary>
            Gets all words in the intermediate phrase.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Script.ScriptIntonationPhrase">
            <summary>
            Script intonation phrase.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptIntonationPhrase.#ctor">
            <summary>
            Initializes a new instance of the ScriptIntonationPhrase class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptIntonationPhrase.GetProsodicWord(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Get intermediate phrase of the word.
            </summary>
            <param name="word">Script word.</param>
            <returns>Intermediate phrase of the script word.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptIntonationPhrase.GetIntermediatePhrase(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Get intermediate phrase of the word.
            </summary>
            <param name="word">Script word.</param>
            <returns>Intermediate phrase of the script word.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptIntonationPhrase.Parse(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord})">
            <summary>
            Parse words to intonation phrase.
            </summary>
            <param name="intonationWords">Words to be parsed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptIntonationPhrase.ToString">
            <summary>
            Get string value of the prosodic word.
            </summary>
            <returns>String value of the prosodic word.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptIntonationPhrase.Sentence">
            <summary>
            Gets or sets script sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptIntonationPhrase.IntermediatePhrases">
            <summary>
            Gets intermediate phrase list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptIntonationPhrase.AllProsodicWord">
            <summary>
            Gets all prosodic words in the intonation phrase.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.EngineType">
            <summary>
            Engine Type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EngineType.Tts20">
            <summary>
            Mulan Engine, version 2.0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.EngineType.Tts30">
            <summary>
            ShanHai/ShenZhou Engine, version 3.0.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.DataErrorSet">
            <summary>
            Script error collection.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataErrorSet.Merge(Microsoft.Tts.Offline.DataErrorSet)">
            <summary>
            Merge erros in errorSet to erros in this instance.
            </summary>
            <param name="errorSet">Source errors to copy.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataErrorSet.AppendSection(System.String,System.String)">
            <summary>
            Append this instance to text file.
            </summary>
            <param name="title">Title of this section.</param>
            <param name="filePath">Target file to append.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataErrorSet.FillSentenceId(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Fill sentence ids in the collection.
            </summary>
            <param name="ids">Id dictionary.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataErrorSet.Dump2Console">
            <summary>
            Dump to console.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DataErrorSet.Errors">
            <summary>
            Gets Error collection in this set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.DataError">
            <summary>
            Script error.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.DataError"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataError.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.DataError"/> class.
            </summary>
            <param name="message">Message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataError.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.DataError"/> class.
            </summary>
            <param name="path">Path.</param>
            <param name="message">Message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataError.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.DataError"/> class.
            </summary>
            <param name="path">Path.</param>
            <param name="message">Message.</param>
            <param name="id">Id.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataError.ToString">
            <summary>
            String presentation.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.DataError.SentenceId">
            <summary>
            Gets or sets Sentence identity of this error message.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DataError.Message">
            <summary>
            Gets or sets Detailed message about this error.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DataError.FilePath">
            <summary>
            Gets or sets Script file path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptFile">
            <summary>
            Definition of Script file. Data format:
            ((sentence id) (sentence content)(\n)(sentence pronunciation))+.
            <example>
            104281 on wednesdays * after five p.m.
                  aa 1 n / w eh 1 n . z - d . ey . z / ae 1 . f - t . ax r / f . ay 1 . v / p . iy 1 / eh 1 m /.
            </example>
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptFile.Extension">
            <summary>
            File extension for script file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptFile.BadPhoneLabel">
            <summary>
            The label for bad phone. E.g.  "a~" indicates that phone "a" is bad.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ScriptFile"/> class.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ReadAllData(System.String,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.ScriptItem})">
            <summary>
            Load script file into sentence id and script entry maped dictionary.
            </summary>
            <param name="scriptFilePath">Script file to read.</param>
            <param name="language">Language of the script.</param>
            <param name="engineType">Engine of the script to support.</param>
            <param name="outEntries">Output of script items.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ReadAllData(System.String,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptItem},System.Boolean,System.Boolean)">
            <summary>
            Load script file into script entry collection, in order as in file.
            </summary>
            <param name="scriptFilePath">Script file to read.</param>
            <param name="outEntries">Output of script items.</param>
            <param name="withPron">Whether load script with pronunciation.</param>
            <param name="withSid">Whether load script with SID.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ReadAllData(System.String,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptItem})">
            <summary>
            Load script file into script entry collection, in order as in file.
            </summary>
            <param name="scriptFilePath">Script file to read.</param>
            <param name="language">Language of the script.</param>
            <param name="engineType">Engine of the script to support.</param>
            <param name="outEntries">Output of script items.</param>        
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ReadAllData(System.String,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptItem},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Load script file into script entry collection, in order as in file.
            </summary>
            <param name="scriptFilePath">Script file to read.</param>
            <param name="language">Language of the script.</param>
            <param name="engineType">Engine of the script to support.</param>
            <param name="outEntries">Output of script items.</param>
            <param name="withPron">Whether load script with pronunciation.</param>
            <param name="withSid">Whether load script with SID.</param>
            <param name="validate">Whether validate script item.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ReadOneScriptItem(System.IO.StreamReader,Microsoft.Tts.Offline.ScriptItem,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Read one script item from the text stream reader.
            </summary>
            <param name="reader">Text stream to read out from.</param>
            <param name="scriptItem">Result script item.</param>
            <param name="withPron">Flag to indicate whether text stream is
            with pronunciation for each sentence.</param>
            <param name="withSid">Flag to indicate whether text stream is
            with sentence id for each sentence.</param>
            <param name="validate">Whether validate script item.</param>
            <returns>Data error found during reading, otherwise null returned.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ReadOneScriptItem(Microsoft.Tts.Offline.ScriptItem,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Read one script item from the sentence content line and pronunciation line.
            </summary>
            <param name="scriptItem">Result script item.</param>
            <param name="sentenceLine">Sentence content line.</param>
            <param name="pronunciationLine">Pronunciation line.</param>
            <param name="withPron">Flag to indicate whether text stream is
            with pronunciation for each sentence.</param>
            <param name="withSid">Flag to indicate whether text stream is
            with sentence id for each sentence.</param>
            <returns>Data error found during reading, otherwise null returned.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ReadOneScriptItem(Microsoft.Tts.Offline.ScriptItem,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Read one script item from the sentence content line and pronunciation line.
            </summary>
            <param name="scriptItem">Result script item.</param>
            <param name="sentenceLine">Sentence content line.</param>
            <param name="pronunciationLine">Pronunciation line.</param>
            <param name="withPron">Flag to indicate whether text stream is
            with pronunciation for each sentence.</param>
            <param name="withSid">Flag to indicate whether text stream is
            with sentence id for each sentence.</param>
            <param name="validate">Whether validate the script item.</param>
            <returns>Data error found during reading, otherwise null returned.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.RemoveErrorSentence(Microsoft.Tts.Offline.DataErrorSet,System.String)">
            <summary>
            Remove error sentence out of script file.
            </summary>
            <param name="errorSet">Data error set.</param>
            <param name="scriptFilePath">Script file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.Concatenate(Microsoft.Tts.Offline.Language,System.String,System.String)">
            <summary>
            Concatenate sub script files in given directory into an unified sript file.
            </summary>
            <param name="language">Language of the script to process.</param>
            <param name="scriptDir">The source directory of sub script files.</param>
            <param name="targetScriptFilePath">The output script file path.</param>
            <returns>Data error set containing error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ConcatenateInOrder(Microsoft.Tts.Offline.Language,System.String,System.String)">
            <summary>
            Concatenate script files in given file list into an unified sript file and reorder the sentence ID.
            </summary>
            <param name="language">Language of the script to process.</param>
            <param name="scriptListFile">A file list of the path of each source scripts, one path in one line.</param>
            <param name="targetScriptFilePath">The output script file path.</param>
            <returns>Data error set containing error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ConcatenateFiles(Microsoft.Tts.Offline.Language,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String)">
            <summary>
            Concatenate script files in given file list into an unified sript file and reorder the sentence ID.
            </summary>
            <param name="language">Language of the script to process.</param>
            <param name="fileList">A set of file names to be concatenated.</param>
            <param name="resetSid">A bool to indicate whether re-oreder the sentence ID of all scripts.</param>
            <param name="targetScriptFilePath">The output script file path.</param>
            <returns>Data error set containing error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ValidatePronunciation(Microsoft.Tts.Offline.ScriptFile)">
            <summary>
            Validate the phone sequence in the script file. It will check:
             1) word alignment with the pronunciation string. This means that
                for each word it should have one and only one corresponding
                pronunciation
             2) the pronunciation should be syllabified, and for each syllbale
                there is one and only one vowel. It can have one stress mark
             3) each phones in the pronunciation string, should be valid in 
                that langugage phoneme set.
            </summary>
            <param name="script">The script oebjct to be validated.</param>
            <returns>Errors/problems found in the script.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ValidatePronunciation(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Validate the word pronunciations in sentence are valid or not.
            </summary>
            <param name="entry">Script item.</param>
            <returns>Data error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ValidatePronunciation(Microsoft.Tts.Offline.ScriptItem,System.Boolean)">
            <summary>
            Validate the word pronunciations in sentence are valid or not.
            </summary>
            <param name="entry">Script item.</param>
            <param name="isBadPhoneValid">True means that bad phone is valid.</param>
            <returns>Data error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ValidateSyllables(Microsoft.Tts.Offline.ScriptItem,System.String)">
            <summary>
            Validate the syllable in word pronunciation are valid or not.
            </summary>
            <param name="entry">Script item.</param>
            <param name="word">Pronunciation of word.</param>
            <returns>Data error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ValidateSlices(Microsoft.Tts.Offline.ScriptItem,System.String)">
            <summary>
            Validate the slices in syllable are valid or not.
            </summary>
            <param name="entry">Script item.</param>
            <param name="syllable">Pronunciation of syllable.</param>
            <returns>Data error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ValidatePhones(Microsoft.Tts.Offline.ScriptItem,System.String)">
            <summary>
            Validate the phones in slice are valid or not.
            </summary>
            <param name="entry">Script item.</param>
            <param name="slice">Pronunciation of slice.</param>
            <returns>Data error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.MergeScript(Microsoft.Tts.Offline.Language,System.String,System.String)">
            <summary>
            Merge a folder of scripts into one
            In wave normalization/force align/font building, we should discard error sentences.
            </summary>
            <param name="language">Language.</param>
            <param name="scriptFolder">Script folder.</param>
            <param name="outputScript">Output script.</param>
            <returns>The data errors.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.Load(System.String)">
            <summary>
            Initialize script file from a file.
            </summary>
            <param name="filePath">File to load script data.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.Save(System.String)">
            <summary>
            Save script items into file.
            </summary>
            <param name="filePath">Target file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.Save(System.String,System.Boolean,System.Boolean)">
            <summary>
            Save script items into file.
            </summary>
            <param name="filePath">Target file to save.</param>
            <param name="hasSid">Whether contains SID.</param>
            <param name="hasPron">Whether contains pronunciation.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.BuildScript(System.String,System.String)">
            <summary>
            Build whole pronunciation script from script directory.
            </summary>
            <param name="phoneScriptFileDir">Script directory.</param>
            <param name="outFilePath">Pronunciation script file.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.BuildScript(System.String[],System.String)">
            <summary>
            Build pronunciation script from file list.
            </summary>
            <param name="scriptFilePaths">Hiragana script file list.</param>
            <param name="outFilePath">Romaji pronunciation script file.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.BuildMonoMlf(System.String,System.String)">
            <summary>
            Based on script file, build a mono-phone MLF (See HTK document) file .
            </summary>
            <param name="scriptFilePath">Script file path.</param>
            <param name="outFilePath">Output Mlf file path.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ProcessPronunciation(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Process pronunciaction for script entry before script building.
            </summary>
            <param name="entry">Script item.</param>
            <returns>Data error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.BuildMonoMlf(System.IO.TextWriter,Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Build one sentence for mono MLF file .
            </summary>
            <param name="writer">Text writer to save MLF file.</param>
            <param name="entry">Script item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.IsGoodSyllableWithVowel(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Phoneme,System.String[])">
            <summary>
            Check if the syllable has valid vowel number.
            </summary>
            <param name="entry">Script entry.</param>
            <param name="phoneme">Phoneme.</param>
            <param name="phones">Phones of the syllable.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.IsSyllableWithEnoughVowel(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Phoneme,System.String[])">
            <summary>
            Check if the syllable has enough vowels.
            </summary>
            <param name="entry">Script entry.</param>
            <param name="phoneme">Phoneme.</param>
            <param name="phones">Phones of the syllable.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.IsSyllableWithLessVowel(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Phoneme,System.String[])">
            <summary>
            Check if the syllable has too many vowels.
            </summary>
            <param name="entry">Script entry.</param>
            <param name="phoneme">Phoneme.</param>
            <param name="phones">Phones of the syllable.</param>
            <returns>True if not having too many.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.IsGoodSyllableWithSonorant(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Phoneme,System.String[])">
            <summary>
            Check if the syllable has vowel or has a sonorant phoneme.
            </summary>
            <param name="entry">Script entry.</param>
            <param name="phoneme">Phoneme.</param>
            <param name="phones">Phones of the syllable.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.BuildMonoMlf(System.IO.TextWriter,System.String)">
            <summary>
            Based on script file, build a mono-phone MLF (See HTK document) file .
            </summary>
            <param name="writer">Writer to write result out if not null.</param>
            <param name="scriptFilePath">Script file path.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.BuildMonoMlf(System.IO.TextWriter,Microsoft.Tts.Offline.TtsUnit)">
            <summary>
            Build one unit for mono MLF file.
            </summary>
            <param name="writer">Text writer to save MLF file.</param>
            <param name="unit">Unit.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.BuildMonoMlf(System.IO.TextWriter,Microsoft.Tts.Offline.ScriptSyllable)">
            <summary>
            Build one syllable for mono MLF file.
            </summary>
            <param name="writer">Text writer to save MLF file.</param>
            <param name="syllable">Syllable.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.AppendScript(System.String,System.String,System.Boolean)">
            <summary>
            Append a script into other script file.
            </summary>
            <param name="subScriptFilePath">Source script file.</param>
            <param name="outFilePath">Target script file.</param>
            <param name="append">Whether appending to target script file.</param>
            <returns>Invalid format script entry strings.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ConvertToSrPhone(Microsoft.Tts.Offline.TtsUnit)">
            <summary>
            Convert phones of TTS unit to SR phones.
            </summary>
            <param name="unit">TtsUnit to be processed.</param>
            <returns>SR phone array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptFile.ConvertToSrPhone(Microsoft.Tts.Offline.ScriptSyllable)">
            <summary>
            Convert phones of TTS unit to SR phones.
            </summary>
            <param name="syllable">Syllable to be processed.</param>
            <returns>SR phone array.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptFile.ErrorSet">
            <summary>
            Gets Data error set found in this script file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptFile.Items">
            <summary>
            Gets Script entries of this script file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptFile.FilePath">
            <summary>
            Gets or sets File path of this script file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptFile.Language">
            <summary>
            Gets or sets Language of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptFile.EngineType">
            <summary>
            Gets or sets Engine type of this script file supports.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ScriptFile.Phoneme">
            <summary>
            Gets Phoneme for this language script file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptError">
            <summary>
            Script error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.DuplicateItemId">
            <summary>
            Duplicate item id.
            Parameters: 
            {0}: item id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.PronunciationError">
            <summary>
            Pronunciation error
            Phones should be separated by whitespace and in phone set.
            Parameters: 
            {0}: pronunciation error
            {1}: item id
            {2}: word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.UnrecognizedPos">
            <summary>
            Unrecognized POS.
            Parameters: 
            {0}: item id
            {1}: word
            {2}: pronunciation
            {3}: pos.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.SentenceSeparatingError">
            <summary>
            Sentence separating error.
            Parameters: 
            {0}: item id
            {1}: file path
            {2}: sentence text.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.WordBreakingError">
            <summary>
            Word breaking error. 
            Parameters: 
            {0}: item id
            {1}: file path
            {2}: sentence text.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.UvSegIntervalError">
            <summary>
            UV seg interval error.
            Parameters:
            {0}: item id
            {1}: error path
            {2}: interval begin
            {3}: interval end.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.UvSegOrderError">
            <summary>
            UV seg order error.
            Parameters:
            {0}: item id
            {1}: error path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.UvSegOverlappingError">
            <summary>
            UV seg overlapping error.
            Parameters:
            {0}: item id
            {1}: error path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.F0Error">
            <summary>
            Sanity of f0.
            Parameters:
            {0}: item id
            {1}: error path
            {2}: invalid f0 value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.F0AndUvTypeError">
            <summary>
            Inconsistency error between f0 values and UV type.
            Parameters:
            {0}: item id
            {1}: error path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.DurationAndIntervalError">
            <summary>
            Inconsistency error between duration value and UV segement interval.
            Parameters:
            {0}: item id
            {1}: error path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.SegmentIntervalError">
            <summary>
            Element segment interval error.
            Parameters:
            {0}: item id
            {1}: error path
            {2}: interval begin
            {3}: interval end.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.SegmentSequenceError">
            <summary>
            Element segment interval error.
            Parameters:
            {0}: item id
            {1}: error path
            {2}: interval begin
            {3}: previous interval end.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.SegmentDurationAndIntervalError">
            <summary>
            Inconsistency error between segment duration value and UV segement interval.
            Parameters:
            {0}: item id
            {1}: error path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.DurationAndSegmentError">
            <summary>
            Inconsistency error between duration and segment.
            Parameters:
            {0}: item id
            {1}: error path
            {2}: duration
            {3}: segment begin
            {4}: segment end.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.InvalidLanguage">
            <summary>
            When load scripts in folder using ScriptFileCollection class, language doesn't match with the expected one.
            Parameters:
            {0}: invalid script language
            {1}: expected language
            {2}: script file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.ScriptCollectionError">
            <summary>
            Wrap the script errors in file when load scripts using ScriptFileCollection class
            Parameters:
            {0}: file name of the script contains error.
            {1}: errors of the script.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.EmptyPronInNormalWord">
            <summary>
            Other errors
            Parameters:
            {0}: item id
            {1}: normal word text.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.OtherErrors">
            <summary>
            Other errors
            Parameters:
            {0}: item id
            {1}: error description.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ScriptError.InvalidXmlCharactersError">
            <summary>
            Invalid xml characters error
            Parameters:
            {0}: invalid line number
            {1}: invalid text.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ScriptHelper">
            <summary>
            ScriptHelper class .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.CompareItemId(System.String,System.String)">
            <summary>
            Compare item ID.
            </summary>
            <param name="itemIdA">Item ID A.</param>
            <param name="itemIdB">Item ID B.</param>
            <returns>1: ItemIdA bigger than ItemIdB;
            -1: ItemIdA smaller than ItemIdB;
            0: ItemIdA equal to ItemIdB.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.IsValidSentenceId(System.String)">
            <summary>
            Check whether the sentence ID format is valid.
            </summary>
            <param name="sentenceId">Sentence ID to be validated.</param>
            <returns>Whether the sentence ID is valid.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.GetItemIdFromSentenceId(System.String,System.Int32@)">
            <summary>
            Get item ID from sentence ID.
            </summary>
            <param name="sentenceId">Sentence ID.</param>
            <param name="sentenceIndex">Sentence index, start from 1.</param>
            <returns>Item id for the sentence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.GetItemIdFromSentenceId(System.String)">
            <summary>
            Get item ID from sentence ID.
            </summary>
            <param name="sentenceId">Sentence ID.</param>
            <returns>Item id for the sentence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.BuildDisplayedWordText(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Scritp word to be displayed.
            </summary>
            <param name="word">Script word.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.SyncWordChangesToItem(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Sync word text to item text.
            </summary>
            <param name="scriptWord">Script word to be synced.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.SyncItemTextFromWordList(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Sync item text from word list.
            </summary>
            <param name="scriptItem">Script item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.MapPronunciation(System.String,Microsoft.Tts.Offline.PhoneMap)">
            <summary>
            Map pronunciation using phonemap.
            Only support map syllable based pronunciation.
            Todo: Support phone based, unit based pronunciation.
            </summary>
            <param name="pronunciation">Pronunciation to be mapped.</param>
            <param name="phoneMap">Phone map used to map pronunciation.</param>
            <returns>Mapped pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.MergeScripts(System.String,System.String,System.Boolean,Microsoft.Tts.Offline.XmlScriptValidateSetting)">
            <summary>
            Merge scripts in a folder into a script file
            Error items are removed from the output file.
            </summary>
            <param name="scriptDir">Dir conataining script file.</param>
            <param name="targetFile">Merged file.</param>
            <param name="resetId">True means resetting id.</param>
            <param name="validateSetting">Validation setting.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.MergeScripts(System.String,Microsoft.Tts.Offline.Common.ErrorSet,System.Boolean,Microsoft.Tts.Offline.XmlScriptValidateSetting,System.Object)">
            <summary>
            Merge scripts in a folder into a script file.
            Error items are removed from the output file.
            </summary>
            <param name="scriptDir">Dir conataining script file.</param>
            <param name="errorSet">Error set.</param>
            <param name="resetId">True means resetting id.</param>
            <param name="validateSetting">Validation setting.</param>
            <param name="contentController">Contenct controller.</param>
            <returns>Xml script file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.MergeScripts(System.String,System.String,System.Boolean,Microsoft.Tts.Offline.XmlScriptValidateSetting,System.Object)">
            <summary>
            Merge scripts in a folder into a script file.
            Error items are removed from the output file.
            </summary>
            <param name="scriptDir">Dir conataining script file.</param>
            <param name="targetFile">Target file path.</param>
            <param name="resetId">True means resetting id.</param>
            <param name="validateSetting">Validation setting.</param>
            <param name="contentController">Contenct controller.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.GetNeedDeleteItemIds(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the ids of items that need to be deleted.
            </summary>
            <param name="errors">The error set.</param>
            <returns>The ids.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.ConvertTwoLineScriptToXmlScript(System.String,System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            Convert two-line script to XML script.
            </summary>
            <param name="twoLineScript">Input two-line script.</param>
            <param name="targetFile">Output script.</param>
            <param name="language">Language.</param>
            <returns>Errors.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.ConvertTwoLineScriptToXmlScript(System.String,System.String,Microsoft.Tts.Offline.Language,System.Boolean)">
            <summary>
            Convert two-line script to XML script.
            </summary>
            <param name="twoLineScript">Input two-line script.</param>
            <param name="targetFile">Output script.</param>
            <param name="language">Language.</param>
            <param name="inScriptWithoutPron">Whether input script without pronunciation.</param>
            <returns>Errors.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.ConvertXmlScriptToTwoLineScript(System.String,System.String,Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Convert XML script to two-line script.
            </summary>
            <param name="xmlScript">Input XML script.</param>
            <param name="targetFile">Output script.</param>
            <param name="phoneSet">
            Phone set used to convert pronunciation
            It can be null when you can directly get the word's pronunciation in the word's attribute.
            </param>
            <returns>Errors happened.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.BuildMonoMlf(System.String,System.String,System.Boolean,Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.XmlScriptValidateSetting,Microsoft.Tts.Offline.SliceData)">
            <summary>
            Based on script file, build a mono-phone MLF (See HTK document) file.
            </summary>
            <param name="scriptFilePath">Input script.</param>
            <param name="outFilePath">Output mlf file.</param>
            <param name="writeToFile">
            True means writing to file;
            False means checking whether the script can be built to mlf, but not wrting to file.
            </param>
            <param name="phoneme">Phoneme used to build mlf.</param>
            <param name="validateSetting">Validation data set.</param>
            <param name="sliceData">Slice data used to get units.</param>
            <returns>Errors.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.CombinePhonesToUnits(Microsoft.Tts.Offline.ScriptItem,System.String,System.String,System.Boolean)">
            <summary>
            Given one item, convert
            One Phone-based segment file to Unit-based segment file.
            </summary>
            <param name="item">ScriptItem.</param>
            <param name="segmentFilePath">Phone-based segment file.</param>
            <param name="targetFilePath">Unit-based segment file.</param>
            <param name="ignoreTone">IgnoreTone.</param>
            <returns>Data error found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.Renumber(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptItem},System.UInt64,System.UInt32)">
            <summary>
            Renumber script items.
            </summary>
            <param name="items">Script items collection.</param>
            <param name="beginId">Begin item ID.</param>
            <param name="idLength">Item ID length.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.LoadScriptsWithoutValidation(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load all the script items from a folder
            Note: Here don't validate the content, But duplicate item ID is not allowed.
            </summary>
            <param name="sourceDir">Script dir.</param>
            <param name="errors">Errors happened.</param>
            <returns>Loaded items collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.IsValidScriptPath(System.String)">
            <summary>
            Validate script path, the path can be XML script file path or directory contains XML script files.
            </summary>
            <param name="scriptPath">Xml script path.</param>
            <returns>Whether the script path is validated.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.ConvertScriptItemToXmlFormat(Microsoft.Tts.Offline.ScriptItem,System.Boolean,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert two-line script item to XML format.
            </summary>
            <param name="item">Two-line format script item.</param>
            <param name="inScriptWithoutPron">Whether input script without pronunciation.</param>
            <param name="errors">Errors if having.</param>
            <returns>New format item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.ConvertScriptItemToTwoLineFormat(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert Xml script item to two-line format.
            </summary>
            <param name="item">Xml format script item.</param>
            <param name="phoneSet">Phone set.</param>
            <param name="errors">Errors happened.</param>
            <returns>Two-line format item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.BuildMonoMlf(Microsoft.Tts.Offline.ScriptItem,System.IO.StreamWriter,System.Boolean,Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData)">
            <summary>
            Build mlf from script item.
            </summary>
            <param name="item">Script item.</param>
            <param name="sw">Text writer.</param>
            <param name="writeToFile">Whether writing to file.</param>
            <param name="phoneme">Phoneme.</param>
            <param name="sliceData">Slice data.</param>
            <returns>Errors.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.BuildMonoMlf(Microsoft.Tts.Offline.ScriptSyllable,Microsoft.Tts.Offline.ScriptItem,System.IO.StreamWriter,System.Boolean,Microsoft.Tts.Offline.Phoneme)">
            <summary>
            Build mlf from syllable.
            </summary>
            <param name="syllable">Syllable.</param>
            <param name="item">Script item.</param>
            <param name="sw">Text writer.</param>
            <param name="writeToFile">Whethe writing to file.</param>
            <param name="phoneme">Phoneme.</param>
            <returns>Errors.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ScriptHelper.BuildMonoMlf(Microsoft.Tts.Offline.TtsUnit,Microsoft.Tts.Offline.ScriptItem,System.IO.StreamWriter,System.Boolean,Microsoft.Tts.Offline.Phoneme)">
            <summary>
            Build mlf from unit.
            </summary>
            <param name="unit">Unit.</param>
            <param name="item">Script item.</param>
            <param name="sw">Text writer.</param>
            <param name="writeToFile">Whethe writing to file.</param>
            <param name="phoneme">Phoneme.</param>
            <returns>Errors.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Script.ScriptFileCollection">
            <summary>
            XML script file collection.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Script.ScriptFileCollection"/> class.
            </summary>
            <param name="loadComment">Whether load comments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.Reset">
            <summary>
            Reset the script file collection.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.FindItem(System.String,System.Boolean)">
            <summary>
            Find items.
            </summary>
            <param name="itemId">Item ID to be founded.</param>
            <param name="searchDeletedItems">Whetehr search deleted items.</param>
            <returns>Founded item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.IsDeletedItem(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Utility.TtsXmlStatus@)">
            <summary>
            Indicating whether the script item has been deleted.
            </summary>
            <param name="scriptItem">ScriptItem.</param>
            <param name="status">Status.</param>
            <returns>Whether the script item has been deleted.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.FindSentence(System.String,System.Boolean)">
            <summary>
            Get script sentence.
            </summary>
            <param name="sentenceId">Sentence ID to be search.</param>
            <param name="searchDeletedSentence">Whether search deleted sentence.</param>
            <returns>Founded sentence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.IsDeletedItem(System.String)">
            <summary>
            Whether the item has been deleted.
            </summary>
            <param name="itemId">Item id to be found.</param>
            <returns>Whether the item is deleted..</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.ScriptItems(System.Boolean)">
            <summary>
            Get script items in the script file collection.
            </summary>
            <param name="containDeletedItems">Whether contains deleted items.</param>
            <returns>Enumerator of the lines in the given file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.ScriptSentences(System.Boolean)">
            <summary>
            Get script sentences in the script file collection.
            </summary>
            <param name="containDeletedItems">Whether contains deleted items.</param>
            <returns>Enumerator of the lines in the given file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.Save">
            <summary>
            Save all script files.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.Save(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Save script files to the target file/dir.
            </summary>
            <param name="scriptPath">Target script file/dir path.</param>
            <param name="isDir">Whether the script path is dir.</param>
            <param name="saveAs">If save as need call SaveAs in XmlDataFile.</param>
            <param name="saveComment">Whether save comment.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.Load(System.String)">
            <summary>
            Load script files from path, support laod from file or directory.
            Items whose pronunciation can't map using the phoneMap will be added
            To _unmappedItems.
            </summary>
            <param name="scriptPath">Script file path or dir.</param>
            <returns>Errors of the script.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.ExportSortedCleanXmlScriptFiles(Microsoft.Tts.Offline.XmlScriptFile,System.String)">
            <summary>
            Sort XML script file items.
            </summary>
            <param name="scriptFile">Script file path.</param>
            <param name="targetFilePath">Target file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptFileCollection.LoadScript(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load script.
            </summary>
            <param name="scriptPath">ScriptPath.</param>
            <param name="errorSet">ErrorSet.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptFileCollection.XmlScriptFiles">
            <summary>
            Gets Xml script file collection.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptFileCollection.LoadComments">
            <summary>
            Gets or sets a value indicating whether load comments.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptFileCollection.ScriptPath">
            <summary>
            Gets Script path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Script.ScriptFileCollection.Language">
            <summary>
            Gets or sets Xml script file collection.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlScriptValidationScope">
            <summary>
            Definition of validation info.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.POS">
            <summary>
            POS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.Pronunciation">
            <summary>
            Pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.UvSegInterval">
            <summary>
            Interval of unvoiced-voiced segment.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.UvSegSequence">
            <summary>
            Order and non overlap between unvoiced-voiced segs.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.F0">
            <summary>
            F0 contour.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.F0AndUvType">
            <summary>
            Consistency between f0 and unvoiced-voiced type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.DurationAndInterval">
            <summary>
            Consistency between duration and unvoiced-voiced segment interval.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.SegmentInterval">
            <summary>
            Interval of element segment.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.SegmentSequence">
            <summary>
            Correctness of segment sequence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.SegmentDurationAndInterval">
            <summary>
            Consistency between segment duration and unvoiced-voiced segment interval.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.DurationAndSegment">
            <summary>
            Consistency between duration and segment.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.Power">
            <summary>
            Power contour.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.Acoustics">
            <summary>
            All acoustics.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlScriptValidationScope.All">
            <summary>
            All.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlScriptValidateSetting">
            <summary>
            XML Script file class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptValidateSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.XmlScriptValidateSetting"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptValidateSetting.#ctor(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.TtsPosSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.XmlScriptValidateSetting"/> class.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <param name="posSet">POS set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlScriptValidateSetting.VerifySetting">
            <summary>
            Verify the validity of the object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptValidateSetting.ValidationScope">
            <summary>
            Gets or sets Phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptValidateSetting.PhoneSet">
            <summary>
            Gets or sets Phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlScriptValidateSetting.PosSet">
            <summary>
            Gets or sets POS set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Script.IScriptItemProcessor">
            <summary>
            Script item processor.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.IScriptItemProcessor.ProcessItem(Microsoft.Tts.Offline.ScriptItem,System.Object)">
            <summary>
            Process item method.
            </summary>
            <param name="scriptItem">Script item.</param>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Script.ScriptTraversal">
            <summary>
            Script traversal.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptTraversal.TraverseScriptDir(Microsoft.Tts.Offline.Script.IScriptItemProcessor,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Object)">
            <summary>
            Traverse script directory.
            </summary>
            <param name="visitor">Script item processor interface.</param>
            <param name="importDataPathList">File list for validation.</param>
            <param name="inScriptDir">Input script directory.</param>
            <param name="outScriptDir">Output script directory.</param>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptTraversal.TraverseScriptDir(Microsoft.Tts.Offline.Script.IScriptItemProcessor,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,Microsoft.Tts.Offline.Utility.TextLogger,System.Object)">
            <summary>
            Traverse script directory.
            </summary>
            <param name="visitor">Script item processor interface.</param>
            <param name="importDataPathList">File list for validation.</param>
            <param name="inScriptDir">Input script directory.</param>
            <param name="outScriptDir">Output script directory.</param>
            <param name="logger">Text logger.</param>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptTraversal.TraverseScriptFile(Microsoft.Tts.Offline.Script.IScriptItemProcessor,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Object)">
            <summary>
            Traverse script file.
            </summary>
            <param name="visitor">Script item processor interface.</param>
            <param name="importDataPathList">File list for validation.</param>
            <param name="inScriptFile">Input script file.</param>
            <param name="outScriptFile">Output script file.</param>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Script.ScriptTraversal.TraverseScriptFile(Microsoft.Tts.Offline.Script.IScriptItemProcessor,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,Microsoft.Tts.Offline.Utility.TextLogger,System.Object)">
            <summary>
            Traverse script file.
            </summary>
            <param name="visitor">Script item processor interface.</param>
            <param name="importDataPathList">File list for importing data model.</param>
            <param name="inScriptFile">Input script file.</param>
            <param name="outScriptFile">Output script file.</param>
            <param name="logger">Text logger.</param>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.ProsodyType">
            <summary>
            Enum of UPL lattice prosody type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ProsodyType.Undefined">
            <summary>
            Undefined type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ProsodyType.Break">
            <summary>
            Prosody break.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ProsodyType.BoundaryTone">
            <summary>
            Prosody boundary tone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ProsodyType.PitchAccent">
            <summary>
            Prosody pitch accent.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ProsodyType.Emphasis">
            <summary>
            Prosody Emphasis.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TobiLabel">
            <summary>
            ToBI label class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TobiLabel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TobiLabel class.
            </summary>
            <param name="label">ToBI label.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TobiLabel.Create(System.String)">
            <summary>
            Create ToBI label.
            </summary>
            <param name="label">ToBI label.</param>
            <returns>Created ToBI label.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TobiLabel.Set(System.String)">
            <summary>
            Set ToBI label.
            </summary>
            <param name="label">ToBI label.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TobiLabel.ToString">
            <summary>
            Convert ToBI label to string.
            </summary>
            <returns>String value of the ToBI label.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TobiLabel.Clone">
            <summary>
            Clone the TobiLabel.
            </summary>
            <returns>Cloned TobiLabel.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.TobiLabel.Label">
            <summary>
            Gets or sets ToBI label.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TobiLabel.UncertainSuffix">
            <summary>
            Gets or sets uncertain suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TobiLabel.Uncertain">
            <summary>
            Gets a value indicating whether is uncertain property.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TobiLabel.UncertainChar">
            <summary>
            Gets uncertain char at the end of label.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TobiLabel.BreakUncertainChar">
            <summary>
            Gets break uncertain char at the end of label.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PhoneMap">
            <summary>
            Phone mapping table, which could be one to many map, which is delimited by whitespace ' '.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneMap.TtsPhone">
            <summary>
            TTS phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneMap.TtsSyllable">
            <summary>
            TTS syllable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneMap.SapiPhoneId">
            <summary>
            SAPI phone id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneMap.SapiVisemeId">
            <summary>
            SAPI viseme id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneMap.SrPhone">
            <summary>
            SR phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneMap.IpaPhone">
            <summary>
            IPA phone.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.PhoneMap"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMap.#ctor(Microsoft.Tts.Offline.Language,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.PhoneMap"/> class.
            </summary>
            <param name="language">Language of this table.</param>
            <param name="source">Source phone type.</param>
            <param name="target">Target phone type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMap.CreatePhoneMap(System.String)">
            <summary>
            Create a phone map from file path.
            </summary>
            <param name="filePath">The filepath.</param>
            <returns>PhoneMap.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMap.Reverse">
            <summary>
            Reverse source and target in phonemap.
            </summary>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMap.Validate">
            <summary>
            Validate.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMap.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load XML file.
            </summary>
            <param name="xmlDoc">Xml document.</param>
            <param name="nsmgr">Nsmgr.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMap.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            PerformanceSave.
            </summary>
            <param name="writer">Writer.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.PhoneMap.Schema">
            <summary>
            Gets Configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.PhoneMap.Source">
            <summary>
            Gets or sets Source of this mapping.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.PhoneMap.Target">
            <summary>
            Gets or sets Target of this mapping.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.PhoneMap.Items">
            <summary>
            Gets Items.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PhoneMap.PhoneMapError">
            <summary>
            PhoneMap error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneMap.PhoneMapError.DuplicateTargetName">
            <summary>
            Duplicate item id.
            Parameters: 
            {0}: target phone which has more than one source phones.
            {1}: the first source phone used for reverting.
            {2}: the second source phone.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsMetaPhone">
            <summary>
            TTS meta-phone information.
            This phone should corresponding with TTS phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsMetaPhone.TtsToneRegex">
            <summary>
            Match TTS tone regex.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsMetaPhone.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsMetaPhone"/> class.
            </summary>
            <param name="language">Language of the TtsMetaPhone.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsMetaPhone.Join(System.String,Microsoft.Tts.Offline.TtsMetaPhone[],System.Int32,System.Int32)">
            <summary>
            Get phone string of specified phones.
            </summary>
            <param name="separator">Separator for the joint phone.</param>
            <param name="phones">TtsPhones to be joint.</param>
            <param name="startIndex">Start index from where to join the phone.</param>
            <param name="count">Cont of the phone to be joint.</param>
            <returns>Full name of all the phones to be joint.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaPhone.TcgppScore">
            <summary>
            Gets or sets TCGPP score of this phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaPhone.Tone">
            <summary>
            Gets or sets Tone context ID of this phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaPhone.ToneString">
            <summary>
            Gets Tone string of this phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaPhone.Name">
            <summary>
            Gets or sets Phone name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaPhone.FullName">
            <summary>
            Gets Phone full name, in this format: phone+tone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaPhone.AlignName">
            <summary>
            Gets Phone align name, in this format: phonetone. 
            This name is used for HTK model training and alignment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsMetaUnit">
            <summary>
            TTS meta-unit information.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsMetaUnit.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsMetaUnit"/> class.
            </summary>
            <param name="language">Language of the meta unit.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsMetaUnit.BuildPhoneNames(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Build phone names array of the unit, not contain tone.
            </summary>
            <param name="language">Language of the unit.</param>
            <param name="unit">Unit to be processed.</param>
            <returns>Phone name array, not contain tone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsMetaUnit.BuildPhoneNames(Microsoft.Tts.Offline.TtsMetaPhone[])">
            <summary>
            Build phone names array of the unit, not contain tone.
            </summary>
            <param name="phones">TtsMetaPhone array to be processed.</param>
            <returns>Phone name array, not contain tone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsMetaUnit.BuildPhones(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Build a phone array from a slice string.
            </summary>
            <param name="language">Language of the unit.</param>
            <param name="unit">Slice string, the text should only contain phone and tone,
            but not contain stress.</param>
            <returns>Phone array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsMetaUnit.GetPhonesName">
            <summary>
            Get phone names of the unit.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaUnit.Special">
            <summary>
            Gets a value indicating whether this unit is a special unit, 
            Which is beginning and ending with underscore.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaUnit.Language">
            <summary>
            Gets or sets Language, which this unit belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaUnit.Name">
            <summary>
            Gets or sets Name of this meta-unit. This also should be unique among all meta-unit in one language
            Name should be combinition of phone and tone, using " " or "+" as delimeter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaUnit.Id">
            <summary>
            Gets or sets Meta-unit identify.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaUnit.LeftPhone">
            <summary>
            Gets The most left phone of this slice.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaUnit.Phones">
            <summary>
            Gets Phone array of this slice.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaUnit.RightPhone">
            <summary>
            Gets The most right phone of the slice.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaUnit.RightTone">
            <summary>
            Gets The most right tone of the slice.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsMetaUnit.LeftTone">
            <summary>
            Gets The most left tone of the slice.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.PhoneFeature">
            <summary>
            TTS phone features.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Vowel">
            <summary>
            Vowel.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Consonant">
            <summary>
            Consonant.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Sonorant">
            <summary>
            Sonorant.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Voiced">
            <summary>
            Voiced.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Aspirated">
            <summary>
            Aspirated.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Plosive">
            <summary>
            Plosive.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Fricative">
            <summary>
            Fricative.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Affricate">
            <summary>
            Affricate.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Nasal">
            <summary>
            Nasal.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Liquid">
            <summary>
            Liquid.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Glide">
            <summary>
            Glide.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Bilabial">
            <summary>
            Bilabial.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Labiodental">
            <summary>
            Labiodental.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Dental">
            <summary>
            Dental.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Alveolar">
            <summary>
            Alveolar.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Palatal">
            <summary>
            Palatal.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Velar">
            <summary>
            Velar.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Glottal">
            <summary>
            Glottal.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.High">
            <summary>
            High.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.MidHeight">
            <summary>
            MidHeight.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Low">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.MidLow">
            <summary>
            MidLow.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Front">
            <summary>
            Front.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Central">
            <summary>
            Central.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Back">
            <summary>
            Back.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Round">
            <summary>
            Round.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Short">
            <summary>
            Short.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Long">
            <summary>
            Long.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Diphthong">
            <summary>
            Diphthong.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Approximant">
            <summary>
            Approximant.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Trill">
            <summary>
            Trill.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Tap">
            <summary>
            Tap.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Lateral">
            <summary>
            Lateral.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Postalveolar">
            <summary>
            Postalveolar.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Retroflex">
            <summary>
            Retroflex.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Uvular">
            <summary>
            Uvular.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Pharyngeal">
            <summary>
            Pharyngeal.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Syllable">
            <summary>
            Syllable: word boundary and syllable boundary.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.MainStress">
            <summary>
            Main stress.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.SubStress">
            <summary>
            Sub-stress.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Silence">
            <summary>
            Silence, this feature is not used in runtime.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.Tone">
            <summary>
            Tone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PhoneFeature.ShortPause">
            <summary>
            Short pause, this feature is not used in runtime.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.Phone">
            <summary>
            Phone.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Phone.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.Phone"/> class.
            </summary>
            <param name="name">Phone name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Phone.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.Phone"/> class.
            </summary>
            <param name="name">Phone name.</param>
            <param name="id">Phone id.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Phone.#ctor(System.String,System.Int32,Microsoft.Tts.Offline.Core.PhoneFeature)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.Phone"/> class.
            </summary>
            <param name="name">Phone name.</param>
            <param name="id">Phone id.</param>
            <param name="feature">Phone feature.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Phone.HasFeature(Microsoft.Tts.Offline.Core.PhoneFeature)">
            <summary>
            Tell whether current phone has given feature.
            </summary>
            <param name="feature">Feature.</param>
            <returns>True if yes, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Phone.AddFeature(System.String)">
            <summary>
            Add feature string into phone.
            </summary>
            <param name="feature">Feature string.</param>
            <returns>True if the feature exists.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Phone.CompareTo(Microsoft.Tts.Offline.Core.Phone)">
            <summary>
            Compare this instance with other instance. It will compare by Name first, and then Id.
            </summary>
            <param name="other">Other instance to compare with.</param>
            <returns>Comparing result.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.Name">
            <summary>
            Gets or sets Phone name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.CompilingName">
            <summary>
            Gets Name used for compiling, especially for silence phone "-sil-", "-sp-".
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.Id">
            <summary>
            Gets or sets Numerical id of this phone instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.Features">
            <summary>
            Gets Features of this phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.FeatureId">
            <summary>
            Gets Feature id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsVowel">
            <summary>
            Gets a value indicating whether Vowel.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsConsonant">
            <summary>
            Gets a value indicating whether Consonant.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsSonorant">
            <summary>
            Gets a value indicating whether Sonorant.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsNasal">
            <summary>
            Gets a value indicating whether Nasal.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsVoiced">
            <summary>
            Gets a value indicating whether voiced.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsNormal">
            <summary>
            Gets a value indicating whether Normal phone: vowel or consonant.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsStress">
            <summary>
            Gets a value indicating whether is stress.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsSyllableBoundary">
            <summary>
            Gets a value indicating whether is syllable boundary.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsSilenceFeature">
            <summary>
            Gets a value indicating whether is silence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Phone.IsShortPauseFeature">
            <summary>
            Gets a value indicating whether is short pause.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PhoneSetError">
            <summary>
            TTS phone set error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.UnrecognizedPhoneFeature">
            <summary>
            Unrecognized Phone feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.DuplicatePhoneName">
            <summary>
            Duplicate phone name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.DuplicatePhoneId">
            <summary>
            Duplicate phone id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.EmptyPhoneSet">
            <summary>
            Empty phone set.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.UnsupportedFeatureInRuntime">
            <summary>
            Unsupported feature in runtime.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.ZeroId">
            <summary>
            Zero id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.PhoneNameTooLong">
            <summary>
            Phone length exceeds the maximal number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.ReservedFeatureForNamePattern">
            <summary>
            Feature is reserved for special phone according to the naming pattern.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.ReservedName">
            <summary>
            Name is reserved for special phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.ReservedNamePattern">
            <summary>
            Naming pattern is reserved for the special phone feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.ReservedId">
            <summary>
            Id is reserved.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.OneFeatureAllow">
            <summary>
            Only one feature is allowed for some special phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.SameOrderForNameAndId">
            <summary>
            Name and ID should be in the same order.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneSetError.ToneIdError">
            <summary>
            Tone id error: tone id should be in continued and started from 1.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsPhoneSet">
            <summary>
            Phoneset.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPhoneSet.MaxPhoneNameLength">
            <summary>
            Reserved Phone.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsPhoneSet"/> class.
            </summary>
            <param name="language">Language of this phone set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsPhoneSet"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.LoadFromFile(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Load phone set from file.
            </summary>
            <param name="language">The language of phone set.</param>
            <param name="path">Path to load phone set.</param>
            <returns>Loaded phone set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.GetReservedPhones">
            <summary>
            GetReservedPhones.
            </summary>
            <returns>ReservedPhones.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.Equals(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.TtsPhoneSet,System.Boolean)">
            <summary>
            Whether the two tts phone sets are equal by nature.
            </summary>
            <param name="left">Left TtsPhoneSet.</param>
            <param name="right">Right TtsPhoneSet.</param>
            <param name="strict">Whether the comparison is strict.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.DisableShortPause">
            <summary>
            Disables the short pause phoneme. This operation cannot be reverted.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.Reset">
            <summary>
            Reset tts phone set for re-use.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.Validate">
            <summary>
            Validate consistence between files. If failed, InvalidDataException will be thrown.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsStress(System.String)">
            <summary>
            Check a phone is stress.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsSyllableBoundary(System.String)">
            <summary>
            Check if it is a syllable boundary.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsVowel(System.String)">
            <summary>
            Is a vowel.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsVoiced(System.String)">
            <summary>
            Is a voiced phone.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsConsonant(System.String)">
            <summary>
            Is a consonant.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsSonorant(System.String)">
            <summary>
            Is a sornorant.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsNasal(System.String)">
            <summary>
            Is a nasal.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsPhone(System.String)">
            <summary>
            Is a phone.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsSilenceFeature(System.String)">
            <summary>
            Check a phone has silence feature.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.IsShortPauseFeature(System.String)">
            <summary>
            Checks a phone has short pause feature.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.RemoveSyllableStressTones">
            <summary>
            Remove the syllable boundary, stress symbols and tone from phone set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.GetPhone(System.Int32)">
            <summary>
            Get the tts phone according to the phone id
            If failed, null will be returned.
            </summary>
            <param name="phoneId">Phone ID.</param>
            <returns>TTS phone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.GetPhone(System.String)">
            <summary>
            Get the tts phone according to the phone string.
            If failed, null will be returned.
            </summary>
            <param name="phone">Phone string.</param>
            <returns>Tts phone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.AssignId">
            <summary>
            Assign Id for phones.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load phone set instance from stream reader.
            </summary>
            <param name="xmlDoc">Document to load phone set from.</param>
            <param name="nsmgr">Namespace.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Save phone set to target file.
            </summary>
            <param name="writer">Writer file to save into.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPhoneSet.CheckReservedId(Microsoft.Tts.Offline.Core.Phone)">
            <summary>
            Check the phone whether satisfies the requirement of reserved phone.
            </summary>
            <param name="phone">Phone.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPhoneSet.Schema">
            <summary>
            Gets Configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPhoneSet.Phones">
            <summary>
            Gets Individual phones in this set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPhoneSet.Version">
            <summary>
            Gets or sets Version.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPhoneSet.SyllableStructure">
            <summary>
            Gets Syllable Structure.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPhoneSet.IsShortPauseSupported">
            <summary>
            Gets a value indicating whether is short pause supported.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.MapPhone">
            <summary>
            Delegate to map phone.
            </summary>
            <param name="phone">Phone to be mapped.</param>
            <returns>Mapped phone.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.PhoneQuestionErrorType">
            <summary>
            Phone question set error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneQuestionErrorType.UnrecognizedPhone">
            <summary>
            Unrecognized phone.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PhoneQuestionConverter">
            <summary>
            Phone question converter.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestionConverter.Convert(Microsoft.Tts.Offline.PhoneQuestion,Microsoft.Tts.Offline.MapPhone)">
            <summary>
            Convert phoneset to the mapped phoneset, using delegate mapPhone, if the parameter
            Delimiters is not null, mapped phones string will be splitted to several phones
            And added to the new phone set.
            </summary>
            <param name="phoneQuestion">Phone set to be converted.</param>
            <param name="mapPhone">Map old phone to new phone delegate.</param>
            <returns>Mapped phoneset.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestionConverter.Convert(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.PhoneQuestion},Microsoft.Tts.Offline.MapPhone)">
            <summary>
            Map several phoneset to a new phoneset using the mapPhone delegate.
            </summary>
            <param name="phoneQuestions">Phone questions to be mapped.</param>
            <param name="mapPhone">MapPhone delegate map original phone to new phone.</param>
            <returns>Mapped phonesets.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestionConverter.GetMissingPhoneSet(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.PhoneQuestion},System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Get missing phone set: each phone should contain one question for it self.
            </summary>
            <param name="phoneQuestions">Phone questions to be checked.</param>
            <param name="phones">Phone set to be checked.</param>
            <returns>Missed phoneset.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestionConverter.RemoveDuplicate(System.Collections.Generic.List{Microsoft.Tts.Offline.PhoneQuestion})">
            <summary>
            Remove duplicate naming phoneset.
            </summary>
            <param name="sets">PhoneSet list to remove duplicate items.</param>
            <returns>Phonesets which are removed duplicated questions.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.PhoneQuestion">
            <summary>
            Phone question class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestion.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.PhoneQuestion"/> class.
            </summary>
            <param name="name">Name of the phoneset.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestion.Contains(System.String)">
            <summary>
            Whether the phoneset contains the phone.
            </summary>
            <param name="phone">Phone to be checked contained in the phone set..</param>
            <returns>Whether the phone contained in the phoneset.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestion.PhoneListString">
            <summary>
            Get phone list string.
            </summary>
            <returns>Phone list string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestion.ToString">
            <summary>
            Convert phoneset to string.
            </summary>
            <returns>Phoneset string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestion.ToString(System.String,System.String,System.String)">
            <summary>
            Convert phoneset to string with the specified format.
            </summary>
            <param name="questionFormat">Question format.</param>
            <param name="itemFormat">Question item format.</param>
            <param name="delimiter">Question item delimiter.</param>
            <returns>Question string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneQuestion.Validate(Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Check if the phone in phone question is in tts phone set.
            </summary>
            <param name="phoneSet">TTS Phone set.</param>
            <returns>Errors.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.PhoneQuestion.Name">
            <summary>
            Gets or sets Name of the phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.PhoneQuestion.Phones">
            <summary>
            Gets Phone list of the phoneset.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.QuestionFile">
            <summary>
            Question file class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.QuestionFile.DefaultQuestionRegex">
            <summary>
            The default Regex string to load phone question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.QuestionFile.DefaultQuestionItemRegex">
            <summary>
            The default Regex string to load phone question item.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.QuestionFile._defaultQuestionItemDelimiters">
            <summary>
            The default question item delimiters.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.QuestionFile.Load(System.String)">
            <summary>
            Load PhoenSet files with the default question and question item regex string.
            </summary>
            <param name="filePath">Question file to be loaded.</param>
            <returns>Loaded phoneset array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.QuestionFile.Load(System.String,System.String,System.String,System.Char[])">
            <summary>
            Load PhoenSet files with the specified question and question item regex string.
            </summary>
            <param name="filePath">Question file to be loaded.</param>
            <param name="questionPattern">Question regex pattern, the first group of the pattern should be question name,
            and the second group should be QuestionItems.</param>
            <param name="itemPattern">QuestionItem regex pattern, the first group of the pattern should be phone.</param>
            <param name="delimiters">Delimiters of the question items.</param>
            <returns>Loaded phoneset array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.QuestionFile.LoadOneQuestion(System.String,System.String,System.String,System.Char[])">
            <summary>
            Load one question set from the specified string.
            </summary>
            <param name="questionString">One line string to be parsed to one phoneset.</param>
            <param name="questionPattern">Question regex pattern, the first group of the pattern should be question name,
            and the second group should be QuestionItems.</param>
            <param name="itemPattern">QuestionItem regex pattern, the first group of the pattern should be phone.</param>
            <param name="delimiters">Delimiters of the question items.</param>
            <returns>Loaded phoneset.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.QuestionFile.BuildPhoneQuestion(System.String,System.String,System.String,System.Char[])">
            <summary>
            Build phoneset with the specified question item string.
            </summary>
            <param name="name">Phoneset name.</param>
            <param name="questions">String contained question items, the items should be separated by delimiters.</param>
            <param name="itemPattern">QuestionItem regex pattern, the first group of the pattern should be phone.</param>
            <param name="delimiters">Question item delimiters.</param>
            <returns>Parsed phone set.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsUnit">
            <summary>
            Class for TTS unit.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsUnit.PhoneConnectorPattern">
            <summary>
            Phone connector pattern, @"\s|\+".
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsUnit.OnsetPrefix">
            <summary>
            Prefix of Onset unit name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsUnit.NucleusPrefix">
            <summary>
            Prefix of Nucleus unit name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsUnit.CodaPrefix">
            <summary>
            Prefix of Coda unit name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsUnit.PhoneDelimiter">
            <summary>
            Delimiter used to seperate phones in the unit name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsUnit.UnitDelimiter">
            <summary>
            Delimiter used to seperate units in the unit group.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUnit.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsUnit"/> class.
            </summary>
            <param name="language">Language for this unit.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUnit.ReadAllData(System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            Read all tts unit from Unit Linguistic FeatureVector file.
            </summary>
            <param name="filePath">Unit Linguistic FeatureVector file.</param>
            <param name="language">Language of the unit file.</param>
            <returns>Unit dictionary, indexing by (sentence id + index in sentence).</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUnit.BuildUnitFullName(System.String,Microsoft.Tts.Offline.PosInSyllable)">
            <summary>
            Build unit full name, this is, prefix "os_", "nc_" or "cd_" to the unit name.
            </summary>
            <param name="name">Unit name.</param>
            <param name="slicePos">Position in syllable feature of the unit.</param>
            <returns>Full name string of the unit.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUnit.BuildUnitName(System.String)">
            <summary>
            Convert unit full name to unit name, reomve prefix of
            Unit full name (os_, nc_, or cd_).
            </summary>
            <param name="fullName">Unit full name.</param>
            <returns>Unit name.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUnit.ToString">
            <summary>
            Converts the value of this instance to a System.string.
            </summary>
            <returns>A string whose value is the same as name of this instance.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.Languages">
            <summary>
            Gets or sets All languages.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.Language">
            <summary>
            Gets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.FullName">
            <summary>
            Gets Name leading with "os_", "nc_" or "cd_".
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.LengthInString">
            <summary>
            Gets or sets LengthInString.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.OffsetInString">
            <summary>
            Gets or sets OffsetInString.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.Word">
            <summary>
            Gets or sets Word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.Tag">
            <summary>
            Gets or sets Tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.WordType">
            <summary>
            Gets or sets Word type, mainly for punctuation.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.TtsBreak">
            <summary>
            Gets or sets Break level of this unit, this is used during calculation, 
            Which will be transfered to PosInWord, or PosInSentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.MetaUnit">
            <summary>
            Gets or sets Meta data of this unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.Feature">
            <summary>
            Gets or sets Feature of this unit instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.PlainDescription">
            <summary>
            Gets Plain description string of this unit instance, use blank space as phone and tone delimeter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.Description">
            <summary>
            Gets Description string of this unit instance, use "+" as phone and tone delimeter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnit.LinguisticFeatureString">
            <summary>
            Gets Linguistic feature string of this unit.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PosInSyllable">
            <summary>
            Definition of position of unit at syllable level.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSyllable.Onset">
            <summary>
            0 First slice in syllable, usually consonant.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSyllable.OnsetNext">
            <summary>
            1 Next to first slice in syllable, usually consonant.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSyllable.NucleusInV">
            <summary>
            2 Middle slice in sllable, usually vowel, 
            Must has no Onset and no Coda in syllable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSyllable.NucleusInVC">
            <summary>
            2 Middle slice in sllable, usually vowel,
            Must has no Onset but with Coda in syllable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSyllable.NucleusInCV">
            <summary>
            2 Middle slice in sllable, usually vowel
            Must has Onset but with no Coda in syllable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSyllable.NucleusInCVC">
            <summary>
            2 Middle slice in sllable, usually vowel
            Must has both Onset and Coda in syllable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSyllable.CodaNext">
            <summary>
            3 Previous to last slice in syllable, usually consonant.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSyllable.Coda">
            <summary>
            4 Last slice in syllable, usually consonant.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PosInWord">
            <summary>
            Definition of position of syllable at word level. 
            It describes the position information of slice/unit 
            Through the syllable it belongs to.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInWord.Head">
            <summary>
            0 At head position.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInWord.Middle">
            <summary>
            1 In the middle of word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInWord.Tail">
            <summary>
            2 At tail position.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInWord.Mono">
            <summary>
            3 This word is mono-syllable word.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PosInSentence">
            <summary>
            Definition of position of word in sentence level.
            This types are defined through preceding and following break level of the word.
            Left break level and right break level.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L1R1">
            <summary>
            0 Left break level 1, right break level 1.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L2R1">
            <summary>
            1 Left break level 2, right break level 1.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L34R1">
            <summary>
            2 Left break level 3/4, right break level 1.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L1R2">
            <summary>
            3 Left break level 1, right break level 2.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L2R2">
            <summary>
            4 Left break level 2, right break level 2.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L34R2">
            <summary>
            5 Left break level 3/4, right break level 2.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L1R3">
            <summary>
            6 Left break level 1, right break level 3.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L1R4">
            <summary>
            7 Left break level 1, right break level 4.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L2R3">
            <summary>
            8 Left break level 2, right break level 3.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L2R4">
            <summary>
            9 Left break level 2, right break level 4.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.L34R34">
            <summary>
            10 Left break level 3/4, right break level 3/4.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosInSentence.Quest">
            <summary>
            11 This is question mark.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsStress">
            <summary>
            Definition of stress level for syllable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsStress.None">
            <summary>
            0 Not stress level appied.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsStress.Primary">
            <summary>
            1 Primary stress level.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsStress.Secondary">
            <summary>
            2 Second stress level.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsStress.Tertiary">
            <summary>
            3 Third stress level.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsEmphasis">
            <summary>
            Definition of Emphasis.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsEmphasis.None">
            <summary>
            0 No emphasis applied.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsEmphasis.Yes">
            <summary>
            1 Apply emphasis.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsBreak">
            <summary>
            Break.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsBreak.Phone">
            <summary>
            0 Phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsBreak.Syllable">
            <summary>
            1 Break level 1.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsBreak.Word">
            <summary>
            2 Between words.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsBreak.InterPhrase">
            <summary>
            3 Between prosodic phrases.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsBreak.IntonationPhrase">
            <summary>
            4 Between ntonation phrases.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsBreak.Sentence">
            <summary>
            5 Between sentence.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsWordTone">
            <summary>
            Break.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsWordTone.Continue">
            <summary>
            0, c, no perceptual pitch movement at the boundary.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsWordTone.FullRise">
            <summary>
            1, R, a clear pitch excursion into the higher portion of
            The speaker�s pitch range, as at the end of
            A typical American English yes/no question. 
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsWordTone.MinorRise">
            <summary>
            2, r, A minor, yet, perceptible pitch excursion up at a phrase boundary.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsWordTone.FullFall">
            <summary>
            3, F, a clear pitch excursion into the lower portion of
            The speaker�s pitch range, as at the end of
            A typical American English declarative statement .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsWordTone.MinorFall">
            <summary>
            4, f, A minor, yet, perceptible pitch excursion down at a phrase boundary.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsWordTone.StrictRise">
            <summary>
            5, A strict rise, in the word tone prediction of the run-time engine,
            The last word of question sentence will be set to strict rise.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsWordTone.StrictFall">
            <summary>
            6, A strict fall, in the word tone prediction of the run-time engine,
            The last word of non-question sentence will be set to strict fall.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsTobiAccent">
            <summary>
            Tobi Accent.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiAccent.NoAccent">
            <summary>
            0, for non accent.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiAccent.HighStar">
            <summary>
            1, for H*.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiAccent.LowStar">
            <summary>
            2, for L*.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiAccent.LowStarHigh">
            <summary>
            3, for L*+H (late rise).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiAccent.RisingStar">
            <summary>
            4, for Rising Step? (Not clear, just followed TTS_TOBI_ACCENT in ttsdatadef.h);.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiAccent.LowHighStar">
            <summary>
            5, for L+H* (early rise).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiAccent.DownHighStar">
            <summary>
            6, for down step? Not clear, just followed TTS_TOBI_ACCENT in ttsdatadef.h);.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiAccent.HighStarLowStar">
            <summary>
            7, for H*+L*.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiAccent.LowDownHighStar">
            <summary>
            8, for L+!H*.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsTobiBoundary">
            <summary>
            Tobi Boundary.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiBoundary.NoBoundaryTone">
            <summary>
            Default value. No boundary tone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiBoundary.LMinus">
            <summary>
            L-.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiBoundary.HMinus">
            <summary>
            H-.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiBoundary.LMinusLPerc">
            <summary>
            L-L%.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiBoundary.LMinusHPerc">
            <summary>
            L-H%.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiBoundary.HMinusHPerc">
            <summary>
            H-H%.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiBoundary.HMinusLPerc">
            <summary>
            H-L%.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsTobiBoundary.SMinus">
            <summary>
            S-.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsFeature">
            <summary>
            Tts features.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.PosInSentence">
            <summary>
            0 Index of position in sentence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.PosInWord">
            <summary>
            1 Index of position in word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.PosInSyllable">
            <summary>
            2 Index of position in syllable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.LeftContextPhone">
            <summary>
            3 Index of left context phone id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.RightContextPhone">
            <summary>
            4 Index of right context phone id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.LeftContextTone">
            <summary>
            5 Index of left context tone id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.RightContextTone">
            <summary>
            6 Index of right context tone id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.TtsStress">
            <summary>
            7 Index of tts stress.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.TtsEmphasis">
            <summary>
            8 Index of tts emphasis.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.TtsWordTone">
            <summary>
            9 Index of tts word tone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.TtsNeighborPrev">
            <summary>
            10 Index of tts neighbor previous.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.TtsEnergy">
            <summary>
            11 Index of tts energy feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsFeature.TtsNormalizedEpoch">
            <summary>
            12 Index of tts normalized average epoch feature.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsLiaison">
            <summary>
            Liaison.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsLiaison.Default">
            <summary>
            Default rule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsLiaison.Labelled">
            <summary>
            Explicit labelled with liaison mark.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsPronSource">
            <summary>
            Pronunciation source.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.None">
            <summary>
            0 No pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.MainLexicon">
            <summary>
            1 The pronunciation is from main lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.Mophology">
            <summary>
            2 The pronunciation is from optional morphology analysis.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.DomainLexicon">
            <summary>
            3 The pronunciation is from domain lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.VoiceLexicon">
            <summary>
            4 The pronunciation is from voice specific lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.CustomLexicon">
            <summary>
            5 The pronunciation is from custom lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.LTS">
            <summary>
            6 The pronunciation is from LTS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.DomainLTS">
            <summary>
            7 The pronunciation is from Domain LTS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.Spelling">
            <summary>
            8 The pronunciation is from Char Table and read letter-by-letter.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.Compound">
            <summary>
            9 The pronunciation is from compound module.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.ExtraLanguage">
            <summary>
            10 The pronunciation is from other language like English.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.MainPolyphony">
            <summary>
            11 The pronunciation is from main polyphony.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.DomainPolyphony">
            <summary>
            12 The pronunciation is from domain polyphony.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.PronunciationChange">
            <summary>
            13 The pronunciation is from pronunciation change.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.OovLochandler">
            <summary>
            14 The pronunciation is from OOV handler pronunciation in lochander.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.ForeignName">
            <summary>
            15 The pronunciation is from Foreign name handling.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.ForeignLTS">
            <summary>
            16 The pronunciation is from Foreign LTS handling.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.PostPronLochandler">
            <summary>
            17 The pronunciation is from post pronunciation function in lochander.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.XmlTag">
            <summary>
            18 The pronunciation is from XML input.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.PolyphonyRNNModel">
            <summary>
            19 The pronunciation is from RNN polyphony model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.PolyphonyCRFModel">
            <summary>
            20 The pronunciation is from CRF polyphony model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TtsPronSource.Other">
            <summary>
            21 The pronunciation is from other sources.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsUnitFeature">
            <summary>
            Class for unit feature dimensions.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUnitFeature.IsVowel(Microsoft.Tts.Offline.PosInSyllable)">
            <summary>
            Whether is vowel for position in syllable.
            </summary>
            <param name="posInSyllable">Position in syllable.</param>
            <returns>True for vowel.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUnitFeature.Parse(System.String)">
            <summary>
            Parse all of unit feature from string line presentation.
            </summary>
            <param name="value">String line presentation.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUnitFeature.Parse(System.String[],System.Int32)">
            <summary>
            Parse all of unit feature from string array, start from offset.
            </summary>
            <param name="values">String array of fields.</param>
            <param name="offset">Start offset of array to take data.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.PosInSyllable">
            <summary>
            Gets or sets Position in syllable of unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.PosInWord">
            <summary>
            Gets or sets Position in word of syllable.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.PosInSentence">
            <summary>
            Gets or sets Position in sentence of word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.LeftContextPhone">
            <summary>
            Gets or sets Left context phone id of current unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.RightContextPhone">
            <summary>
            Gets or sets Right context phone id of current unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.LeftContextTone">
            <summary>
            Gets or sets Left context tone id of current unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.RightContextTone">
            <summary>
            Gets or sets Right context tone id of current unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.TtsStress">
            <summary>
            Gets or sets Stress.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.TtsEmphasis">
            <summary>
            Gets or sets Emphasis.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.TtsWordTone">
            <summary>
            Gets or sets WordTone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUnitFeature.Item(System.Int32)">
            <summary>
            Gets Feature value specified by index.
            </summary>
            <param name="index">Index of which feature to look.</param>
            <returns>Feature value.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsAcousticFeature">
            <summary>
            Class for unit acoustic feature dimensions.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.StartTime">
            <summary>
            Gets or sets Start time of unit wave segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.Duration">
            <summary>
            Gets or sets Time duration of unit wave segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.SampleOffset">
            <summary>
            Gets or sets Sample offset.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.SampleLength">
            <summary>
            Gets or sets Sample length.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.EpochOffset">
            <summary>
            Gets or sets Epoch offset.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.EpochLength">
            <summary>
            Gets or sets Epoch length.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.CartRms">
            <summary>
            Gets or sets Root mean square for build cart tree.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.EnergyRms">
            <summary>
            Gets or sets Root mean square for energy feature.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.Energy">
            <summary>
            Gets or sets Energy feature.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.AveragePitch">
            <summary>
            Gets or sets Average pitch.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.PitchRange">
            <summary>
            Gets or sets Pitch range.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.Epoch16KCompressLength">
            <summary>
            Gets or sets Epoch length for compressed 16K epoch data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.Epoch8KCompressLength">
            <summary>
            Gets or sets Epoch length for compressed 8K epoch data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.Sample8KLength">
            <summary>
            Gets or sets Sample length for 8K wave data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.AverageEpoch">
            <summary>
            Gets or sets Average epoch.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsAcousticFeature.NormalizedEpoch">
            <summary>
            Gets or sets Normalized epoch feature.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PartOfSpeech">
            <summary>
            Part of speech.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PartOfSpeech.NotOverride">
            <summary>
            Not override POS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PartOfSpeech.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PartOfSpeech.Noun">
            <summary>
            Noun.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PartOfSpeech.Verb">
            <summary>
            Verb.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PartOfSpeech.Modifier">
            <summary>
            Modifier.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PartOfSpeech.Function">
            <summary>
            Function.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PartOfSpeech.Interjection">
            <summary>
            Interjection.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PartOfSpeech.SuppressWord">
            <summary>
            SuppressWord.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsPosSet">
            <summary>
            Class of tts pos set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsPosSet"/> class.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsPosSet"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.LoadFromFile(System.String)">
            <summary>
            Load POS set from lexicon schema file.
            </summary>
            <param name="lexiconSchemaFile">The lexicon schema file.</param>
            <returns>Loaded POS set object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.LoadFromFile(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Load POS set from lexicon schema file.
            </summary>
            <param name="language">Language of the POS set.</param>
            <param name="lexiconSchemaFile">The lexicon schema file.</param>
            <returns>Loaded POS set object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.LoadFromSchema(System.String)">
            <summary>
            Load TtsPosSet from LexicalAttributeSchema.
            </summary>
            <param name="schemaFilePath">LexicalAttributeSchema file path.</param>
            <returns>Loaded TtsPosSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.LoadFromSchema(Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Load TtsPosSet from LexicalAttributeSchema.
            </summary>
            <param name="attributeSchema">LexicalAttributeSchema.</param>
            <returns>TtsPosSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.LoadPosTaggingPosFromSchema(Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Loading Postagging POS from LexicalAttributeSchema.
            </summary>
            <param name="attributeSchema">LexicalAttributeSchema.</param>
            <returns>TtsPosSet containing only Postagging POS.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.Equals(Microsoft.Tts.Offline.TtsPosSet,Microsoft.Tts.Offline.TtsPosSet)">
            <summary>
            Whether the two TtsPosSet are identical.
            </summary>
            <param name="left">TtsPosSet left.</param>
            <param name="right">TtsPosSet right.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.Add(System.String,System.String)">
            <summary>
            Add a new POS with name and hexId.
            </summary>
            <param name="name">Name.</param>
            <param name="hexId">HexId.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.Add(System.String,System.Int32,System.String)">
            <summary>
            Add a new POS with name and decimal id.
            </summary>
            <param name="name">POS name.</param>
            <param name="decimalId">Decimal id.</param>
            <param name="categoryTaggingPOS">Category tagging pos of this POS name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.Reset">
            <summary>
            Reset tts pos set for re-use.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load XML file.
            </summary>
            <param name="xmlDoc">Xml Document.</param>
            <param name="nsmgr">Nsmgr.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            PerformanceSave.
            </summary>
            <param name="writer">Writer.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.AddPosTaggingPosFromCategory(Microsoft.Tts.Offline.TtsPosSet,Microsoft.Tts.Offline.Core.AttributeCategory)">
            <summary>
            Add Postagging POS from attribute category.
            </summary>
            <param name="ttsPosSet">TTS POS set.</param>
            <param name="category">Attribute category.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsPosSet.AddPosFromCategory(Microsoft.Tts.Offline.TtsPosSet,Microsoft.Tts.Offline.Core.AttributeCategory,System.Boolean,System.String)">
            <summary>
            Add POS from attribute category into TtsPosSet.
            </summary>
            <param name="ttsPosSet">TtsPosSet.</param>
            <param name="category">Category.</param>
            <param name="posTagging">Whether current category is under postagging value node.</param>
            <param name="categoryTaggingPOS">The POSTagging POS of this category.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPosSet.Schema">
            <summary>
            Gets Schema of PosTable.xml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPosSet.Items">
            <summary>
            Gets Pos Set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPosSet.IdItems">
            <summary>
            Gets POS Id set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPosSet.CategoryTaggingPOS">
            <summary>
            Gets Category Tagging POS set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsPosSet.PosCategory">
            <summary>
            Gets POS category dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsTobiAccentSet">
            <summary>
            Class of tts tobi accent set. 
            Tobi labels are enabled for ja-JP now, so a ToBI set must be defined to support the label conversion.
            It is designed as a common set to cover several other languages: en-US, French, and German. 
            Note that the set is case-sensitive.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsTobiAccentSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsTobiAccentSet"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsTobiAccentSet.InitSet">
            <summary>
            Initialize with common accent set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsTobiAccentSet.Items">
            <summary>
            Gets Pos Set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsTobiAccentSet.IdItems">
            <summary>
            Gets POS Id set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsTobiBoundaryToneSet">
            <summary>
            Class of tts tobi Boundary tone set. 
            Tobi labels are enabled for ja-JP now, so a ToBI set must be defined to support the label conversion.
            It is designed as a common set to cover several other languages: en-US, French, and German. 
            Note that the set is case-sensitive.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsTobiBoundaryToneSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsTobiBoundaryToneSet"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsTobiBoundaryToneSet.InitSet">
            <summary>
            Initialize with boundary tone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsTobiBoundaryToneSet.Items">
            <summary>
            Gets Boundary tone Set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsTobiBoundaryToneSet.IdItems">
            <summary>
            Gets Boundary tone Id set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PosErrorType">
            <summary>
            POS Error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosErrorType.DuplicatePosName">
            <summary>
            Duplicate pos name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PosErrorType.DuplicatePosId">
            <summary>
            Duplicate pos id.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.PronunciationError">
            <summary>
            Enum of pronunciation error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.EmptyPronunciation">
            <summary>
            Empty pronunciation string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.UnrecognizedPhone">
            <summary>
            Unrecognized phone
            Phones are expected to be separated by whitespace in the pronunciation string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.EmptySyllable">
            <summary>
            Empty syllable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.VowelAndSonorantCountLessThanMinimumForSingleSyllableWord">
            <summary>
            Vowel plus sonorant count less than minimum
            {0} : pronunciation
            {1} : Minimum of vowel plus sonorant Count.
            </summary>
            <remarks>In lexicon pronunciation, some languages may have less than minimum vowel and sonorant in one syllable if the word has only one syllable
            , such as "h m" of word "hm" in enIN, "s" of prefix word "c'" in frCA
            , we'll not remove these words from lexicon, just report this issue as warning.</remarks>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.VowelAndSonorantCountLessThanMinimum">
            <summary>
            Vowel plus sonorant count less than minimum
            {0} : pronunciation
            {1} : Minimum of vowel plus sonorant Count.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.VowelAndSonorantCountGreaterThanMaximum">
            <summary>
            Vowel plus sonorant count greater than maximum
            {0} : pronunciation
            {1} : Maximum of vowel plus sonorant Count.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.VowelCountLessThanMinimum">
            <summary>
            Vowel count less than minimum
            {0} : pronunciation
            {1} : Minimum of vowel count.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.VowelCountGreaterThanMaximum">
            <summary>
            Vowel count greater than maximum
            {0} : pronunciation
            {1} : Maximum of vowel count.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.TooManyTonesInOneSyllable">
            <summary>
            Too many tones in one syllable
            {0} : pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.IncorrectTonePosition">
            <summary>
            Incorrect tone position
            {0} : pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.IncorrectStressPosition">
            <summary>
            Incorrect stress position
            {0} : pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.SilenceIsNotAllowedInPronunciation">
            <summary>
            Silence is not allowed in pronunciation string
            {0} : pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.MapWordPronunciationError">
            <summary>
            Word pronunciation map error
            {0} : word text
            {1} : unit plain description.
            {2} : map source type.
            {3} : map target type.
            {4} : item id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PronunciationError.CanNotFindSyllableInPhoneMap">
            <summary>
            The pronunciation of word contains invalid syllable, which can't be found in phone map.
            {0} : phone word of Lexicon.
            {1} : syllable to be mapped.
            {2} : mapping source type.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.CountRange">
            <summary>
            CountRange.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.CountRange.NotApplicable">
            <summary>
            Not Applicable.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.CountRange.Min">
            <summary>
            Gets or sets Minimum.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.CountRange.Max">
            <summary>
            Gets or sets Maximum.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.SyllableStructure">
            <summary>
            Syllable structure.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.SyllableStructure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.SyllableStructure"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.SyllableStructure.VowelCount">
            <summary>
            Gets Vowel count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.SyllableStructure.SonorantAndVowelCount">
            <summary>
            Gets Sonorant and vowel count.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.Pronunciation">
            <summary>
            Class to validate pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Pronunciation.UnitBoundaryString">
            <summary>
            Unit boundary string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Pronunciation.SyllableBoundaryString">
            <summary>
            Syllable boundary string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Pronunciation.WordPronBoundaryString">
            <summary>
            Word boundary string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Pronunciation.WordBoundaryString">
            <summary>
            Word boundary string.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Core.Pronunciation"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Compare two pronunciations.
            </summary>
            <param name="pronFirst">First pronunciation.</param>
            <param name="pronSecond">Second pronunciation.</param>
            <param name="onlyPhone">Comparison mode (only phones or all symbols.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.StandardizePronunciation(System.String,Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Standardize prununciation.
            </summary>
            <param name="pronunciation">Pronunciation to be fixed.</param>
            <param name="phoneset">Phoneset of the language.</param>
            <returns>Standardized pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.CleanDecorate(System.String)">
            <summary>
            Clean decorate in the pronunciation.
                1. stress mark, "1", "2", or "3"
                2. liasion mark, "?".
            </summary>
            <param name="pronunciation">Pronunciation to be cleaned.</param>
            <returns>Cleanned pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.CleanStressSyllable(System.String)">
            <summary>
            Clean the stress and syllable boundary in pronunciation.
            </summary>
            <param name="pronunciation">Pronunciation to be cleaned.</param>
            <returns>Cleanned pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.GetPurePhones(System.String)">
            <summary>
            Get the pure phones.
            </summary>
            <param name="pronunciation">Pronunciation.</param>
            <returns>Phones.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.GetStress(System.String)">
            <summary>
            Find stress level for pronunciation of syllable or slice.
            </summary>
            <param name="text">Prounciation to find stress feature.</param>
            <returns>Stress level of the pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.UnTagUnitBoundary(System.String)">
            <summary>
            UnTag unit boundary on given pronunciation.
            </summary>
            <param name="pronunciation">The pronunciation with unit boundary tagged, like "IH . K - S . AY 1 - T . IH . D".</param>
            <returns>The pronunciation, like "IH K - S AY 1 - T IH D".</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.TagUnitBoundary(System.String)">
            <summary>
            Tag unit boundary on given pronunciation.
            </summary>
            <param name="pronunciation">The pronunciation, like "IH K - S AY 1 - T IH D".</param>
            <returns>
            The pronunciation with unit boundary tagged, like "IH . K - S . AY 1 - T . IH . D".
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.SplitIntoPhones(System.String)">
            <summary>
            Split the pronunciation string into array of phone string, using the default separator of �space?.
            </summary>
            <param name="pron">Pronunciaiton.</param>
            <returns>Phone array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.SplitIntoSyllables(System.String)">
            <summary>
            Split pronunciaiton into syllables.
            </summary>
            <param name="pronunciation">Pronunciaiton.</param>
            <returns>Syllable array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.GetSpellingOutPron(Microsoft.Tts.Offline.CharTable,System.String)">
            <summary>
            Get the spelling out pronunciation.
            </summary>
            <param name="chartable">Chartable.</param>
            <param name="word">Word.</param>
            <returns>Spelt out pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.Validate(System.String,Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Validate the pronunciation string according to the phone set.
            </summary>
            <param name="pron">Pronunciation string.</param>
            <param name="ttsPhoneSet">Tts phone set.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.ValidateSyllable(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Core.Phone},System.String,Microsoft.Tts.Offline.Core.SyllableStructure)">
            <summary>
            Validate the syllable.
            </summary>
            <param name="syllable">Syllable.</param>
            <param name="pron">The whole pronunciation string.</param>
            <param name="syllableStructure">Syllable structure.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.SplitIntoPhones(System.String,Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Split the pronunciation string into Phone array.
            Each phone should be separated by space.
            If i-th phone can not be recognized, Phone[i] in the return value will be null.
            </summary>
            <param name="pron">Pronunciation string.</param>
            <param name="ttsPhoneSet">Tts phone set.</param>
            <param name="errorSet">Error set.</param>
            <returns>Phone list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.ConvertIntoHexIds(System.String,Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert the pronunciation string into hexical id string.
            </summary>
            <param name="pron">Pronunciation string.</param>
            <param name="ttsPhoneSet">TTS phone set.</param>
            <param name="errorSet">Error set.</param>
            <returns>Hexical id string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.RemoveUnitBoundary(System.String)">
            <summary>
            Clear the unit boundaries in pronunciation.
            </summary>
            <param name="pronunciation">Input pronunciation.</param>
            <returns>Pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.RemoveStress(System.String)">
            <summary>
            Clear the stress mark in pronunciation.
            </summary>
            <param name="pronunciation">Input pronunciation.</param>
            <returns>Pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.RemoveLiaison(System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            Hard-code to clear the Liaison mark in pronunciation.
            </summary>
            <param name="pronunciation">Input pronunciation.</param>
            <param name="language">Language.</param>
            <returns>Pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.RemoveTone(System.String)">
            <summary>
            Clear the tone mark in pronunciation.
            </summary>
            <param name="pronunciation">Input pronunciation.</param>
            <returns>Pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.RemoveSyllable(System.String)">
            <summary>
            Clear the syllable mark in pronunciation.
            </summary>
            <param name="pronunciation">Input pronunciation.</param>
            <returns>Pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.GetMappedPronunciation(Microsoft.Tts.Offline.TtsUnit,Microsoft.Tts.Offline.PhoneMap)">
            <summary>
            Validate whether can map pronunciation using the phone map.
            </summary>
            <param name="unit">ScriptWord to be mapped.</param>
            <param name="phoneMap">Phone map.</param>
            <returns>Mapped pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.GetMappedPronunciation(Microsoft.Tts.Offline.ScriptWord,Microsoft.Tts.Offline.PhoneMap,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Validate whether can map pronunciation using the phone map.
            </summary>
            <param name="scriptWord">ScriptWord to be mapped.</param>
            <param name="phoneMap">Phone map.</param>
            <param name="errorSet">Error set.</param>
            <returns>Whether validate.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.GetMappedPronunciation(System.String,Microsoft.Tts.Offline.PhoneMap)">
            <summary>
            Map pronunciation using phonemap.
            Only support map syllable based pronunciation.
            Todo: Support phone based, unit based pronunciation.
            </summary>
            <param name="pronunciation">Pronunciation to be mapped.</param>
            <param name="phoneMap">Phone map used to map pronunciation.</param>
            <returns>Mapped pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.GetMappedPronunciation(System.String,System.String,Microsoft.Tts.Offline.PhoneMap,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Map pronunciation using phonemap.
            Only support map syllable based pronunciation.
            Todo: Support phone based, unit based pronunciation.
            </summary>
            <param name="word">Word corrsponding with pronunciation.</param>
            <param name="pronunciation">Pronunciation to be mapped.</param>
            <param name="phoneMap">Phone map used to map pronunciation.</param>
            <param name="errorSet">Error set.</param>
            <returns>Mapped pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.GetMappedPronunciation(System.String,Microsoft.Tts.Offline.PhoneMap,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Map pronunciation using phonemap.
            Only support map syllable based pronunciation.
            Todo: Support phone based, unit based pronunciation.
            </summary>
            <param name="pronunciation">Pronunciation to be mapped.</param>
            <param name="phoneMap">Phone map used to map pronunciation.</param>
            <param name="errorSet">Error set.</param>
            <returns>Mapped pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Pronunciation.RemoveEmptyItems(System.String[])">
            <summary>
            Remove empty items.
            </summary>
            <param name="items">Items to be processed.</param>
            <returns>Non empty items array.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError">
            <summary>
            Lexical Attribute Schema Error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.DuplicateCategoryName">
            <summary>
            Duplicate category name
            Parameters:
            {0}: duplicate category name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.NotContinuedId">
            <summary>
            Not Continued Id
            Parameters:
            {0}: xml node
            {1}: id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.IdTooLarge">
            <summary>
            Id error
            Parameters:
            {0}: maximal id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.DuplicatePosValueName">
            <summary>
            Duplicate POS value name
            Parameters:
            {0}: duplicate POS name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.DuplicatePosValue">
            <summary>
            Duplicate POS value
            Parameters:
            {0}: duplicate POS value
            {1}: duplicate POS name
            {2}: duplicate existed POS name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.MissPosCategory">
            <summary>
            Empty Lexical attribute schema
            Parameters:
            {0}: POS category.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.EmptySchema">
            <summary>
            Empty Lexical attribute schema.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.MissUnknownPosValue">
            <summary>
            Miss unknown POS value
            Parameters:
            {0}: unknown POS name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.UnknownPosShouldBePosTaggingPos">
            <summary>
            Unknown POS should be POS tagging POS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchemaError.MissPosTaggingSetting">
            <summary>
            Missing posTagging setting
            Parameters:
            {0}: POS value.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.AttributeCategory">
            <summary>
            Attribute Category in the lexical attribute schema.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeCategory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.AttributeCategory"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeCategory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.AttributeCategory"/> class.
            </summary>
            <param name="name">Category name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeCategory.GetValue(System.String)">
            <summary>
            Get the value according to the name.
            </summary>
            <param name="name">Name.</param>
            <returns>Value.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeCategory.Name">
            <summary>
            Gets or sets Name of category.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeCategory.Id">
            <summary>
            Gets or sets Category Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeCategory.Mean">
            <summary>
            Gets or sets Category mean.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeCategory.InvStdDev">
            <summary>
            Gets or sets Category InvStdDev.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeCategory.Values">
            <summary>
            Gets Category values.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.AttributeValue">
            <summary>
            Attribute value in the lexical attribute schema.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.AttributeValue"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.AttributeValue"/> class.
            </summary>
            <param name="name">Value name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeValue.UpdateCategories(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Core.AttributeCategory})">
            <summary>
            Update the categoires collecton in the class.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeValue.GetCategory(System.String)">
            <summary>
            Get the category according to the name.
            </summary>
            <param name="name">Name.</param>
            <returns>Category.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeValue.Name">
            <summary>
            Gets or sets Value name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeValue.Id">
            <summary>
            Gets or sets Value Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeValue.Mean">
            <summary>
            Gets or sets Category mean.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeValue.InvStdDev">
            <summary>
            Gets or sets Category InvStdDev.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeValue.Categories">
            <summary>
            Gets Categories under the value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeValue.PosTagging">
            <summary>
            Gets or sets a value indicating whether this value is used for POS tagging.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexicalAttributeSchema">
            <summary>
            Lexical Attribute Schema.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.PosCategoryName">
            <summary>
            POS category Name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.UnknownPosValue">
            <summary>
            Unkonwn POS value.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexicalAttributeSchema"/> class.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexicalAttributeSchema"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.ValidateCategoryValue(System.String,System.String)">
            <summary>
            Validate whether the category contains the value.
            </summary>
            <param name="categoryName">Category name.</param>
            <param name="categoryValue">Category value.</param>
            <returns>Whether the category contains the value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.Validate">
            <summary>
            Validate the lexical attribute schema.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.GetRootCategory(System.String)">
            <summary>
            Get the category according to the category name.
            </summary>
            <param name="name">Name.</param>
            <returns>Category.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.GetCategory(System.String)">
            <summary>
            Get the category according to name.
            </summary>
            <param name="name">Name.</param>
            <returns>Attribute category.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.GenerateString(System.String,System.String)">
            <summary>
            Search the category according the category name and 
            Generate the Equation string for the assigned value
            <param />
            Example:
            GenearteString("POS", "noun")
            The return value is 
            POS=NOM=1    NOM_CLASS=noun=3.
            </summary>
            <param name="categoryName">Category name under the root node.</param>
            <param name="value">The assigned value.</param>
            <returns>The Equation string for the value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.RemoveEmptyCategory">
            <summary>
            Remove all the categories with no value under root.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.SetContinuedId">
            <summary>
            Set continued ID from zero for the attribute schema.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.GetPosTaggingPos(System.String)">
            <summary>
            Get pos tagging pos.
            </summary>
            <param name="pos">Pos to be found pos tagging POS.</param>
            <returns>Nearst parent pos tagging POS.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load XML file.
            </summary>
            <param name="xmlDoc">XmlDoc.</param>
            <param name="nsmgr">Nsmgr.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Save phone set to target file.
            </summary>
            <param name="writer">Writer file to save into.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.FindPosTaggingPos(System.Collections.Generic.Stack{Microsoft.Tts.Offline.Core.AttributeValue},Microsoft.Tts.Offline.Core.AttributeValue,System.String)">
            <summary>
            Find parent nearest pos tagging POS.
            </summary>
            <param name="parentPosStack">Parent pos stack, record all parent pos.</param>
            <param name="attributeValue">Current attribute value.</param>
            <param name="pos">Pos to be found pos tagging pos.</param>
            <returns>Nearst parent pos tagging POS.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.GetCategory(Microsoft.Tts.Offline.Core.AttributeCategory,System.String)">
            <summary>
            Get the attribute category from the required category root and queried by its name.
            </summary>
            <param name="attributeCategory">Required category root.</param>
            <param name="name">Queied category name.</param>
            <returns>The arrribute category.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.ValidatePosValue">
            <summary>
            Validate POS value:
            1. whether contains duplicate POS name
            2. whether define unknown POS
            3. whether unknown POS set posTagging to true
            4. whether each POS or its parent has set posTagging to true;.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.CheckDuplicateValueName(System.Collections.ObjectModel.Collection{System.String},Microsoft.Tts.Offline.Core.AttributeCategory)">
            <summary>
            Check whether exists duplicate name under the category
            Currently we only check value under POS category, as we need to ensure unique POS values.
            </summary>
            <param name="valueSet">Set of value name.</param>
            <param name="category">Category.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.ValidateCategoryName">
            <summary>
            Validate all category names under the root.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.ValidateCategoryValues">
            <summary>
            Validate category values.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.ValidateCategoryValues(Microsoft.Tts.Offline.Core.AttributeCategory,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Validate category values.
            </summary>
            <param name="category">Categories to be validated.</param>
            <param name="existedValues">Existed values.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.ValidateCategoryName(System.Collections.ObjectModel.Collection{System.String},Microsoft.Tts.Offline.Core.AttributeCategory)">
            <summary>
            Validate all the category names under the category.
            </summary>
            <param name="categorySet">Set of category name.</param>
            <param name="category">Category.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.ValidateId">
            <summary>
            Validate continued ID for the attribute schema.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.ValidateContinuedId(Microsoft.Tts.Offline.Core.AttributeCategory,System.Int32@,System.Boolean@)">
            <summary>
            Validate continued ID for each node under category node.
            </summary>
            <param name="category">Category node.</param>
            <param name="idIndex">First id.</param>
            <param name="errorFound">Whether found error.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.LoadXmlCategoryNode(System.Xml.XmlNode)">
            <summary>
            Load category from xml node of category.
            </summary>
            <param name="categoryNode">Xml category node.</param>
            <returns>Attribute category.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.WriteXmlCategoryNode(System.Xml.XmlWriter,Microsoft.Tts.Offline.Core.AttributeCategory)">
            <summary>
            Write category node into xml file.
            </summary>
            <param name="writer">Xml writer.</param>
            <param name="category">Category.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.GenerateString(Microsoft.Tts.Offline.Core.AttributeCategory,System.String)">
            <summary>
            Generate the equation string for the value under the attribute category
            <param />
            Example:
            GenearteString(node of "POS", "noun")
            The return value is 
            POS=NOM=1   NOM_CLASS=noun=3.
            </summary>
            <param name="attributeCategory">Attribute category used for search.</param>
            <param name="value">Value.</param>
            <returns>Equation string for the value; for example: POS=NOM=1    NOM_CLASS=noun=3.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.SetContinuedId(Microsoft.Tts.Offline.Core.AttributeCategory,System.Int32@)">
            <summary>
            Set continued ID for each node under category node.
            </summary>
            <param name="category">Category node.</param>
            <param name="idIndex">First id.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.RemoveEmptyCategory(Microsoft.Tts.Offline.Core.AttributeCategory)">
            <summary>
            Remove all the categories with no value under the assigned category.
            </summary>
            <param name="category">Category.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.CheckPosTaggingFlag(Microsoft.Tts.Offline.Core.AttributeCategory)">
            <summary>
            Check POS tagging flag for each POS value whether set to true.
            </summary>
            <param name="category">Category.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.Schema">
            <summary>
            Gets Schema of PosTable.xml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.Version">
            <summary>
            Gets or sets Version.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalAttributeSchema.Categories">
            <summary>
            Gets Main Categories under the root of the schema.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CharTableCompilerError">
            <summary>
            CharTable Compiler Error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CharTableCompilerError.ConvertingPronunciationError">
            <summary>
            Converting Pronunciation Error
            Parameters: 
            {0}: character.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CharTableCompilerError.EmptyData">
            <summary>
            Empty Data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CharTableCompilerError.DuplicateSymbol">
            <summary>
            Duplicate Symbol.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CharData">
            <summary>
            Char Table Data Structure.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CharTableCompiler">
            <summary>
            CharTable compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CharTableCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.CharTableCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CharTableCompiler.Compile(Microsoft.Tts.Offline.CharTable,Microsoft.Tts.Offline.TtsPhoneSet,System.IO.Stream)">
            <summary>
            Compile.
            </summary>
            <param name="charTable">Char table.</param>
            <param name="phoneSet">Phone set.</param>
            <param name="outputStream">Output Stream.</param>
            <returns>Error.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CharTableCompiler.FeaturesToString(Microsoft.Tts.Offline.Compiler.CharTableCompiler.CharFeature)">
            <summary>
            Generate feature string.
            </summary>
            <param name="features">Features.</param>
            <returns>Feature string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CharTableCompiler.PronStringToPhoneID(System.IO.MemoryStream,Microsoft.Tts.Offline.TtsPhoneSet,System.String)">
            <summary>
            Convert Pronunciation to id string.
            </summary>
            <param name="memoryStream">MemoryStream.</param>
            <param name="phoneSet">Phone set.</param>
            <param name="pron">Pronunciation string.</param>
            <returns>Error Set.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CharTableCompiler.CharFeature">
            <summary>
            Char Feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CharTableCompiler.CharFeature.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CharTableCompiler.CharFeature.Vowel">
            <summary>
            Vowel.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CharTableCompiler.CharFeature.Consonant">
            <summary>
            Consonant.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CharItemComparer">
            <summary>
            Comparaer for CharData.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CharItemComparer.Compare(Microsoft.Tts.Offline.Compiler.CharData,Microsoft.Tts.Offline.Compiler.CharData)">
            <summary>
            Constructor.
            </summary>
            <param name="x">Char data x.</param>
            <param name="y">Char data y.</param>
            <returns>Positive for x greater than y, 0 for equal and negative for x less than y.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Extensions.ScriptExtensions">
            <summary>
            Script extensions.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Extensions.ScriptExtensions.IsQuestion(Microsoft.Tts.Offline.SentenceType)">
            <summary>
            Check whether the sentence type is question.
            </summary>
            <param name="type">Sentence type.</param>
            <returns>Whether the sentence type is question.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Extensions.ScriptExtensions.ToItemId(System.Int64)">
            <summary>
            Convert long to script item ID.
            </summary>
            <param name="idLongValue">ID long value.</param>
            <returns>Script item ID.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Extensions.ScriptExtensions.ToItemId(System.Int32)">
            <summary>
            Convert int to script item ID.
            </summary>
            <param name="idIntValue">ID int value.</param>
            <returns>Script item ID.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.BasicTypeExtension">
            <summary>
            Basic type extension.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.BasicTypeExtension.ToXmlValue(System.Boolean)">
            <summary>
            Convert bool value to XML string.
            </summary>
            <param name="boolValue">Bool value.</param>
            <returns>XML bool string value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.BasicTypeExtension.InsertBoolParameter(System.String[],System.String,System.Boolean)">
            <summary>
            InsertBoolParameter.
            </summary>
            <param name="arguments">Arguments.</param>
            <param name="parameterName">ParameterName.</param>
            <param name="parameterValue">ParameterValue.</param>
            <returns>Inserted bool parameter.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.BasicTypeExtension.InsertOptionalParameter(System.String[],System.String,System.String)">
            <summary>
            InsertBoolParameter.
            </summary>
            <param name="arguments">Arguments.</param>
            <param name="parameterName">ParameterName.</param>
            <param name="parameterValue">ParameterValue.</param>
            <returns>Inserted optional parameter.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.DictionaryExtension">
            <summary>
            Extension methods for Dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.DictionaryExtension.GetKeyCollection``2(System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Get key collection of the Dictionary.
            </summary>
            <typeparam name="T1">Type of dictionary key.</typeparam>
            <typeparam name="T2">Type of dictionary value.</typeparam> 
            <param name="sources">The source list.</param>
            <returns>Key collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.DictionaryExtension.Add``1(System.Collections.Generic.IDictionary{``0,System.Int32},``0)">
            <summary>
            Add item to a dictionary with count.
            </summary>
            <typeparam name="T">Item type.</typeparam>
            <param name="dictionary">The source dictionary.</param>
            <param name="item">The item to add.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.EnumerableExtension">
            <summary>
            Extension methods for IEnumerable.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.AssertNoDuplication``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Assert no duplication in given source.
            </summary>
            <typeparam name="TSource">Type of source.</typeparam>
            <param name="source">Source list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.GetHash(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Get hash code for an integer array.
            </summary>
            <param name="values">Integer list.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.Serialize``1(``0[],System.Int32)">
            <summary>
            Serialize a list to bytes.
            </summary>
            <typeparam name="T">List type.</typeparam>
            <param name="values">List items.</param>
            <param name="itemSize">Item size of list type.</param>
            <returns>The bytes serialized.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.Add(System.Collections.Generic.IList{System.Single},System.Collections.Generic.IList{System.Single})">
            <summary>
            Adds two lists.
            </summary>
            <param name="list1">List 1.</param>
            <param name="list2">List 2.</param>
            <returns>The summed list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.LinearMap``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Linearly sample items.
            </summary>
            <typeparam name="T">List type.</typeparam>
            <param name="items">List items.</param>
            <param name="count">The number of items to sample.</param>
            <returns>Items sampled.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.Group``1(System.Collections.Generic.IList{``0},System.Int32[])">
            <summary>
            Group list items into sub lists.
            </summary>
            <typeparam name="T">List type.</typeparam>
            <param name="values">List items.</param>
            <param name="lengths">The sub list lengths.</param>
            <returns>Items grouped.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.Starts(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Get starts values of accumulated values.
            </summary>
            <param name="values">List values.</param>
            <returns>Start lists for values.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.SortBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Sorts the given sequence.
            </summary>
            <typeparam name="TSource">Type of source.</typeparam>
            <typeparam name="TResult">Type of result.</typeparam>
            <param name="source">The source list.</param>
            <param name="selector">The selector for source list.</param>
            <returns>The sorted source array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.Concatenate``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Concatenates items in an enumerable list with given delimiter.
            </summary>
            <typeparam name="T">Type of item in the list.</typeparam>
            <param name="list">List of items to concatenate.</param>
            <param name="delimiter">Delimiter for joint between items.</param>
            <returns>Joint string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.MinIndex``1(System.Collections.Generic.IList{``0})">
            <summary>
            Gets the index of the minimum value.
            </summary>
            <typeparam name="TSource">Type of source.</typeparam>
            <param name="source">The source list.</param>
            <returns>The index of the minimum value in the source list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.MaxIndex``1(System.Collections.Generic.IList{``0})">
            <summary>
            Gets the index of the maximum value.
            </summary>
            <typeparam name="TSource">Type of source.</typeparam>
            <param name="source">The source list.</param>
            <returns>The index of the maximum value in the source list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.UniformTake``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Uniformly takes maxCount elements from source.
            If source has less than maxCount elements, all will be taken.
            </summary>
            <typeparam name="TSource">Type of source.</typeparam>
            <param name="source">The source list.</param>
            <param name="maxCount">Max elements to be taken.</param>
            <returns>Elements taken.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.Permute``1(``0[],System.Int32)">
            <summary>
            Generates a sequence of permutations of given alphabet.
            </summary>
            <typeparam name="T">Type of alphabet element.</typeparam>
            <param name="alphabet">Alphabet to permute.</param>
            <param name="length">Length of each permutation.</param>
            <returns>The sequence of permutations of given alphabet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.Split``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Split source into chunks with equal size of sizePerChunk.
            The last chunk may have less items.
            </summary>
            <typeparam name="TSource">Type of source.</typeparam>
            <param name="source">The source list.</param>
            <param name="sizePerChunk">Size of each chunk.</param>
            <returns>Chunks splitted.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.Split``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Int32})">
            <summary>
            Split source into chunks with equal size of sizePerChunk.
            The last chunk may have less items.
            </summary>
            <typeparam name="TSource">Type of source.</typeparam>
            <param name="source">The source list.</param>
            <param name="sizePerChunk">Size of each chunk.</param>
            <param name="selector">Select size of each element.</param>
            <returns>Chunks splitted.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performances action upon each item in the list.
            </summary>
            <typeparam name="T">Type of sources.</typeparam>
            <param name="sources">The source list.</param>
            <param name="action">The action is to be applied to each item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.EnumerableExtension.ElementCount``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Get count of items in the list.
            </summary>
            <typeparam name="T">Type of sources.</typeparam>
            <param name="sources">The source list.</param>
            <returns>Element count.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.StreamExtension">
            <summary>
            Extension to System.IO.Stream.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.StreamExtension.Excerpt(System.IO.Stream,System.UInt32)">
            <summary>
            Given stream instance, excerpt the number of bytes from current position.
            </summary>
            <param name="stream">Stream to except from.</param>
            <param name="size">The number of bytes to excerpt.</param>
            <returns>BinaryReader to the excerpted stream.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.DataWriter">
            <summary>
            Binary data writer.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.DataWriter.Padding">
            <summary>
            The number used for padding.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the DataWriter class.
            </summary>
            <param name="output">Output stream.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataWriter.Write(System.SByte)">
            <summary>
            Write out signed byte.
            </summary>
            <param name="value">Value to write out.</param>
            <returns>Number of byte written out.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataWriter.Write(System.Byte)">
            <summary>
            Write out unsigned byte.
            </summary>
            <param name="value">Value to write.</param>
            <returns>Number of byte written out.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataWriter.Write(System.UInt16)">
            <summary>
            Write out unsigned short.
            </summary>
            <param name="value">Value to write.</param>
            <returns>Number of byte written out.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataWriter.Write(System.Int16)">
            <summary>
            Write out signed short.
            </summary>
            <param name="value">Value to write.</param>
            <returns>Number of byte written out.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataWriter.Write(System.UInt32)">
            <summary>
            Write out unsigned int.
            </summary>
            <param name="value">Value to write.</param>
            <returns>Number of byte written out.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataWriter.Write(System.Int32)">
            <summary>
            Write out signed int.
            </summary>
            <param name="value">Value to write.</param>
            <returns>Number of byte written out.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataWriter.Write(System.Single)">
            <summary>
            Write out float.
            </summary>
            <param name="value">Value to write.</param>
            <returns>Number of byte written out.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataWriter.Write(System.Byte[])">
            <summary>
            Write out array of bytes.
            </summary>
            <param name="value">Value to write.</param>
            <returns>Number of byte written out.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.PositionRecover">
            <summary>
            Provides auto reset Position of stream back to initial one.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.PositionRecover.#ctor(System.IO.BinaryWriter,System.Int64)">
            <summary>
            Initializes a new instance of the PositionRecover class.
            </summary>
            <param name="writer">Binary writer to track for recover to current stream position.</param>
            <param name="position">New position after hooked.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PositionRecover.#ctor(System.IO.BinaryWriter,System.Int64,System.IO.SeekOrigin)">
            <summary>
            Initializes a new instance of the PositionRecover class.
            </summary>
            <param name="writer">Binary writer to track for recover to current stream position.</param>
            <param name="offset">New position after hooked.</param>
            <param name="origin">Relative offset.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PositionRecover.#ctor(System.IO.Stream,System.Int64,System.IO.SeekOrigin)">
            <summary>
            Initializes a new instance of the PositionRecover class.
            </summary>
            <param name="stream">Stream to track for recover to current stream position.</param>
            <param name="offset">New position after hooked.</param>
            <param name="origin">Relative offset.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PositionRecover.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            Initializes a new instance of the PositionRecover class.
            </summary>
            <param name="stream">Stream to track for recover to current stream position.</param>
            <param name="position">New position after hooked.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PositionRecover.Dispose">
            <summary>
            Dispose and recover back to original position while hooked.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.PositionRecover.Dispose(System.Boolean)">
            <summary>
            Disposes this object.
            </summary>
            <param name="disposing">Flag indicating whether recover position.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.DeDEScriptItem">
            <summary>
            German script item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DeDEScriptItem.TokenizeOrthographyString(System.String)">
            <summary>
            Tokenize orthography sentence string
            Thr tokenized items are seperated by white-space.
            </summary>
            <param name="sentence">Sentence to tokenize.</param>
            <returns>Tokenized sentence string.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.DeDEScriptItem.Language">
            <summary>
            Gets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DeDEScriptItem.PronunciationSeparator">
            <summary>
            Gets Separators for pronunciation string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DeDEScriptItem.PunctuationPattern">
            <summary>
            Gets Punctuation pattern for this language.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FrCAScriptItem">
            <summary>
            French script item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FrCAScriptItem.TokenizeOrthographyString(System.String)">
            <summary>
            Tokenize orthography sentence string
            Thr tokenized items are seperated by white-space.
            </summary>
            <param name="sentence">Sentence to tokenize.</param>
            <returns>Tokenized sentence string.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.FrCAScriptItem.Language">
            <summary>
            Gets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FrCAScriptItem.PronunciationSeparator">
            <summary>
            Gets Separators for pronunciation string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FrCAScriptItem.PunctuationPattern">
            <summary>
            Gets Punctuation pattern for this language.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ZhCNScriptItem">
            <summary>
            French script item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ZhCNScriptItem.Language">
            <summary>
            Gets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ZhCNScriptItem.PunctuationPattern">
            <summary>
            Gets Punctuation pattern for this language.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FeatureMeta">
            <summary>
            FeatureMeta.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FeatureMeta.FontMetaFileName">
            <summary>
            FontMetaFileName .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FeatureMeta.DefaultBitWidth">
            <summary>
            DefaultBitWidth .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FeatureMeta._defaultMetaDataList">
            <summary>
            Default feature Meta List.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FeatureMeta.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.FeatureMeta"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FeatureMeta.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.FeatureMeta"/> class.
            </summary>
            <param name="language">Language of this feature meta.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FeatureMeta.InitiateData">
            <summary>
            Set defualt feature Meta.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FeatureMeta.ToBytes">
            <summary>
            Get bitstream of feature Meta.
            </summary>
            <returns>Bitstream of feature meta.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FeatureMeta.SetFeatureMeta(System.Int32[0:,0:])">
            <summary>
            Set feature meta with given feature meta list.
            </summary>
            <param name="featureMetaList">Feature Meta list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FeatureMeta.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            PerformanceSave.
            </summary>
            <param name="writer">Writer.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FeatureMeta.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load XML file.
            </summary>
            <param name="xmlDoc">Xml document.</param>
            <param name="nsmgr">Nsmgr.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.FeatureMeta.Schema">
            <summary>
            Gets Configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FeatureMeta.Metadata">
            <summary>
            Gets Featuer Meta.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FeatureMeta.VectorSize">
            <summary>
            Gets The total bit width of one feature vector which is decribed by feature Meta.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FeatureMeta.BinarySize">
            <summary>
            Gets The total bytes of feature Meta bitstream.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ToneManager">
            <summary>
            Tone manager class, used for mapping tone name and ids.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ToneManager.NoneContextTone">
            <summary>
            None context tone ID.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ToneManager.ContextToneStartIndex">
            <summary>
            Context tone start index.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ToneManager.Add(Microsoft.Tts.Offline.Core.Phone,System.Int32)">
            <summary>
            Add one tone to the tone manager.
            </summary>
            <param name="phone">TtsPhone represents the tone.</param>
            <param name="contextToneId">Tone context ID.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ToneManager.GetNameFromToneId(System.Int32)">
            <summary>
            Get tone name from tone ID.
            </summary>
            <param name="toneId">Tone ID.</param>
            <returns>Tone name.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ToneManager.GetNameFromContextId(System.Int32)">
            <summary>
            Get tone name from tone context ID.
            </summary>
            <param name="contextId">Tone context ID.</param>
            <returns>Tone name.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ToneManager.GetToneId(System.String)">
            <summary>
            Get tone id defined in phoneset.xml from tone name.
            </summary>
            <param name="name">Tone name defined in phoneset.xml.</param>
            <returns>Tone ID.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ToneManager.GetContextToneId(System.String)">
            <summary>
            Get tone context ID from tone name.
            </summary>
            <param name="name">Tone name defined in phoneset.xml.</param>
            <returns>Tone context ID.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.ToneManager.ContextIdMap">
            <summary>
            Gets Tone context ID map, map from tone context ID to TtsTone object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ToneManager.NameMap">
            <summary>
            Gets Tone name map, map from tone name to TtsTone object.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ToneManager.TtsTone">
            <summary>
            TtsTone class, wrap TtsPhone which represents tone and tone context ID.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ToneManager.TtsTone._contextToneId">
            <summary>
            Right/Left context phone id, the id should be continuously, start with 1.
            The same order with the phones defined in phoneset.xml.
            "0" presents no tone.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ToneManager.TtsTone.#ctor(Microsoft.Tts.Offline.Core.Phone)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ToneManager.TtsTone"/> class.
            </summary>
            <param name="phone">TtsPhone contains the tone information.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ToneManager.TtsTone.Phone">
            <summary>
            Gets TtsPhone representes the tone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ToneManager.TtsTone.ContextToneId">
            <summary>
            Gets or sets Tone context ID.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Phoneme">
            <summary>
            Description for Phoneme.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.Null">
            <summary>
            A invalid phoneme name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.AnyPhoneId">
            <summary>
            Phone id, representing any phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.SilencePhoneId">
            <summary>
            Silence phone id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.RuntimeSilence">
            <summary>
            Silence phone, represented as "-sil-" in runtime.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.Silence">
            <summary>
            Silence phone, represented as "sil".
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.HtkSilence">
            <summary>
            HTK silence phone, this representation is hard coded in HTK tools.
            All file used or generated by HTK should use this symbol to represent silence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.AnyPhoneName">
            <summary>
            Any phoneme.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.ShortPause">
            <summary>
            Short pause phone, represented as "sp", this is ussualy used 
            In forced alignment to indicate very short silence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.RuntimeShortPause">
            <summary>
            Short pause phone, represented as "-sp-" in runtime.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.HtkShortPause">
            <summary>
            HTK short pause phone.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.ToHtk(System.String)">
            <summary>
            Get Htk phoneme name.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>Htk phone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.ToRuntime(System.String)">
            <summary>
            Get runtime phoneme name.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>Htk phone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.ToOffline(System.String)">
            <summary>
            Get Offline phoneme name.
            </summary>
            <param name="phone">Phone name.</param>
            <returns>Offline phone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.IsSilenceFeature(System.String)">
            <summary>
            Tell if the phone has slience feature.
            </summary>
            <param name="phone">Phone.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.IsSilencePhone(System.String)">
            <summary>
            Tell if the phone is a slience.
            </summary>
            <param name="phone">Phone.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.IsShortPausePhone(System.String)">
            <summary>
            Tell if the phone is a short pause.
            </summary>
            <param name="phone">Phone.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.IsAnyPhone(System.String)">
            <summary>
            Tells if the phone is an any phone.
            </summary>
            <param name="phone">Phone.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.Create(Microsoft.Tts.Offline.Language)">
            <summary>
            Load phoneme.
            </summary>
            <param name="language">Language of phoneme to load.</param>
            <returns>Phoneme.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.ContainsTtsPhone(System.String)">
            <summary>
            Check whether the tts phone set contains the specified phone.
            </summary>
            <param name="phoneName">Tts phone name to be checked.</param>
            <returns>Whether the phone is contained in the TTS phone set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.ContainVowel(System.String)">
            <summary>
            Tell whether there is vowel phone in the phone set.
            </summary>
            <param name="pronunciation">Pronunciation to test.</param>
            <returns>True if yes, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.ContainVowel(System.String[])">
            <summary>
            Tell whether there is vowel phone in the phone set.
            </summary>
            <param name="phones">Phone collection to test.</param>
            <returns>True if yes, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.GetFirstVowelIndex(System.String[])">
            <summary>
            Find the index of first vowel phone in the phone sequence.
            </summary>
            <param name="phones">Phone collection to search the index of the fist vowel.</param>
            <returns>Vowel phone index, if not found return -1.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.GetVowelIndexes(System.String[])">
            <summary>
            Filter vowel phones.
            </summary>
            <param name="phones">Phone collection to search.</param>
            <returns>Vowel phone indexes found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.GetSonorantIndexes(System.String[])">
            <summary>
            Filter sonorant phones.
            </summary>
            <param name="phones">Phone collection to search.</param>
            <returns>Sonorant phone indexes found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.Tts2SrPhones(System.String)">
            <summary>
            Convert phone presentation from synthesis phone set to recognition phone set
            Because the tts phone set to sr phone set is not 1 to 1 mapping, the method
            May return more than one tts phone in one string with space for separating.
            </summary>
            <param name="phone">TTS phone to convert.</param>
            <returns>SR phone string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.Sr2TtsPhones(System.String)">
            <summary>
            Convert phone presentation from recognition phone set to synthesis phone set
            Because the sr phone set to tts phone set is not 1 to 1 mapping, the method
            May return more than one tts phone in one string with space for separating.
            </summary>
            <param name="phone">SR phone to convert.</param>
            <returns>TTS phone string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.TtsPhone2Id(System.String)">
            <summary>
            Map TTS phone to TTS phone id.
            </summary>
            <param name="phone">TTS phone string.</param>
            <returns>Phone id.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.TtsId2Phone(System.Int32)">
            <summary>
            Map TTS phone id to TTS phone.
            </summary>
            <param name="phoneId">TTS phone id.</param>
            <returns>TTS phone string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.Map2SapiVisemeIds(System.String[])">
            <summary>
            Map phone sequence to SAPI viseme id sequence,
            Seperated by "+", for a phone array.
            </summary>
            <param name="phones">TTS phone string array.</param>
            <returns>SAPI viseme strings.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.Map2Ids(System.String[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Go through the phone sequence, and map those ids into int sequence,
            Seperated by "+".
            </summary>
            <param name="phones">Phone array to perform mapping.</param>
            <param name="map">Mapping table.</param>
            <returns>Mapped phone string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.ParseData(Microsoft.Tts.Offline.PhoneMap)">
            <summary>
            Parse phone map data for this instance.
            </summary>
            <param name="phoneMap">Phone map.</param>
            <returns>Update target data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.ParseData(Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Intiate phoneme with phoneset instance.
            </summary>
            <param name="phoneSet">Phone set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Phoneme.EnsureMapLoaded(System.Collections.ICollection,System.String)">
            <summary>
            Ensure collection loaded.
            </summary>
            <param name="map">Map to test.</param>
            <param name="fileName">Resource filename for the map.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.SilencePhone">
            <summary>
            Gets the silence phoneme name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.ShortPausePhone">
            <summary>
            Gets the short pause phoneme name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.AnyPhone">
            <summary>
            Gets the any phoneme name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.Tts2srMapType">
            <summary>
            Gets TTS2SR map type, affect the behavior of converting the pronunciation from TTS phone to SR phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.TtsPhones">
            <summary>
            Gets TTS phone set, which does not include Silence and Short Pause phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.TtsPhoneIds">
            <summary>
            Gets TTS phone's id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.ToneManager">
            <summary>
            Gets Tone manager.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.SapiVisemeIds">
            <summary>
            Gets TTS phone's sapi viseme id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.IpaPhones">
            <summary>
            Gets International phonetic alphabet phones.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.TtsVowelPhones">
            <summary>
            Gets TTS vowel phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.TtsSonorantPhones">
            <summary>
            Gets TTS sonorant phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.PosCodes">
            <summary>
            Gets Part of speech code.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.Tts2SrMap">
            <summary>
            Gets Phone map between TTS phone set and speech recognition phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Phoneme.Language">
            <summary>
            Gets or sets Language of this phoneme for.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Phoneme.TtsToSrMappingType">
            <summary>
            TTS2SR map type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.TtsToSrMappingType.PhoneBased">
            <summary>
            PhoneBased.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Phoneme.TtsToSrMappingType.SyllableBased">
            <summary>
            SyllableBased.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Language">
            <summary>
            Language type
            Reference: http://www.microsoft.com/globaldev/nlsweb/.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.Neutral">
            <summary>
            Language Independent.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.ArEG">
            <summary>
            Arabic (Egypt).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.CaES">
            <summary>
            Catalan (Spain).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.CsCZ">
            <summary>
            Czech (Czech Republic).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.DaDK">
            <summary>
            Danish (Denmark).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.DeAT">
            <summary>
            German (Austria).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.DeCH">
            <summary>
            German (Switzerland).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.DeDE">
            <summary>
            German (Germany).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.ElGR">
            <summary>
            Greek(Greece).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.EnAU">
            <summary>
            English (Australia).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.EnCA">
            <summary>
            English (Canada).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.EnGB">
            <summary>
            English (United Kingdom).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.EnIN">
            <summary>
            English (India).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.EnUS">
            <summary>
            English (United States).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.EsES">
            <summary>
            Spanish (Spain).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.EsMX">
            <summary>
            Spanish (Mexico).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.FiFI">
            <summary>
            Finnish (Finland).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.FrBE">
            <summary>
            French (Belgium).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.FrCA">
            <summary>
            French (Canada).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.FrCH">
            <summary>
            French (Switzerland).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.FrFR">
            <summary>
            French (France).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.HeIL">
            <summary>
            Hebrew (Israel).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.HiIN">
            <summary>
            Hindi (India).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.HuHU">
            <summary>
            Hungarian (Hungary).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.IdID">
            <summary>
            Indonesian(Indonesia).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.ItIT">
            <summary>
            Italian (Italy).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.JaJP">
            <summary>
            Japanese (Japan).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.KoKR">
            <summary>
            Korean (Korea).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.NbNO">
            <summary>
            Norwegian, Bokmål (Norway).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.NlBE">
            <summary>
            Dutch (Belgium).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.NlNL">
            <summary>
            Dutch (Netherlands).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.PlPL">
            <summary>
            Polish (Poland).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.PtBR">
            <summary>
            Portuguese (Brazil).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.PtPT">
            <summary>
            Portuguese (Portugal).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.RoRO">
            <summary>
            Romanian (Romania).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.RuRU">
            <summary>
            Russian (Russia).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.SkSK">
            <summary>
            Slovak (Slovakia).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.SvSE">
            <summary>
            Swedish (Sweden).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.ThTH">
            <summary>
            Thai(Thailand).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.TrTR">
            <summary>
            Turkish (Turkey).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.ZhCN">
            <summary>
            Chinese, Simplified (People's Republic of China).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.ZhHK">
            <summary>
            Chinese, Traditional (Hong Kong S.A.R.).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Language.ZhTW">
            <summary>
            Chinese, Traditional (Taiwan).
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Localor">
            <summary>
            Localor for language related functions.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.UnitTableFileName">
            <summary>
            Unit table default file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.TruncateRulesFileName">
            <summary>
            Phone truncation rules default file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.PhoneSetFileName">
            <summary>
            TTS phoneset default file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.LexiconFileName">
            <summary>
            TTS lexicon default file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.LexicalAttributeSchemaFileName">
            <summary>
            TTS schema default file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.TtsToSapiVisemeIdFileName">
            <summary>
            TTS to SAPI viseme id mapping table default file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.TtsToIpaPhoneFileName">
            <summary>
            TTS to IPA phone mapping table default file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.FontMetaFileName">
            <summary>
            Font meta file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.TtsToSrPhoneFileName">
            <summary>
            TTS to SR phone mapping table default file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.AnnotationSymbols">
            <summary>
            Annotation regular express for script sentence
            1. * emphasis
            2. #\d break level.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Localor.LanguageNamePattern">
            <summary>
            Language naming pattern.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.ResetLanguageSetting(Microsoft.Tts.Offline.Language)">
            <summary>
            Reset the language data in the global dictionary.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.SetLanguageDataFile(Microsoft.Tts.Offline.Language,System.String,System.String)">
            <summary>
            Set language data files.
            </summary>
            <param name="language">Language to be set.</param>
            <param name="dataFileName">Data file name.</param>
            <param name="dataFilePath">Data file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.ClearLanguageDataFile(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Clear language data files.
            </summary>
            <param name="language">Language to be set.</param>
            <param name="dataFileName">Data file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.GetLanguageDataFile(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Get user customized language data file.
            </summary>
            <param name="language">Language of the data file.</param>
            <param name="dataFileName">Data file name.</param>
            <returns>Data file path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.ReportMissingStockedLanguageData(System.String,System.String)">
            <summary>
            Throw exception if stocked language data fails to load.
            </summary>
            <param name="language">Language.</param>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.LoadResource(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            LoadResource will look for resource in the following order:
            <param />
            1. Try to load resorce from customized path explicitly set by tools.
            <param />
            2. Load embedded resource files, most of which are referenced to latest data path.
            <param />
            3. Use stocked resources files as the last resort.
            <param />
            </summary>
            <param name="language">Language of resource to load.</param>
            <param name="fileName">Resource file name.</param>
            <returns>Stream reader pointing to the found resource, null if not found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.StringToLanguage(System.String)">
            <summary>
            Convert language name string to language type. (RFC 3066).
            </summary>
            <param name="languageName">Language string presentation.</param>
            <returns>Language enum.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.LanguageToString(Microsoft.Tts.Offline.Language)">
            <summary>
            RFC 3066 style name.
            Http://msdn2.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx.
            </summary>
            <param name="lang">Language enum.</param>
            <returns>Language string presentation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.GetPhoneme(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            Get phoneme for specified language.
            </summary>
            <param name="language">Which language to get.</param>
            <param name="engine">Which engine to get.</param>
            <returns>Phoneme instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.GetPhoneSet(Microsoft.Tts.Offline.Language)">
            <summary>
            Get the default TTS phone set.
            </summary>
            <param name="language">Language.</param>
            <returns>Phone set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.GetLexicon(Microsoft.Tts.Offline.Language)">
            <summary>
            Get Lexicon specific language.
            </summary>
            <param name="language">The language.</param>
            <returns>The lexicon.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.GetLexicalAttributeSchema(Microsoft.Tts.Offline.Language)">
            <summary>
            Get Lexicon specific language.
            </summary>
            <param name="language">The language.</param>
            <returns>The lexical attribute schema.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.GetPhoneme(Microsoft.Tts.Offline.Language)">
            <summary>
            Get phoneme for specified language, default is for TTS 3.0.
            </summary>
            <param name="language">Which language to get.</param>
            <returns>Phoneme instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.CreateScriptFile(Microsoft.Tts.Offline.Language)">
            <summary>
            Create script file instance for specified language.
            </summary>
            <param name="language">Which language to create for.</param>
            <returns>ScriptFile.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.CreateScriptFile(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            Create script file instance for specified language and engine type.
            </summary>
            <param name="language">Which language to create for.</param>
            <param name="engine">Engine type.</param>
            <returns>Script file instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.CreateScriptItem(Microsoft.Tts.Offline.Language)">
            <summary>
            Create script item instance for specified language and EngineType.Tts30.
            </summary>
            <param name="language">Which language to create for.</param>
            <returns>ScriptItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.CreateScriptItem(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            Create script item instance for specified language and engine.
            </summary>
            <param name="language">Which language to create for.</param>
            <param name="engine">Which Engine to create for.</param>
            <returns>ScriptItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.GetTruncateRuleData(Microsoft.Tts.Offline.Language)">
            <summary>
            Create slice data instance for specified language.
            </summary>
            <param name="language">Which language to create for.</param>
            <returns>SliceData.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.GetSliceData(Microsoft.Tts.Offline.Language)">
            <summary>
            Create slice data instance for specified language.
            </summary>
            <param name="language">Which language to create for.</param>
            <returns>SliceData.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.GetFeatureMeta(Microsoft.Tts.Offline.Language)">
            <summary>
            Create feature meta for speicified language.
            </summary>
            <param name="language">Which language to create for.</param>
            <returns>FeatureMeta.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.MapLanguageId(System.Int32)">
            <summary>
            Map from integer language id to enum Language type data.
            </summary>
            <param name="languageId">Language id.</param>
            <returns>Language enum.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.MapLanguageId(Microsoft.Tts.Offline.Language)">
            <summary>
            Map from enum Language type data to integer language id.
            </summary>
            <param name="language">Language enum.</param>
            <returns>Language id.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.MapWordType2Break(Microsoft.Tts.Offline.WordType)">
            <summary>
            Map word type to break level.
            </summary>
            <param name="wordType">Word type.</param>
            <returns>Break level.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.MapPunctuation(System.String,System.String)">
            <summary>
            Map punctuation to type.
            </summary>
            <param name="punctuation">String to test.</param>
            <param name="punctuationPattern">Punctuation pattern.</param>
            <returns>Word type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.ReverseMapSlicePos(System.String)">
            <summary>
            Reverse map slice type (prefix of slice name) to position in syllable.
            </summary>
            <param name="sliceType">Prefix string of slice position.</param>
            <returns>Slice Position.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.MapSlicePos(Microsoft.Tts.Offline.PosInSyllable)">
            <summary>
            Map slice position.
            </summary>
            <param name="slicePos">Slice Position.</param>
            <returns>Prefix string of slice position.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.MapPos(System.String)">
            <summary>
            Map from POS of TTS 2.0 Mulan English lexicon to SAPI POS.
            </summary>
            <param name="pos">POS string to map.</param>
            <returns>PartOfSpeech.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.ToLanguageKey(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            To language key which is combined language and engine type.
            </summary>
            <param name="language">Language.</param>
            <param name="engine">Engine type.</param>
            <returns>Language key.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.LoadTruncateRuleData(Microsoft.Tts.Offline.Language)">
            <summary>
            Load slice data for given language.
            </summary>
            <param name="language">Language to load for.</param>
            <returns>SliceData if load.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.LoadSliceData(Microsoft.Tts.Offline.Language)">
            <summary>
            Load slice data for given language.
            </summary>
            <param name="language">Language to load for.</param>
            <returns>SliceData if load.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Localor.LanguageToResourceString(Microsoft.Tts.Offline.Language)">
            <summary>
            Convert language to resource string, which uses '_' instead of '-'.
            </summary>
            <param name="language">Language type to convert.</param>
            <returns>Result string.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Localor.ConfigSchema">
            <summary>
            Gets Configuration schema.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexiconType">
            <summary>
            Lexicon type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconType.LetterToSound">
            <summary>
            Data from LTS module.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconType.Application">
            <summary>
            Default lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconType.Customer">
            <summary>
            Additional lexicon.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.PosError">
            <summary>
            Enum of pos error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.PosError.UnrecognizedPos">
            <summary>
            Unrecognized pos.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.GenderError">
            <summary>
            Enum of gender error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.GenderError.UnrecognizedGender">
            <summary>
            Unrecognized gender.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.GenderError.DuplicateGender">
            <summary>
            Duplicate gender.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.CaseError">
            <summary>
            Enum of case error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.CaseError.UnrecognizedCase">
            <summary>
            Unrecognized case.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.CaseError.DuplicateCase">
            <summary>
            Duplicate case.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.NumberError">
            <summary>
            Enum of number error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.NumberError.UnrecognizedNumber">
            <summary>
            Unrecognized number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.NumberError.DuplicateNumber">
            <summary>
            Duplicate number.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.DomainError">
            <summary>
            Enum of domain error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.DomainError.EmptyDomain">
            <summary>
            Empty domain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.DomainError.DuplicateDomain">
            <summary>
            Duplicate domain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.DomainError.InvalidDomainTags">
            <summary>
            Invalid domain tags.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.HistoryValue">
            <summary>
            HistoryValue class manages tracking value change history.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.HistoryValue.currentValue">
            <summary>
            Current value field.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.HistoryValue.originalValue">
            <summary>
            Old value field.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.HistoryValue.Equals(Microsoft.Tts.Offline.Core.HistoryValue,Microsoft.Tts.Offline.Core.HistoryValue)">
            <summary>
            Compare objects that derived from HistoryValue.
            </summary>
            <param name="obj1">Object 1.</param>
            <param name="obj2">Object 2.</param>
            <returns>true for equal
                (null, null) => equal
                (null, deleted) => equal
                (deleted, deleted) => equal.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.HistoryValue.op_Implicit(Microsoft.Tts.Offline.Core.HistoryValue)~System.String">
            <summary>
            Implicit convert from HistoryValue to string.
            </summary>
            <param name="value">HistoryValue.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.HistoryValue.op_Implicit(System.String)~Microsoft.Tts.Offline.Core.HistoryValue">
            <summary>
            Implicit convert from string to HistoryValue.
            </summary>
            <param name="value">String.</param>
            <returns>HistoryValue value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.HistoryValue.RemoveHistory">
            <summary>
            Remove change history.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.HistoryValue.Change(System.String)">
            <summary>
            Change to new value.
            </summary>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.HistoryValue.CopyTo(Microsoft.Tts.Offline.Core.HistoryValue)">
            <summary>
            Copy function.
            </summary>
            <param name="historyValue">HistoryValue.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.HistoryValue.Equals(System.Object)">
            <summary>
            Override the Equals function.
            </summary>
            <param name="obj">Object.</param>
            <returns>True for equal.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.HistoryValue.GetHashCode">
            <summary>
            Override the GetHashCode function.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.HistoryValue.Value">
            <summary>
            Gets or sets Current value property.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.HistoryValue.OldValue">
            <summary>
            Gets or sets Old value property.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.HistoryValue.Status">
            <summary>
            Gets or sets LexiconStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.PropertyItem">
            <summary>
            Class of PropertyItem.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PropertyItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.PropertyItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PropertyItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.PropertyItem"/> class.
            </summary>
            <param name="value">Value of PropertyItem.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PropertyItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.PropertyItem"/> class.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="value">Current Value.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.PosItem">
            <summary>
            POS item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PosItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.PosItem"/> class.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="value">Current Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PosItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.PosItem"/> class.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PosItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.PosItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PosItem.Validate(System.String,Microsoft.Tts.Offline.TtsPosSet,Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Validate pos string.
            </summary>
            <param name="posStr">Pos string to be validated.</param>
            <param name="ttsPosSet">Tts pos set for validation.</param>
            <param name="attributeSchema">Lexicon attribute schema for validation.</param>
            <returns>Validate result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PosItem.Clone">
            <summary>
            Clone function.
            </summary>
            <returns>PosItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PosItem.Load(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Load PosItem from XmlNode.
            </summary>
            <param name="propertyNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <returns>PosItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.PosItem.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write a pos item to the XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.PosItem.Pos">
            <summary>
            Gets or sets Pos, this property is overdue now.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.GenderItem">
            <summary>
            Gender item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.GenderItem"/> class.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="value">Current Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.GenderItem"/> class.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.GenderItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.Validate(System.String)">
            <summary>
            Validate gender string.
            </summary>
            <param name="genderStr">Gender string to be validated.</param>
            <returns>Validate error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.StringToId(System.String,System.Int32@)">
            <summary>
            Convert the gender string to gender id.
            </summary>
            <param name="gender">Gender string.</param>
            <param name="id">Gender id.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.GetId(System.Char)">
            <summary>
            Get the gender according to the gender character.
            </summary>
            <param name="gender">Gender character.</param>
            <returns>Gender.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.ConvertIntoArray(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert the gender string into gender list.
            </summary>
            <param name="gender">Gender string.</param>
            <param name="errorSet">Error set.</param>
            <returns>Gender list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.Clone">
            <summary>
            Clone function.
            </summary>
            <returns>GenderItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.ToNewFormatAttribute(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert the gender item to attributeitem collection.
            </summary>
            <param name="errorSet">The Error set.</param>
            <returns>Attribute item collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.Load(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Load GenderItem from XmlNode.
            </summary>
            <param name="propertyNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <returns>GenderItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.GenderItem.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write a gender item to the XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.GenderItem.Gender">
            <summary>
            Three genders: use one bit for one gender
            Can be combinations of them.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.GenderItem.Gender.None">
            <summary>
            Not support for gender.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.GenderItem.Gender.Feminine">
            <summary>
            Feminine.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.GenderItem.Gender.Masculine">
            <summary>
            Masculine.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.GenderItem.Gender.Neuter">
            <summary>
            Neuter.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.CaseItem">
            <summary>
            Case item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.CaseItem"/> class.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="value">Current Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.CaseItem"/> class.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.CaseItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.Validate(System.String)">
            <summary>
            Validate case string.
            </summary>
            <param name="caseStr">Case string to be validated.</param>
            <returns>Validate error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.StringToId(System.String,System.Int32@)">
            <summary>
            Convert the case string to case id. If all fail, id will be 0.
            </summary>
            <param name="caseStr">Case string.</param>
            <param name="id">Case id.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.GetId(System.Char)">
            <summary>
            Get the case according to the case character.
            </summary>
            <param name="grammaticalCase">Grammatical Case character.</param>
            <returns>Case.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.ConvertIntoArray(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert the case string into the case list.
            </summary>
            <param name="grammaticalCase">Grammatical Case string.</param>
            <param name="errorSet">Error set.</param>
            <returns>Case list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.Clone">
            <summary>
            Clone function.
            </summary>
            <returns>CaseItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.ToNewFormatAttribute(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert the case item to attributeitem collection.
            </summary>
            <param name="errorSet">The Error set.</param>
            <returns>Attribute item collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.Load(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Load CaseItem from XmlNode.
            </summary>
            <param name="propertyNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <returns>CaseItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.CaseItem.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write a case item to the XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.CaseItem.GrammaticalCase">
            <summary>
            Case types
             n       Nominative
             g       Genitive
             d       Dative
             a       Accusative.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.CaseItem.GrammaticalCase.NotSupport">
            <summary>
            Not support for case.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.CaseItem.GrammaticalCase.Nominative">
            <summary>
            Nominative.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.CaseItem.GrammaticalCase.Genitive">
            <summary>
            Genitive.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.CaseItem.GrammaticalCase.Dative">
            <summary>
            Dative.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.CaseItem.GrammaticalCase.Accusative">
            <summary>
            Accusative.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.NumberItem">
            <summary>
            Number item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.NumberItem"/> class.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="value">Current Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.NumberItem"/> class.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.NumberItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.StringToId(System.String,System.Int32@)">
            <summary>
            Convert the number string to gender id.
            </summary>
            <param name="number">Number string.</param>
            <param name="id">Number id.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.GetId(System.Char)">
            <summary>
            Get the number according to the number character.
            </summary>
            <param name="number">Number character.</param>
            <returns>Number.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.ConvertIntoArray(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert the number string into number list.
            </summary>
            <param name="number">Number string.</param>
            <param name="errorSet">Error set.</param>
            <returns>Number list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.Clone">
            <summary>
            Clone function.
            </summary>
            <returns>NumberItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.ToNewFormatAttribute(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert the number item to attributeitem collection.
            </summary>
            <param name="errorSet">The Error set.</param>
            <returns>Attribute item collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.Load(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Load NumberItem from XmlNode.
            </summary>
            <param name="propertyNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <returns>NumberItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.NumberItem.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write a number item to the XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.NumberItem.Number">
            <summary>
            Number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.NumberItem.Number.NotSupport">
            <summary>
            Not support for number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.NumberItem.Number.Singular">
            <summary>
            Singular, S.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.NumberItem.Number.Plural">
            <summary>
            Plural, P.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.DomainItem">
            <summary>
            Domain item.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.DomainItem.GeneralDomain">
            <summary>
            Default general domain value.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.DomainItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.DomainItem"/> class.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="value">Current Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.DomainItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.DomainItem"/> class.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.DomainItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.DomainItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.DomainItem.Clone">
            <summary>
            Clone current domain.
            </summary>
            <returns>Cloned DomainItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.DomainItem.Load(Microsoft.Tts.Offline.Core.LexiconItemProperty,System.Xml.XmlNode,System.Xml.XmlNamespaceManager,Microsoft.Tts.Offline.Core.Lexicon.ContentControler,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load DomainItem.
            </summary>
            <param name="parentProperty">LexiconItemProperty.</param>
            <param name="domainNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <param name="contentController">Object.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>DomainItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.DomainItem.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write a domain item to the XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.DomainItem.Value">
            <summary>
            Gets or sets Value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.DomainItem.OldValue">
            <summary>
            Gets or sets Old value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.DomainItem.Checked">
            <summary>
            Gets a value indicating whether Checked flag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.DomainItem.IsFirstPronunciation">
            <summary>
            Gets or sets a value indicating whether unified pronunciation contains this DomainItem is
            Prefered as the first pronunciation in the domain lexicon.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.AttributeItem">
            <summary>
            Class of AttributeItem.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.AttributeItem.GenderCategoryName">
            <summary>
            Gender category name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.AttributeItem.CaseCategoryName">
            <summary>
            Case category name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.AttributeItem.NumberCategoryName">
            <summary>
            Number category name.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.AttributeItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.AttributeItem"/> class.
            </summary>
            <param name="categoryName">CategoryName of AttributeItem.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.AttributeItem"/> class.
            </summary>
            <param name="categoryName">Category name.</param>
            <param name="categoryValue">Category value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeItem.Clone">
            <summary>
            Clone current attribute.
            </summary>
            <returns>Cloned AttributeItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeItem.Equals(System.Object)">
            <summary>
            Override the Equals function.
            </summary>
            <param name="obj">Object.</param>
            <returns>True for equal.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeItem.GetHashCode">
            <summary>
            Override the GetHashCode function.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeItem.Load(Microsoft.Tts.Offline.Core.LexiconItemProperty,System.Xml.XmlNode,System.Xml.XmlNamespaceManager,Microsoft.Tts.Offline.Core.Lexicon.ContentControler,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load AttributeItem from XmlNode.
            </summary>
            <param name="parentProperty">LexiconItemProperty.</param>
            <param name="attributeNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <param name="contentController">Object.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>AttributeItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.AttributeItem.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write an attribute item to the XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.AttributeItem.CategoryName">
            <summary>
            Gets or sets CategoryName.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexiconItemProperty">
            <summary>
            Lexicon pronunciation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexiconItemProperty"/> class.
            Default construction.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.#ctor(Microsoft.Tts.Offline.Core.PosItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexiconItemProperty"/> class.
            Construction from POS item.
            </summary>
            <param name="pos">POS value of this property.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.#ctor(Microsoft.Tts.Offline.Core.GenderItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexiconItemProperty"/> class.
            Construction from Gender item.
            </summary>
            <param name="gender">Gender value of this property.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.#ctor(Microsoft.Tts.Offline.Core.CaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexiconItemProperty"/> class.
            Construction from Case item.
            </summary>
            <param name="caseItem">Case value of this property.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.#ctor(Microsoft.Tts.Offline.Core.NumberItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexiconItemProperty"/> class.
            Construction from Number item.
            </summary>
            <param name="number">Number value of this property.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.#ctor(Microsoft.Tts.Offline.Core.PosItem,Microsoft.Tts.Offline.Core.GenderItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexiconItemProperty"/> class.
            Construction from POS and Gender item.
            </summary>
            <param name="pos">POS value of this property.</param>
            <param name="gender">Gender value of this property.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.AttributeSetEqual(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Microsoft.Tts.Offline.Core.AttributeItem}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Microsoft.Tts.Offline.Core.AttributeItem}})">
            <summary>
            Whether equal for two attribute set.
            </summary>
            <param name="attributeSetA">Attribute Set A.</param>
            <param name="attributeSetB">Attribute Set B.</param>
            <returns>Whether equal.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.AttributeSetAContainsSetB(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Microsoft.Tts.Offline.Core.AttributeItem}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Microsoft.Tts.Offline.Core.AttributeItem}})">
            <summary>
            Whether attribute set A contains set B.
            </summary>
            <param name="attributeSetA">Attribute Set A.</param>
            <param name="attributeSetB">Attribute Set B.</param>
            <returns>Return true, when all attributes in set B are found in set A
                attributeSetB = null, return true.
                all attributes in set B are deleted, return true, even if attributeSetA = null.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.DomainSetEqual(System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.Core.DomainItem},System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.Core.DomainItem})">
            <summary>
            Whether equal for two domain set.
            </summary>
            <param name="domainSetA">DomainSet A.</param>
            <param name="domainSetB">DomainSet B.</param>
            <returns>Whether equal.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.EqualsWithoutDomain(Microsoft.Tts.Offline.Core.LexiconItemProperty)">
            <summary>
            Equal without domain information.
            </summary>
            <param name="property">The property.</param>
            <returns>True for equal.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.Equals(System.Object)">
            <summary>
            Override the Equals function.
            </summary>
            <param name="obj">Object.</param>
            <returns>True for equal.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.GetHashCode">
            <summary>
            Override the GetHashCode function.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.ToString">
            <summary>
            Value of the lexicon items, mainly used for log the item.
            </summary>
            <returns>String value presents the item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.RemoveHistory">
            <summary>
            Remove change history.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.ImportDomainItem(Microsoft.Tts.Offline.Core.DomainItem)">
            <summary>
            Add domain.
            </summary>
            <param name="domainItem">DomainItem.</param>
            <returns>Whether imported.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.ChangeDomain(Microsoft.Tts.Offline.Core.DomainItem)">
            <summary>
            Change to another specified domain.
            </summary>
            <param name="domainItem">DomainItem.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.ToStringWithoutDomain">
            <summary>
            Value of the lexicon property items without domain information.
            </summary>
            <returns>
            String value without domain information presents the item, the format likes:gender=mail,femail; number=singule.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.Clone">
            <summary>
            Clone current property .
            </summary>
            <returns>Cloned LexiconItemProperty.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.AddAttribute(Microsoft.Tts.Offline.Core.AttributeItem)">
            <summary>
            Add an attribute to now attribute list.
            </summary>
            <param name="attribute">New attribute.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.RemoveAttributeValue(System.String,System.String)">
            <summary>
            RemoveAttributeValue.
            </summary>
            <param name="attrName">Attribute name.</param>
            <param name="attrValue">Attribute value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.AddAttributeValue(System.String,System.String)">
            <summary>
            AddAttributeValue.
            </summary>
            <param name="attrName">Attribute name.</param>
            <param name="attrValue">Attribute value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.RemoveDomainValue(System.String)">
            <summary>
            RemoveDomainValue.
            </summary>
            <param name="domainValue">DomainValue.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.ToNewFormatAttributeProperty(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert the property's attribute from old format to new format.
            The old format is: gender v="MF" case v="nda" number v="S".
            The new format is: attr category="F_Gender" value="GENDER_masculine".
            </summary>
            <param name="errorSet">The error set.</param>
            <returns>Converted property.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.Load(Microsoft.Tts.Offline.Core.LexiconPronunciation,System.Xml.XmlNode,System.Xml.XmlNamespaceManager,Microsoft.Tts.Offline.Core.Lexicon.ContentControler,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load LexiconItemProperty from XmlNode.
            </summary>
            <param name="parentLexPron">LexiconPronunciation.</param>
            <param name="propertyNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <param name="contentController">Object.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>LexiconItemProperty.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write a lexicon item property to the XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.DomainSetAContainsSetB(System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.Core.DomainItem},System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.Core.DomainItem})">
            <summary>
            Whether domain set A contains set B.
            </summary>
            <param name="domainSetA">Domain Set A.</param>
            <param name="domainSetB">Domain Set B.</param>
            <returns>Return true, when all domains in set B are found in set A
                domainSetB = null, return true.
                all domains in set B are deleted, return true, even if domainSetA = null.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.TransferCollection(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Core.AttributeItem})">
            <summary>
            Transfer from a collection of attributeitem to a collection of collection.
            </summary>
            <param name="sourceCollection">Source collection.</param>
            <returns>Result collection of collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconItemProperty.MultiplyCollection(System.Collections.ObjectModel.Collection{System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Core.AttributeItem}},System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Core.AttributeItem})">
            <summary>
            Mutiply the collection for group the attributes.
            </summary>
            <param name="firstCollection">First collection.</param>
            <param name="secondCollection">Second collection.</param>
            <returns>Result mutiplied collection.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.Valid">
            <summary>
            Gets or sets a value indicating whether this property is valid.
            If it contains bad POS, Case, Gender or Number, it should be invalid.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.PartOfSpeech">
            <summary>
            Gets or sets Part of speech, this is POS.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.Gender">
            <summary>
            Gets or sets Gender.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.Case">
            <summary>
            Gets or sets Case.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.Number">
            <summary>
            Gets or sets Number.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.Status">
            <summary>
            Gets or sets Status.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.Domains">
            <summary>
            Gets Domains.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.AttributeSet">
            <summary>
            Gets Attribute set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.SortedAttributeSet">
            <summary>
            Gets Sorted Attribute Set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconItemProperty.Parent">
            <summary>
            Gets or sets Parent LexiconPronunciation instance.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexiconPronunciation">
            <summary>
            Pronunciation node in lexicon, containing several lexiconItemProperty.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconPronunciation.DefaultPositionIndex">
            <summary>
            Default pronunciation position index.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexiconPronunciation"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexiconPronunciation"/> class.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.GetSpellOutPronunciation(System.String,Microsoft.Tts.ServiceProvider.ServiceProvider)">
            <summary>
            Get spell out pronunciation.
            </summary>
            <param name="grapheme">Grapheme.</param>
            <param name="sp">ServiceProvider.</param>
            <returns>Spell out pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.Equals(Microsoft.Tts.Offline.Core.LexiconPronunciation,Microsoft.Tts.Offline.Core.LexiconPronunciation)">
            <summary>
            Compare objects that derived from LexiconPronunciation.
            </summary>
            <param name="obj1">Object 1.</param>
            <param name="obj2">Object 2.</param>
            <returns>true for equal
                (null, null) => equal
                (null, deleted) => equal
                (deleted, deleted) => equal.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.IsSpellOut(Microsoft.Tts.ServiceProvider.ServiceProvider)">
            <summary>
            If pronunication is spell out.
            </summary>
            <param name="sp">ServiceProvider.</param>
            <returns>Whether pronunication is spell out.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.RefreshStatus">
            <summary>
            Update state.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.RemoveHistory">
            <summary>
            Remove change history.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.ImportDomainPronunciation(Microsoft.Tts.Offline.Core.LexiconPronunciation,System.String,System.Boolean)">
            <summary>
            Import domain pronunciation.
            </summary>
            <param name="domainPron">Domain LexiconPronunciation.</param>
            <param name="domainTag">Domain tag.</param>
            <param name="first">Whether this pronunciation is the first one in domain lexicon.</param>
            <returns>Whether this LexiconPronunciation changed .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.IsFirstDomainPronunciation(System.String)">
            <summary>
            Whether it is prefered as the first pronunciation in specified domain lexicon.
            </summary>
            <param name="domainTag">Domain tag.</param>
            <returns>Whether first.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.OnlyContainsOneDomain(System.String)">
            <summary>
            Check whether only contains one target domain.
            </summary>
            <param name="domainTag">Domain tag.</param>
            <returns>Whether only contains one domain.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.ToStringWithoutDomain">
            <summary>
            Convert to string presentation without domain information.
            </summary>
            <returns>String presentation without domain.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.FindProperty(System.String)">
            <summary>
            Find the LexiconItemProperty node.
            </summary>
            <param name="pos">Pos.</param>
            <returns>Found LexiconItemProperty node.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.Clone">
            <summary>
            Clone current pronunciation.
            </summary>
            <returns>Cloned LexiconPronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.ToNewAttributeFormatPronunciation(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert to new attribute format pronunciation.
            </summary>
            <param name="errorSet">The error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>String presentation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.Load(Microsoft.Tts.Offline.Core.LexicalItem,System.Xml.XmlNode,System.Xml.XmlNamespaceManager,Microsoft.Tts.Offline.Core.Lexicon.ContentControler,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load LexiconPronunciation from XmlNode.
            </summary>
            <param name="parentLexItem">LexicalItem.</param>
            <param name="pronNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <param name="contentController">Object.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>LexiconPronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write a lexicon pronunciation to the XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconPronunciation.RemovePronunciationIsFirstTags(System.String)">
            <summary>
            Remove pronunciation prefered tag to false in DomainItem.
            </summary>
            <param name="domainTag">DomainTag.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.Valid">
            <summary>
            Gets or sets a value indicating whether the pronunciation is valid
            If it contains no valid property or its pronunciation string is not valid, should return invalid.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.Frequency">
            <summary>
            Gets or sets Frequency.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.OldPosition">
            <summary>
            Gets or sets Pronunciation's old position.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.Symbolic">
            <summary>
            Gets or sets PhoneString.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.OldSymbolic">
            <summary>
            Gets or sets Old PhoneString.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.Language">
            <summary>
            Gets or sets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.LexiconType">
            <summary>
            Gets or sets Type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.Status">
            <summary>
            Gets or sets Status of the pronunciation
            When loading, if it is "deleted", it means this item is deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.Properties">
            <summary>
            Gets Poses.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexiconPronunciation.Parent">
            <summary>
            Gets or sets Parent LexicalItem instance.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexicalItem">
            <summary>
            Lexicon item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexicalItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexicalItem"/> class.
            </summary>
            <param name="language">Language of this item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.IsExpandedWord(System.String,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.Core.LexiconPronunciation,Microsoft.Tts.ServiceProvider.ServiceProvider)">
            <summary>
            Whether this word with pronunciation is expanded.
            </summary>
            <param name="word">Word.</param>
            <param name="language">Language.</param>
            <param name="pronunciation">Pronunciation.</param>
            <param name="sp">ServiceProvider.</param>
            <returns>Whether word with pronunciation is expanded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.PhonesMoreThanLetters(System.String,System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            PhonesMoreThanLetters.
            </summary>
            <param name="word">Word.</param>
            <param name="pronunciation">Pronunciation.</param>
            <param name="language">Language.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.Equals(Microsoft.Tts.Offline.Core.LexicalItem,Microsoft.Tts.Offline.Core.LexicalItem)">
            <summary>
            Compare objects that derived from LexicalItem.
            </summary>
            <param name="obj1">Object 1.</param>
            <param name="obj2">Object 2.</param>
            <returns>true for equal
                (null, null) => equal
                (null, deleted) => equal
                (deleted, deleted) => equal.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.RemoveHistory">
            <summary>
            Remove change history.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.RejectPronPositionChange">
            <summary>
            Reject current pronunciation's position, recover to the original posotion.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.SetStatusOnAllDomains(Microsoft.Tts.Offline.Core.Lexicon.LexiconStatus,System.Boolean)">
            <summary>
            Set status of all domains to specified status
            Change all status if "forceApply" is set as True
            Change the statu only if its status is Original when "forceApply" is set as False.
            </summary>
            <param name="status">LexiconStatus.</param>
            <param name="forceApply">Whether force apply status.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.CleanAllDomainTags">
            <summary>
            Clean all domains tags.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.RefreshStatus">
            <summary>
            Update the state of LexicalItem.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.OnlyContainsOneDomain(System.String)">
            <summary>
            Check whether only contains one target domain.
            </summary>
            <param name="domainTag">Domain tag.</param>
            <returns>Whether only contains one domain.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.IsAcronym">
            <summary>
            Whether this word is an Acronym.
            </summary>
            <returns>Whether be Acronym.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.IsExpandedWord(System.String,Microsoft.Tts.ServiceProvider.ServiceProvider)">
            <summary>
            Whether this word is expanded in lexicon.
            </summary>
            <param name="domain">Domain.</param>
            <param name="sp">ServiceProvider.</param>
            <returns>Whether word is expanded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ContainsDomain(System.String)">
            <summary>
            Whether contains specified domain.
            </summary>
            <param name="domainTag">DomainTag.</param>
            <returns>Whether contains.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.IsReviewedDomain(System.String)">
            <summary>
            Whether specified domain is reviewed.
            </summary>
            <param name="domainTag">Domain tag.</param>
            <returns>Whether reviewed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ImportDomainLexicalItem(Microsoft.Tts.Offline.Core.LexicalItem,System.String,System.Boolean)">
            <summary>
            Import domain LexicalItem.
            </summary>
            <param name="domainLexItem">LexicalItem.</param>
            <param name="domainTag">Domain tag.</param>
            <param name="trustDomainLexicon">Whether domain lexion is trusting.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.SplitToDomainLexicalItems">
            <summary>
            Split to dictionary about domain LexicalItem
            The key is domain tag and the value is LexicalItem.
            </summary>
            <returns>Domain LexicalItem dictionary.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.FindLexiconPronunciation(System.String,System.Boolean)">
            <summary>
            Find LexiconPronunciation by symbolic.
            </summary>
            <param name="symbolic">Pronunciation symbolic.</param>
            <param name="ignore">Ignore stress and syllable.</param>
            <returns>LexiconPronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.Validate(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.TtsPosSet,Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Validate lexicon item.
            </summary>
            <param name="ttsPhoneSet">Phone set to validate lexicon item's pronunciation.</param>
            <param name="ttsPosSet">Pos set of the lexicon item.</param>
            <param name="attributeSchema">Attribute schema.</param>
            <returns>Error set of the validation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.MergeDuplicatePronunciation">
            <summary>
            Merge duplicate pronunciation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.Clone">
            <summary>
            Clone current word.
            </summary>
            <returns>Cloned word.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.VerifyOnlyOnePreferedPronOfEachDomain">
            <summary>
            Verify if the LexicalItem only contains one prefered pronunciation of each domain.
            </summary>
            <returns>The ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ToNewAttributeFormatLexicalItem(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Convert to new attribute format lexical item.
            </summary>
            <param name="errorSet">The error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.WriteToString">
            <summary>
            Write a lexicon item to string.
            </summary>
            <returns>String of lexicon item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.SetCacheValue">
            <summary>
            Sets lexicon item cache value.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>String presentation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.MemberwiseClone">
            <summary>
            MemberwiseClone.
            </summary>
            <returns>New instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ContainsPronunciation(System.String)">
            <summary>
            Check whether the pronunciation exists.
            </summary>
            <param name="pron">Pronunciation.</param>
            <returns>True for existing, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.FindPronunciation(System.String)">
            <summary>
            Find the pronunciation node.
            </summary>
            <param name="pron">Pronunciation.</param>
            <returns>Found pronunciation node.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.FindPronunciation(System.String,System.Boolean)">
            <summary>
            Find the pronunciation node.
            </summary>
            <param name="pron">Pronunciation.</param>
            <param name="ignoreLiaison">True for ignoring Liaison.</param>
            <returns>Found pronunciation node.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.AddRange(Microsoft.Tts.Offline.Core.LexicalItem)">
            <summary>
            Add the pronunciations for new item into original item.
            </summary>
            <param name="newItem">New item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.Load(Microsoft.Tts.Offline.Core.Lexicon,System.Xml.XmlNode,System.Xml.XmlNamespaceManager,Microsoft.Tts.Offline.Core.Lexicon.ContentControler,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load LexicalItem from XmlNode.
            </summary>
            <param name="parentLexicon">Lexicon.</param>
            <param name="wordNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <param name="contentController">Object.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>LexicalItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write a lexicon item to the XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.GetLettersCount(System.String)">
            <summary>
            Get count of letters in word.
            </summary>
            <param name="word">Word.</param>
            <returns>Letters count.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ValidateCase(System.String,Microsoft.Tts.Offline.Core.LexiconItemProperty,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Validate case for the word.
            </summary>
            <param name="word">Word.</param>
            <param name="property">Lexicon item property.</param>
            <param name="errorSet">Error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ValidateGender(System.String,Microsoft.Tts.Offline.Core.LexiconItemProperty,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Validate gender for the word.
            </summary>
            <param name="word">Word.</param>
            <param name="property">Lexicon item property.</param>
            <param name="errorSet">Error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ValidateNumber(System.String,Microsoft.Tts.Offline.Core.LexiconItemProperty,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Validate number for the word.
            </summary>
            <param name="word">Word.</param>
            <param name="property">Lexicon item property.</param>
            <param name="errorSet">Error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ValidateAttributeSet(Microsoft.Tts.Offline.Core.LexiconItemProperty,Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Validate attribute set for the word.
            </summary>
            <param name="property">Lexicon item property.</param>
            <param name="attributeSchema">Lexical Attribute Schema.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ValidatePronunciation(System.String,Microsoft.Tts.Offline.Core.LexiconPronunciation,Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Validate the pronunciation for the word.
            </summary>
            <param name="word">Word.</param>
            <param name="lexPron">Lexicon pronunciation.</param>
            <param name="ttsPhoneSet">TTS phone set.</param>
            <param name="errorSet">Error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.ComparePronOriginalPosition(Microsoft.Tts.Offline.Core.LexiconPronunciation,Microsoft.Tts.Offline.Core.LexiconPronunciation)">
            <summary>
            Compare two pronunciation's original position.
            </summary>
            <param name="firstPron">First pronunciation to be compared.</param>
            <param name="secondPron">Second pronunciation to be compared.</param>
            <returns>
            Bigger than zero, firstPron's position bigger than the second one;
            Equal to zero, firstPron's position equal to the second one;
            less than zero, firstPron's position less than the second one.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.RemoveHistoryOnPronPosition">
            <summary>
            Remove history on pronunciation positions.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalItem.SortPronunciationsForDomain(System.String)">
            <summary>
            Sort pronunciations for domain.
            </summary>
            <param name="domainTag">Domain tag.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Valid">
            <summary>
            Gets or sets a value indicating whether this lexical item is valid
            If non of the pronunciation node is valid, should return false (invalid).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Checked">
            <summary>
            Gets a value indicating whether Checked flag
            Checked = true means this item is reviewed or edited by 1 LE and then status is "changed", "added",
            "deleted" or "checked"(checked means reviewed by 1 LE who feels this item is correct).
            Checked = false means this item is not reviewed by LE and then status is "original".
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Reviewed">
            <summary>
            Gets or sets a value indicating whether Reviewed flag
            It means whether the word has been double reviewed by another LE.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.NeedReview">
            <summary>
            Gets a value indicating whether the word need review.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Polyphonic">
            <summary>
            Gets a value indicating whether this item is a polyphony item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Frequency">
            <summary>
            Gets or sets The frequency of this word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Grapheme">
            <summary>
            Gets or sets Grapheme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.OldGrapheme">
            <summary>
            Gets or sets Old Grapheme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Text">
            <summary>
            Gets Grapheme text in lexicon xml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Comment">
            <summary>
            Gets or sets Word comment in corpus.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Alias">
            <summary>
            Gets or sets Alias for this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Language">
            <summary>
            Gets or sets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.LexiconType">
            <summary>
            Gets or sets LexiconType.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Status">
            <summary>
            Gets or sets Status of the lexicon item
            When loading, if it is "deleted", it means this item is deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Origin">
            <summary>
            Gets or sets Origin of the lexicon item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Pronunciations">
            <summary>
            Gets Pronunciations.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.Parent">
            <summary>
            Gets or sets It is used to record its parent Lexicon instance in offline dll
            Or to record its partent LexiconDocument instance in lexicon reviewer.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalItem.CacheValue">
            <summary>
            Gets lexicon item cache value.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.ILexicon">
            <summary>
            Lexicon interface.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.ILexicon.Lookup(System.String)">
            <summary>
            Search for item according to grapheme.
            </summary>
            <param name="grapheme">Graphme of the word to lookup.</param>
            <returns>Lexicon item found, null if not.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.ILexicon.Items">
            <summary>
            Gets Items the lexicon has.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.Lexicon">
            <summary>
            Lexicon.
            </summary>
            <example>
            <code lang="C#" title="The following code example demonstrates the usage of Lexicon class.">
            Using System;
            Using System.Collections.Generic;
            Using System.Text;
            Using Microsoft.Tts.Offline;
            Using Microsoft.Tts.Offline.Utility;
            Using Microsoft.Tts.Offline.Core;
            Namespace FrameworkSample
            {
                class Program
                {
                    private static void Main(string[] args)
                    {
                        Lexicon lexicon = new Lexicon();
                        lexicon.Load(@"\\tts\ShanHai\TTSData\ttsdata\en-GB\Language\TAData\Lexicon\lexicon.xml");
                        foreach (LexicalItem item in lexicon.Items.Values)
                        {
                            StringBuilder sb = new StringBuilder();
                            sb.AppendLine(Helper.NeutralFormat("WordText={0}", item.Grapheme));
                            foreach (LexiconPronunciation pron in item.Pronunciations)
                            {
                                sb.AppendLine(Helper.NeutralFormat("\tPron={0}", pron.Symbolic));
                                foreach (LexiconItemProperty property in pron.Properties)
                                {
                                    sb.Append(Helper.NeutralFormat("\t\tPOS={0}", property.PartOfSpeech.Value));
                                    foreach (string attrName in property.AttributeSet.Keys)
                                    {
                                        sb.AppendFormat(",{0}={1}", attrName, property.AttributeSet[attrName]);
                                    }
                                    sb.AppendLine();
                                }
                            }
                            Console.WriteLine(sb.ToString());
                        }
                        lexicon.Save(@"D:\lexicon.xml");
                    }
                }
            }.
            </code>
            </example>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Lexicon._domainTag">
            <summary>
            This field is case insensitive.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.Lexicon"/> class.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.Lexicon"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.WriteAllData(System.String,Microsoft.Tts.Offline.Core.Lexicon,System.Text.Encoding)">
            <summary>
            Write all lexicon information into file.
            </summary>
            <param name="lexiconFilePath">The location of the target lexicon to write.</param>
            <param name="lexicon">Lexicon information to write out.</param>
            <param name="encoding">Encoding of the lexicon file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ReadAllData(System.String)">
            <summary>
            Read all lexicon items from XML lexicon file.
            </summary>
            <param name="lexiconFilePath">XML lexicon filepath.</param>
            <returns>Lexicon.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.CreateFromXmlScriptFile(Microsoft.Tts.Offline.XmlScriptFile,System.String,Microsoft.Tts.Offline.Core.Lexicon)">
            <summary>
            Create the lexicon from Xml Script file.
            </summary>
            <param name="scriptFile">Xml script file.</param>
            <param name="defaultPos">Part of Speech String.</param>
            <param name="mainLexicon">MainLexicon.</param>
            <returns>Lexicon.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.Validate(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.TtsPosSet)">
            <summary>
            Validate Lexicon according to pos set and phone set.
            </summary>
            <param name="ttsPhoneSet">TTS phone set.</param>
            <param name="ttsPosSet">TTS POS set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.Validate(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Validate Lexicon according to phone set and lexical attribute schema.
            </summary>
            <param name="ttsPhoneSet">TTS phone set.</param>
            <param name="attributeSchema">TTS attribute schema.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.Lookup(System.String,System.Boolean)">
            <summary>
            Lookup lexicon item for grapheme. If ignoring case, only below types of 
            Graphme will be searched:
            1. original grapheme
            2. all letter in grapheme in upper case
            3. all letter in grapheme in lower case
            4. In Pascal style: first letter is in upper case and rest letters are in lower case.
            </summary>
            <param name="grapheme">Graphme of the word.</param>
            <param name="ignoreCase">Ignore the case of the graphme.</param>
            <returns>Lexicon item found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ExtractSubLexicon(System.Collections.Generic.List{System.String})">
            <summary>
            Extract a sub lexicon from a word list.
            </summary>
            <param name="words">Words list to extract.</param>
            <returns>New sub lexicon.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ExtractSubLexicon(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Extract a sub lexicon from a word list and return those words which not in the main lexicon.
            </summary>
            <param name="words">Words list to extract.</param>
            <param name="missedLexWords">Words that not in the main lexicon.</param>
            <returns>New sub lexicon.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ListWords">
            <summary>
            List all words in the lexicon.
            </summary>
            <returns>Word list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ListPhones">
            <summary>
            List all of the phone frequency in this lexicon. No validation of phone is performed.
            </summary>
            <returns>Sorted phone listed with frequency.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ListPoses">
            <summary>
            List all of the POS frequency in this lexicon. No validation of POS is performed.
            </summary>
            <returns>Sorted POS listed with frequency.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.SaveToVendorLexicon(System.String)">
            <summary>
            Save the Lexicon into vendor Lexicon for BldVendor2.
            Should use Validate(PhoneSet, LexicalAttributeSchema) first.
            Will skip the error data.
            </summary>
            <param name="vendorLexiconFileName">Name of vendor lexicon.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.GetPronunciationForWords(System.String,System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.String},System.String@)">
            <summary>
            Get lexicon pronunciation for words (separated by spaces).
            </summary>
            <param name="expansion">Expansion.</param>
            <param name="errors">Errors met.</param>
            <param name="polyWord">Polyphone words met.</param>
            <param name="pron">Pron.</param>
            <returns>Whether has error.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.SaveToVendor1Lex(System.String)">
            <summary>
            Save the Lexicon into vendor 1 Lexicon for bldVendor1.
            Should use Validate(PhoneSet, LexicalAttributeSchema) first.
            Will skip the error data.
            </summary>
            <param name="vendorLexFileName">Name of vendor lexicon.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ImportDomainLexicon(Microsoft.Tts.Offline.Core.Lexicon,System.Boolean)">
            <summary>
            Import domain lexicon into current lexicon.
            </summary>
            <param name="domainLex">Domain lexicon.</param>
            <param name="trustDomainLexicon">Whether domain lexion is trusting.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.SplitIntoDomainLexicons(Microsoft.Tts.ServiceProvider.ServiceProvider,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Split unified lexicon into domain lexicons.
            </summary>
            <param name="sp">ServiceProvider.</param>
            <param name="errorSet">The errorset.</param>
            <returns>Domain Lexicon array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ToNewAttributeFormatLexicon">
            <summary>
            Convert to new attribute format lexicon.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.Validate">
            <summary>
            Validate function.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.Lookup(System.String)">
            <summary>
            Lookup lexicon item for grapheme.
            </summary>
            <param name="grapheme">Grapheme of the word.</param>
            <returns>Lexicon item found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load XML file.
            </summary>
            <param name="xmlDoc">XmlDoc.</param>
            <param name="nsmgr">Nsmgr.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Save lexicon into Xml writer.
            </summary>
            <param name="writer">Writer file to save into.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ValidateDomainLexicon(Microsoft.Tts.Offline.Core.Lexicon)">
            <summary>
            Validate domain lexicon, and check whether it only contains one domain tag.
            </summary>
            <param name="domainLex">Domain Lexicon.</param>
            <returns>Whether valid.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.LoadLexicalItem(Microsoft.Tts.Offline.Core.Lexicon,System.Xml.XmlNode,System.Xml.XmlNamespaceManager,Microsoft.Tts.Offline.Core.Lexicon.ContentControler)">
            <summary>
            Load LexicalItem from XmlNode.
            </summary>
            <param name="parentLexicon">Lexicon.</param>
            <param name="wordNode">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
            <param name="contentController">Object.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.Validate(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.TtsPosSet,Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Validate Lexicon according to TTS phone set and pos set or lexical attribute schema.
            </summary>
            <param name="ttsPhoneSet">TTS phone set.</param>
            <param name="ttsPosSet">TTS POS set.</param>
            <param name="attributeSchema">Lexical attribute Schema.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.SavePronunciation(System.IO.TextWriter,System.String,Microsoft.Tts.Offline.Core.LexicalItem)">
            <summary>
            Save pronunciations.
            </summary>
            <param name="tw">Text writer.</param>
            <param name="graphme">Word graphme.</param>
            <param name="lexItem">Lexicon items.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.SaveProperty(System.String,Microsoft.Tts.Offline.Core.LexiconPronunciation,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Save lexicon properties.
            </summary>
            <param name="graphme">Word graphme.</param>
            <param name="lexPron">Lexicon pronunciation.</param>
            <param name="attributeStringList">Attribute string list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.BuildAttributeStringList(System.Collections.ObjectModel.Collection{System.String},System.String,System.Collections.ArrayList[],System.Int32)">
            <summary>
            Build the attribute string list.
            </summary>
            <param name="attributeStringList">Attribute strings.</param>
            <param name="previousString">Previous string.</param>
            <param name="attributes">Attributes.</param>
            <param name="index">Index of the next attribute.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.FillDomainLexicalItem(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Core.Lexicon},System.String,Microsoft.Tts.Offline.Core.LexicalItem)">
            <summary>
            Add domain specified LexicalItem into dictionary.
            </summary>
            <param name="domainLexicons">Dictionary.</param>
            <param name="domainTag">Domain tag.</param>
            <param name="lexItem">LexicalItem.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.ArePronsSameForAllDomains(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Core.LexicalItem})">
            <summary>
            Check pronunciation in different LexicalItem has same pronunciation text.
            </summary>
            <param name="domainLexItems">Domain LexicalItem dictionary.</param>
            <returns>Whether same.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.GetAllDomainsCountInfo">
            <summary>
            Get dictionary about all domains information
            Key is domain name and value is domain count.
            </summary>
            <returns>Dictionary about domain information.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.Lexicon.CheckGeneralPronExist(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Core.LexicalItem},Microsoft.Tts.Offline.Common.ErrorSet,System.String)">
            <summary>
            Check if the pronunciation for general domain exist.
            We check general domain pronunciation to avoid the case that word have address domain pronunciation, but got LTSed in general domain.
            </summary>
            <param name="domainLexItems">Domain lexiconItems.</param>
            <param name="errorSet">The errorSet.</param>
            <param name="word">The current word.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.DomainTag">
            <summary>
            Gets or sets Lexicon domain.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.Items">
            <summary>
            Gets Items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.Schema">
            <summary>
            Gets Schema of lexicon.xml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.PhoneSet">
            <summary>
            Gets or sets TTS phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.PosSet">
            <summary>
            Gets or sets TTS POS set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.LexicalAttributeSchema">
            <summary>
            Gets or sets Lexical Attribute Schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.BaseLexiconRelativeFilePath">
            <summary>
            Gets or sets base lexicon relative file path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.Lexicon.LexiconStatus">
            <summary>
            LexiconStatus.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Lexicon.LexiconStatus.Original">
            <summary>
            Original state.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Lexicon.LexiconStatus.Changed">
            <summary>
            Changed state.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Lexicon.LexiconStatus.Deleted">
            <summary>
            Deleted state.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Lexicon.LexiconStatus.Added">
            <summary>
            Added state.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Lexicon.LexiconStatus.Checked">
            <summary>
            Checked state.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.Lexicon.LexiconOrigin">
            <summary>
            LexiconOrigin.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Lexicon.LexiconOrigin.Current">
            <summary>
            Current origin, also known as sibling.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.Lexicon.LexiconOrigin.Baseline">
            <summary>
            Baseline origin.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.Lexicon.ContentControler">
            <summary>
            Lexicon content controler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.ContentControler.IsCaseSensitive">
            <summary>
            Gets or sets a value indicating whether case sensitive.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.ContentControler.IsHistoryCheckingMode">
            <summary>
            Gets or sets a value indicating whether Speicfy that all lexicon change history need be kept.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.Lexicon.ContentControler.DontSaveBaselineLexicon">
            <summary>
            Gets or sets a value indicating whether save baseline lexicon items as well.
            True : don't save baseline origin lexicon items.
            False: save baseline origin lexicon items.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.WordEntryError">
            <summary>
            Word entry error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.WordEntryError.EmptyWord">
            <summary>
            Empty word entry or word only contain space or tab.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.WordEntryError.LeadingOrTrailingSpace">
            <summary>
            Word with leading or trailing space.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.WordEntryError.ContainingTabOrMultipleSpaces">
            <summary>
            Word containing Tab or multiple spaces.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexiconError">
            <summary>
            Lexicon error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.DuplicateWordEntry">
            <summary>
            Duplicate word entry.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.PronunciationError">
            <summary>
            Pronunciation error
            Phones should be separated by whitespace and in phone set.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.DuplicatePronunciationNode">
            <summary>
            Duplicate pronunciation node.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.NewDomainPronunciation">
            <summary>
            Pronunciation is a new one for unified lexicon when import from domain lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.UnrecognizedPos">
            <summary>
            Unrecognized POS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.DuplicateProperty">
            <summary>
            Duplicate POS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.InvalidWordEntry">
            <summary>
            Invalid word entry: nested error with WordEntryError.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.CaseError">
            <summary>
            Case error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.GenderError">
            <summary>
            Gender error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.NumberError">
            <summary>
            Number error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.DomainError">
            <summary>
            Domain error
            Parameters:
            {0}: Nested error
            {1}: word
            {2}: pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.AttributeError">
            <summary>
            Attribute error
            Parameters:
            {0}: Nested error
            {1}: word
            {2}: pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.InvalidDependentData">
            <summary>
            Invalid Dependent Data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.EmptyLexicon">
            <summary>
            Empty lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.MixedPropertyDefinition">
            <summary>
            Mixed property definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconError.LackGeneralDomainPronError">
            <summary>
            Lack of pronunciation for general domain.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexiconCompilerError">
            <summary>
            Lexicon Compiler error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconCompilerError.RemoveInvalidWord">
            <summary>
            Remove invalid word
            Parameters:
            {0}: word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconCompilerError.RemoveInvalidPronunciation">
            <summary>
            Remove invalid pronunciation
            Parameters:
            {0}: word
            {1}: pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexiconCompilerError.RemoveInvalidProperty">
            <summary>
            Remove invalid property
            Parameters:
            {0}: word
            {1}: pronunciation
            {2}: part of speech.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexicalItemError">
            <summary>
            Lexical item error defenition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalItemError.MoreThanOnePreferedPronOfSpecificDomain">
            <summary>
            More than one perfered pronunciation of specific domain.
            Parameters:
            {0}: pronunciation string
            {1}: domain name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexicalAttribute">
            <summary>
            Lexical Attribute which are defined in Lexical Attribute schema.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexicalAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexicalAttribute"/> class.
            </summary>
            <param name="category">Category.</param>
            <param name="value">Value.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalAttribute.Category">
            <summary>
            Gets Category name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.LexicalAttribute.Value">
            <summary>
            Gets Value name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexicalAttributeError">
            <summary>
            Word entry error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeError.EmptyCategory">
            <summary>
            Empty category.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeError.EmptyValue">
            <summary>
            Empty value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeError.InvalidCategory">
            <summary>
            Invalid category
            Parameters:
            {0}: category.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeError.InvalidValue">
            <summary>
            Invalid category
            Parameters:
            {0}: value
            {1}: category.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.LexicalAttributeError.InvalidDefinitionForPos">
            <summary>
            Invalid Definition For Pos
            Parameters:
            {0}: pos value.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.LexiconSearcher">
            <summary>
            LexiconSearcher handle all the lexicon searching features.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconSearcher.#ctor(Microsoft.Tts.Offline.Core.Lexicon)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.LexiconSearcher"/> class.
            </summary>
            <param name="lex">Host lexicon.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconSearcher.Search(System.String)">
            <summary>
            Search with case insensitive.
            </summary>
            <param name="graphme">The praphme.</param>
            <returns>The lexical item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.LexiconSearcher.SearchProns(System.String,System.String)">
            <summary>
            SearchProns with case insensitive.
            </summary>
            <param name="graphme">The graphme.</param>
            <param name="pos">The pos parameter.</param>
            <returns>Lexicon pronunciation.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.WordList">
            <summary>
            Word list class, it is composed of word list line, each line is a WordListItem.
            <example>
             to   7973445 0.0687747986353419 Examples: Turn right on to Factoria Blvd SE
             on   7477083 0.133268236252926  Examples: Turn right on to Factoria Blvd SE
             right    5465478 0.180410613092033  Examples: Turn right on to Factoria Blvd SE
             Turn 5404304  0.227025334754272  Examples: Turn left onto Alexander St.
            </example>
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordList.LoadWordListFromScriptDir(System.String)">
            <summary>
            Load WordList from script folder.
            </summary>
            <param name="sourceDir">Source script folder.</param>
            <returns>WordList.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordList.LoadWordListFromWordListFile(System.String)">
            <summary>
            Load WordList from word list file.
            </summary>
            <param name="sourceFilePath">Source word list file path.</param>
            <returns>WordList.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordList.ImportWordList(Microsoft.Tts.Offline.Core.WordList)">
            <summary>
            Import word list.
            </summary>
            <param name="otherWordList">Other word list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordList.Save(System.String,System.Boolean)">
            <summary>
            Save function.
            </summary>
            <param name="targetFilePath">Target file path.</param>
            <param name="resetFcs">Whether reset fcs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordList.Save(System.String)">
            <summary>
            Save function.
            </summary>
            <param name="targetFilePath">Target file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordList.GetHighFrequencyWords(System.Double)">
            <summary>
            Get high frequency words with fcs corpus coverage.
            </summary>
            <param name="fcs">Fcs for filter words.</param>
            <returns>Word list in which the word fcs is less than or equal to specified fcs.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordList.Sort">
            <summary>
            Sort word list by frequency.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordList.ResetFcs">
            <summary>
            Set fcs in all words.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.WordList.ErrorSet">
            <summary>
            Gets Error set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.WordList.Words">
            <summary>
            Gets Words.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.WordListItem">
            <summary>
            WordListItem class
            It represents a line in wordlist.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.WordListItem"/> class.
            </summary>
            <param name="grapheme">Grapheme.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.WordListItem"/> class.
            </summary>
            <param name="grapheme">Grapheme.</param>
            <param name="frequency">Frequency.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.ParseLine(System.String)">
            <summary>
            Parse one line in word list file.
            </summary>
            <param name="line">Line in word list file.</param>
            <returns>WordListItem.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.IsValidGrapheme(System.String)">
            <summary>
            Check whether grapheme is valid.
            For example:
            We needn't put pure digits or pure symbols such as ",", "123" into word list.
            Word with number (such as Win7) is also invaid, because it should be handled by TN pattern. 
            Word with symbol (such as it's ad-Hoc) is valid. 
            </summary>
            <param name="grapheme">Grapheme.</param>
            <returns>Whether valid.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.ToString">
            <summary>
            Return a line string in word list.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.GetDescription">
            <summary>
            Return word list item description in word list.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.IsOovWord">
            <summary>
            Whether this word is an OOV word.
            </summary>
            <returns>If the word is oov.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.IsAmbiguousWord">
            <summary>
            Whether this word is an ambiguous word,
            Including more than one pronunciation whose stress and syllable are removed.
            </summary>
            <returns>If the word is an ambiguous word.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.AddExample(System.String,System.String)">
            <summary>
            Add example.
            </summary>
            <param name="word">Key word, case sensitvie.</param>
            <param name="example">Example.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.ImportExamples(Microsoft.Tts.Offline.Core.WordListItem)">
            <summary>
            Import examples from another word list item.
            </summary>
            <param name="otherItem">Another word list item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.WordListItem.GetSubstring(System.String,System.String,System.String)">
            <summary>
            Extract middle string between start and end.
            </summary>
            <param name="source">Source sentence.</param>
            <param name="start">Start.</param>
            <param name="end">End.</param>
            <returns>Extract string.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.WordListItem.Frequency">
            <summary>
            Gets or sets Word frequency.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.WordListItem.Fcs">
            <summary>
            Gets or sets Accumulated corpus coverage.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.WordListItem.Grapheme">
            <summary>
            Gets or sets Word grapheme
            It's case insenstive. Always in lower case.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.WordListItem.Examples">
            <summary>
            Gets Exmaples extracted from script.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.WordListItem.Comment">
            <summary>
            Gets or sets Comment including Frequency, FCS, Examples, Pronunciations in one line.
            When this property is set, save function will only save Grapheme + Comment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.WordListItem.PronSources">
            <summary>
            Gets Pronunciation sources.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.WordListItem.Pronunciations">
            <summary>
            Gets All pronunciations and corresponding frequency for this word.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.WordListError">
            <summary>
            Script processpr error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.WordListError.InvalidFormatInWordListFileError">
            <summary>
            Invalid format in word list line.
            Parameters: 
            {0}: line id
            {1}: file path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.WordListError.DuplicateWordInWordListFileError">
            <summary>
            Duplicate word in word list.
            Parameters: 
            {0}: line id
            {1}: file path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TruncateSide">
            <summary>
            Truncate phone on which side of the pronunciation string, to make
            The remaining phone sequence in the slice table.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TruncateSide.Left">
            <summary>
            Left side of the pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.TruncateSide.Right">
            <summary>
            Right side of the pronunciation.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.SliceType">
            <summary>
            Slice type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SliceType.Onset">
            <summary>
            Onset slice type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SliceType.Nucleus">
            <summary>
            Nucleus slice type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SliceType.Coda">
            <summary>
            Coda slice type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.SliceType.Special">
            <summary>
            Special slice type.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TruncateRule">
            <summary>
            Definition of necleus truncate rule.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TruncateRule.#ctor(Microsoft.Tts.Offline.TruncateSide,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TruncateRule"/> class.
            </summary>
            <param name="side">Truncate side.</param>
            <param name="phones">Phones string to truncate.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.TruncateRule.Phones">
            <summary>
            Gets or sets Phones, scope condition for this rule to apply.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TruncateRule.Side">
            <summary>
            Gets or sets Side, indicate which side(left/right) to apply this rule.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TruncateRuleData">
            <summary>
            Truncate rule data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TruncateRuleData.Load(System.String)">
            <summary>
            Load slice data from file.
            </summary>
            <param name="filePath">Truncate rule data file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TruncateRuleData.Load(System.IO.StreamReader)">
            <summary>
            Load unit table from stream.
            </summary>
            <param name="reader">Stream to read from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TruncateRuleData.ParseTruncateRules(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Load truncation rules from XML format for 'tts' namespace.
            </summary>
            <param name="truncateRulesNode">Xml node of truncation rules.</param>
            <param name="nsmgr">Namespace of the truncation rules.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TruncateRuleData.SaveTruncateRules(System.String)">
            <summary>
            Save truncation rules into given file.
            </summary>
            <param name="filePath">The location of the target file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TruncateRuleData.SaveTruncateRules(System.Xml.XmlWriter)">
            <summary>
            Save truncation rules into Xml writer.
            </summary>
            <param name="writer">Xml writer to write out truncation rules.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.TruncateRuleData.NucleusTruncateRules">
            <summary>
            Gets Since the size of core nucleus set is always limited, so we need 
            Truncate phone into a core nucleus slice plus other marginal 
            Mono-phones
             [sonorant *] core nucleus slice [sonorant *]
            <param />
            The rule will guide what kind of phone to truncate, and how it is 
            Truncated, like left-side first or right-side first.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TruncateRuleData.Language">
            <summary>
            Gets or sets Language of the truncate rule.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.SliceData">
            <summary>
            This syllable can be abstracted as a consonant-vowel-consonant
            Syllable, abbreviated CVC.In the one-syllable English word cat, 
            The nucleus is a, the onset c, the coda t, and the rime at. 
            <param />
            The basic idea of defining slice is to join some phone clusters, 
            Which are not easy to be separated or frequently used, into one unit.
            Such a joining operation is bounded to syllable boundaries. 
            <param />
            Slice is a set of atom units with the size between phone and syllable.
            <param />
            Here to address the problem, combining those phones hard to 
            Be separated or frequently used.
                [sonorant *] xx [sonorant *]
                xx denotes a vowel.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.ToSliceData(Microsoft.Tts.Offline.Language,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Convert this unit to slide data.
            </summary>
            <param name="language">Language of the Slice data.</param>
            <param name="unitFullNames">Full unit name collections.</param>
            <returns>Converted result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.BuildFullUnitName(System.String,Microsoft.Tts.Offline.SliceType)">
            <summary>
            Convert slice to full unit name.
            </summary>
            <param name="slice">
                Slice string should be the same format with the ones in array:
                    _nucleusTruncateRules, _unsetTruncateRules, _codaTruncateRules.
                For example : a+t1+b
                The slice contains phone and tone.
            </param>
            <param name="type">Slice Type.</param>
            <returns>Full unit name.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.SaveUnitTable(System.String)">
            <summary>
            Save Unit table into given file.
            </summary>
            <param name="filePath">The location of the target file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.SaveUnitTable(System.Xml.XmlWriter)">
            <summary>
            Save unit table into Xml writer.
            </summary>
            <param name="writer">Xml writer to write out unit table.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.IsEmpty">
            <summary>
            Indicating whether the unit list is empty.
            </summary>
            <returns>Whether the unit list is empty.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.Load(System.String)">
            <summary>
            Load offline language configuration file if UnitTable or TruncateRules exist.
            </summary>
            <param name="filePath">The location of the source file to load from.</param>
            <returns>Whether unit table loaded succesfully.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.Load(System.IO.StreamReader)">
            <summary>
            Load unit table from stream.
            </summary>
            <param name="reader">Stream to read from.</param>
            <returns>Whether unit table loaded succesfully.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.ParseUnitTable(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Load unit table from XML format for 'tts' namespace.
            </summary>
            <param name="unitTableNode">Unit table node to parse.</param>
            <param name="nsmgr">Namespace manager to look up during parsing.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.ParseUnit(System.String)">
            <summary>
            Parse unit full name.
            </summary>
            <param name="unitFullName">Unit full name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.IsNucleus(Microsoft.Tts.Offline.TtsMetaUnit)">
            <summary>
            Tell a slice is nucleus, through checking whether
            1) phone sequence already exists in the nucleus set
            2) or there is any vowel in the phone set.
            </summary>
            <param name="ttsMetaUnit">TtsMetaUnit to test.</param>
            <returns>Ture if yes, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.ParseUnit(System.String,System.String,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Parse unit.
            </summary>
            <param name="name">Name of unit.</param>
            <param name="prefix">Prefix with unit name.</param>
            <param name="units">Container of the result unit.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.SaveUnit(System.Xml.XmlWriter,System.Collections.ObjectModel.Collection{System.String},System.String)">
            <summary>
            Save unit out into writer.
            </summary>
            <param name="writer">Xml writer to write out unit.</param>
            <param name="units">Unit collection to write.</param>
            <param name="prefix">Prefix for these units.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.SliceData.ParseSingleTokenUnit(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse single token unit.
            </summary>
            <param name="unitTableNode">Unit table node to read data from.</param>
            <param name="nsmgr">Namespace managemer to parse the data.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.SliceData.Language">
            <summary>
            Gets or sets Language of this slice data for.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SliceData.OnsetSlices">
            <summary>
            Gets Onset slice set
            The syllable onset is the sound or sounds occurring
            Before the nucleus.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SliceData.NucleusSlices">
            <summary>
            Gets Nucleus slice set
            The syllable nucleus is typically a sonorant, usually a vowel sound, 
            In the form of a monophthong, diphthong, or triphthong, 
            But sometimes sonorant consonants like [l] or [r].
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SliceData.CodaSlices">
            <summary>
            Gets Coda slice set
            The syllable coda (literally 'tail') is the sound or sounds 
            That follow the nucleus. 
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SliceData.OnsetSlicesFullName">
            <summary>
            Gets Onset slice full name list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SliceData.NucleusSlicesFullName">
            <summary>
            Gets Nucleus slice full name list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SliceData.CodaSlicesFullName">
            <summary>
            Gets Coda slice full name list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SliceData.SpecialSlices">
            <summary>
            Gets Special slice, sometimes to address a special problem, 
            Like reading letters or common English word in non-English language,
            It would be fine to build a certain set of special units to 
            Cover those issure.
            <param />
            <example>
                Letters.
            </example>
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ArrayHelper">
            <summary>
            Array helper class, some static function to help user to convert array types. 
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.BinaryConvertArray(System.Int16[])">
            <summary>
            Convert short[] to Byte[] in memory order
            Like Marshal buffer copy.
            </summary>
            <param name="from">Source array to convert.</param>
            <returns>Result byte array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.BinaryConvertArray(System.Byte[])">
            <summary>
            Convert Byte[] to short[] in memory order.
            Like Marshal buffer copy.
            </summary>
            <param name="from">Source array to convert.</param>
            <returns>Result short array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.ToInt32``1(``0[],System.Int32)">
            <summary>
            Convert a T1[] to int[], T1 must have implemented IConvertible,
            The size of from must be bigger then size.
            </summary>
            <typeparam name="T1">Type of parameter.</typeparam>
            <param name="from">Source array to convert.</param>
            <param name="size">Size of the source array.</param>
            <returns>Result int array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.ToInt32``1(``0[])">
            <summary>
            Convert a T1[] to int[], T1 must have implemented IConvertible.
            </summary>
            <typeparam name="T1">Type of parameter.</typeparam>
            <param name="from">Source array to convert.</param>
            <returns>Result byte array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.ToSingle``1(``0[],System.Int32)">
            <summary>
            Convert a T1[] to Single[], T1 must have implemented IConvertible,
            The size of from must be bigger then size.
            </summary>
            <typeparam name="T1">Type of parameter.</typeparam>
            <param name="from">Source array to convert.</param>
            <param name="size">Size of the source array.</param>
            <returns>Result Single float array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.ToSingle``1(``0[])">
            <summary>
            Convert a T1[] to Single[], T1 must have implemented IConvertible.
            </summary>
            <typeparam name="T1">Type of parameter.</typeparam>
            <param name="from">Source array to convert.</param>
            <returns>Result Single float array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.ToInt16``1(``0[],System.Int32)">
            <summary>
            Convert a T1[] to ToInt16[], T1 must have implemented IConvertible,
            The size of from must be bigger then size.
            </summary>
            <typeparam name="T1">Type of parameter.</typeparam>
            <param name="from">Source array to convert.</param>
            <param name="size">Size of the source array.</param>
            <returns>Result short float array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.ToInt16``1(``0[])">
            <summary>
            Convert a T1[] to ToInt16[], T1 must have implemented IConvertible.
            </summary>
            <typeparam name="T1">Type of parameter.</typeparam>
            <param name="from">Source array to convert.</param>
            <returns>Result short float array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.BytesAlign(System.Byte[],System.Int32)">
            <summary>
            Performce n-bye alignment on the given memory block.
            The n is specified by the unit size.
            </summary>
            <param name="data">Byte array to be aligned to.</param>
            <param name="unitSize">Aling unit size.</param>
            <returns>Aligned byte array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.Append``1(``0[],``0[])">
            <summary>
            Append values to the current array.
            </summary>
            <param name="array">Array to be appended.</param>
            <param name="items">Items to append.</param>
            <returns>Append result array.</returns>
            <typeparam name="T">Type of elements.</typeparam>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArrayHelper.Insert``1(``0[],System.Int32,``0[])">
            <summary>
            Insert values to the current array.
            </summary>
            <param name="array">Array to be inserted.</param>
            <param name="position">Insert position.</param>
            <param name="items">Items to insert.</param>
            <returns>Insert result array.</returns>
            <typeparam name="T">Type of elements.</typeparam>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ExitCode">
            <summary>
            Define the Error Number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.NoError">
            <summary>
            No Error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.CloseError">
            <summary>
            CloseError: ({targetname}:{type}) �{reason}�.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.InvalidArgument">
            <summary>
            InvalidArgument: ({targetname}:{type}) [{action}], �{reason}�.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.InvalidData">
            <summary>
            InvalidData: ({targetname}:{type}) [{action}], '{reason}'.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.InvalidOperation">
            <summary>
            InvalidOperation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.InvalidType">
            <summary>
            InvalidType.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.OpenError">
            <summary>
            OpenError.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.OperationTimeout">
            <summary>
            OperationTimeout.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.ParseError">
            <summary>
            ParseError .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.ReadError">
            <summary>
            ReadError.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.WriteError">
            <summary>
            WriteError.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ExitCode.GenericError">
            <summary>
            Others.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ExitCode.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ExitCode"/> class from being created.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.CommandLine">
            <summary>
            Class to handle command relative task.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.CommandLine._processStartLock">
            <summary>
            Lock object to protect Process.Start.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommand(System.String,System.String,System.String)">
            <summary>
            Run command in shell without retrieve the output of the target process.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="workingDirectory">Working directory.</param>
            <returns>True for return zero or not.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommand(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Run command line with given parameters.
            CreateNoWindow is true; RedirectStandardOutput is false; RedirectStandardError is false.
            </summary>
            <param name="command">Command line to be executed.</param>
            <param name="arguments">Command line argument.</param>
            <param name="useShellExecute">Whether use shell to execute.</param>
            <param name="waitDone">Indicates whether waiting for target process exiting.</param>
            <param name="workingDirectory">Working direcotry.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommandAsync(System.String,System.String,System.String)">
            <summary>
            Run command in shell without retrieve the output of the target process.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="workingDirectory">Working directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommandToFile(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Run command in shell without retrieve the output of the target process.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="standardOutputFileName">File path to redirect standard output for.</param>
            <param name="append">Append mode or not.</param>
            <param name="workingDirectory">Working directory.</param>
            <returns>Extern application return code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommandToFile(System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Run command in shell without retrieve the output of the target process.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="standardOutputFileName">File path to redirect standard output for.</param>
            <param name="errorOutputFileName">File path to redirect standard error output for.</param>
            <param name="append">Append mode or not.</param>
            <param name="workingDirectory">Working directory.</param>
            <returns>Extern application return code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.SuccessRunCommand(System.String,System.String,System.String)">
            <summary>
            Run command in shell.
            If exitcode is not zero, it will throw exception.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="workingDirectory">Working directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommandWithOutput(System.String,System.String,System.String)">
            <summary>
            Run command in shell, and retrieve the output of the target process.
            If exitcode is not zero, it will throw exception and without output.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="workingDirectory">Working directory.</param>
            <returns>Output string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommandWithOutputAndError(System.String,System.String,System.String,System.String@)">
            <summary>
            Run command in shell, and retrieve the output and error of the target process.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="workingDirectory">Working directory.</param>
            <param name="log">Log including output and error.</param>
            <returns>Exit code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommand(System.String,System.String,System.Threading.WaitHandle,System.String)">
            <summary>
            Run command line with exit event to control exit.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="exitEvent">Event to terminate the extern application.</param>
            <param name="workingDirectory">Working directory.</param>
            <returns>True if extern application return 0, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommand(System.String,System.String,System.String,System.IO.TextWriter,System.IO.TextWriter,System.Threading.WaitHandle)">
            <summary>
            Command line runner, this fuction will redirect process output to console.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="workingDirectory">Working directory.</param>
            <param name="standardOutput">Standard output writer.</param>
            <param name="standardError">Error output writer.</param>
            <param name="exitEvent">Event to terminate the extern application.</param>
            <returns>Extern application return code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommand(System.String,System.String,System.String,System.Text.Encoding,System.Text.Encoding,System.IO.TextWriter,System.IO.TextWriter,System.Threading.WaitHandle,System.Boolean)">
            <summary>
            Command line runner, this fuction will redirect process output to console.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="workingDirectory">Working directory.</param>
            <param name="standardOuputEncoding">Standard output encoding.</param>
            <param name="standardErrorEncoding">Standard error encoding.</param>
            <param name="standardOutput">Standard output writer.</param>
            <param name="standardError">Error output writer.</param>
            <param name="exitEvent">Event to terminate the extern application.</param>
            <param name="keepBlankLog">Whether keep blank line log.</param>
            <returns>Extern application return code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.ThrowExceptionForInvalidExitCode(System.String,System.String,System.Int32)">
            <summary>
            Throw exception if exit code is not zero.
            </summary>
            <param name="command">Command.</param>
            <param name="arguments">Arguments.</param>
            <param name="exitCode">Exit code.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLine.RunCommandHelper(System.String,System.String,System.String,System.Diagnostics.DataReceivedEventHandler,System.Diagnostics.DataReceivedEventHandler,System.EventHandler,System.Text.Encoding,System.Text.Encoding)">
            <summary>
            Asynchronously command line runner helper.
            </summary>
            <param name="command">Command to run.</param>
            <param name="arguments">Argument string.</param>
            <param name="workingDirectory">Working directory.</param>
            <param name="outputDataReceviedHandle">Normal output data reveiver.</param>
            <param name="errorDataReceviedHandle">Error output data reveiver.</param>
            <param name="exitedHandle">Event to terminate the extern application.</param>
            <param name="outputEncoding">Output encoding.</param>
            <param name="errorEncoding">Error encoding.</param>
            <returns>Process created.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.InOutType">
            <summary>
            Attribute type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.InOutType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.InOutType.In">
            <summary>
            Argument for input.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.InOutType.Out">
            <summary>
            Argument for output.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.InOutType.InOut">
            <summary>
            Argument for input or output, not recommend use.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.CommentAttribute">
            <summary>
            This custom attribute used to add a comment in the usage printing.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommentAttribute"/> class.
            </summary>
            <param name="headComment">Head comment.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommentAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommentAttribute"/> class.
            </summary>
            <param name="headComment">Head comment.</param>
            <param name="rearComment">Rear comment.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.CommentAttribute.HeadComment">
            <summary>
            Gets Head comment, when printing usage.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.CommentAttribute.RearComment">
            <summary>
            Gets Rear comment, when printing usage.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ArgumentAttribute">
            <summary>
            This custom attribute used to mark the which field in a class is a command line input target.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArgumentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ArgumentAttribute"/> class.
            </summary>
            <param name="optionName">Flag string for this attribute.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArgumentAttribute.GetRequiredModeArray">
            <summary>
            Get required modes in an array.
            </summary>
            <returns>Mode array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ArgumentAttribute.GetOptionalModeArray">
            <summary>
            Get optional modes in an array.
            </summary>
            <returns>Mode array.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ArgumentAttribute.OptionName">
            <summary>
            Gets The parse recognising flag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ArgumentAttribute.Description">
            <summary>
            Gets or sets Description will display in the PrintUsage method.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ArgumentAttribute.UsagePlaceholder">
            <summary>
            Gets or sets In the PrintUsage method this will display a place hold for a parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ArgumentAttribute.Optional">
            <summary>
            Gets or sets a value indicating whether (optional = true) means not necessarily in the command-line.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ArgumentAttribute.Hidden">
            <summary>
            Gets or sets a value indicating whether (Hidden = true) means this option will not be printed in the command-line.
            While one option is set with Hidden, the Optional must be true.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ArgumentAttribute.InOutType">
            <summary>
            Gets or sets The in/out type of argument.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ArgumentAttribute.RequiredModes">
            <summary>
            Gets or sets The modes require this argument.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ArgumentAttribute.OptionalModes">
            <summary>
            Gets or sets The modes optionally require this argument.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.CommandLineParseException">
            <summary>
            When the CommandLineParser meet an unacceptabile command line
            Parameter, it will throw the CommandLineParseException. If the
            CLP meet another arguments error by anaylse the target object,
            It will throw the ArgumentException defined by .NET framework.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.CommandLineParseException.ErrorStringHelp">
            <summary>
            The error string is "help".
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParseException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommandLineParseException"/> class.
            </summary>
            <param name="message">Message.</param>
            <param name="error">Error string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommandLineParseException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommandLineParseException"/> class.
            </summary>
            <param name="message">Message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommandLineParseException"/> class.
            </summary>
            <param name="message">Message.</param>
            <param name="inner">Inner exception.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommandLineParseException"/> class.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This method is required by serialization.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.CommandLineParseException.ErrorString">
            <summary>
            Gets To save the error string.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.CommandLineParser">
            <summary>
            User Interface class, it only include two static methods for user.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommandLineParser"/> class from being created.
            Instances of types that define only static members
            Do not need to be created. Compilers will automatically
            Add a public default constructor if no constructor
            Is specified. To prevent this, adding an empty private
            Constructor may be required.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.Parse(System.String[],System.Object)">
            <summary>
            Parse the command-line array args, and save the value to the target class.
            </summary>
            <param name="args">Argument string array.</param>
            <param name="target">Target object to associate parsing and save result.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.PrintUsage(System.Object)">
            <summary>
            Print out the usage to users.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.HandleException(System.Object,System.Exception)">
            <summary>
            Handle exception of commandline parser.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
            <param name="exception">Exception.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.BuildUsage(System.Object)">
            <summary>
            Analyse the target class, and use the information defined in CommentAttribute
            And ArgumentAttribute to output the usage to users.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
            <returns>Usage string.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper">
            <summary>
            Command line parser helper class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.#ctor(System.Object,Microsoft.Tts.Offline.Utility.CommandLineParser.InternalFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper"/> class.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
            <param name="internalTarget">Internal flags.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.CheckTarget(System.Object)">
            <summary>
            Check the target objcet, which is to save the value, to avoid misuse.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.CheckArgs(System.String[],System.Object)">
            <summary>
            Check args from static Main() function, to avoid misuse this library.
            </summary>
            <param name="args">Argument string array.</param>
            <param name="target">Target object to reflect usage information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.GetStringsFromConfigFile(System.String)">
            <summary>
            Parse the configuration file into a string[], this string[] will be send to the
            ParseArgs(string[] args). This function will do some simple check of the
            Command line, the first character the config line in the file must '-',
            Otherwise, this line will not be parsed.
            </summary>
            <param name="filePath">Configuration file path.</param>
            <returns>Configuration strings.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.GetRequiredArgumentCount(System.Object)">
            <summary>
            Count the number of required arguments.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
            <returns>The number of required arguments.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.BuildUsageLine(System.Object)">
            <summary>
            Build the useage line. First print the file name of current execution files.
            And then, print the each flag of these options.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
            <returns>Useage string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.BuildOptionsString(System.Object)">
            <summary>
            Print flag and description of each options.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
            <returns>Flag and description string of each options.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.ParseArgs(System.String[])">
            <summary>
            Parse the args string from the static Main() or from configuration file.
            </summary>
            <param name="args">Argument string array.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.CheckAllRequiredDestination">
            <summary>
            By the end of the command line parsing, we must make sure that all non-optional
            Flags have been given by the tool user.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.IsInArray(System.String[],System.String)">
            <summary>
            Check if a value is in array.
            </summary>
            <param name="arr">Array.</param>
            <param name="value">Value.</param>
            <returns>Boolean.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.CheckModeArray(System.String[],System.String[])">
            <summary>
            Check if the modes are all appeared in totalModes.
            </summary>
            <param name="totalModes">TotalModes.</param>
            <param name="modes">Modes.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.BuildOptionsString(System.Object,System.String)">
            <summary>
            Build option string for a mode.
            </summary>
            <param name="target">Target.</param>
            <param name="mode">Mode.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.GetAllModes(System.Object)">
            <summary>
            Get all modes supported.
            </summary>
            <param name="target">Target.</param>
            <returns>Modes.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.BuildOptionLine(Microsoft.Tts.Offline.Utility.ArgumentAttribute)">
            <summary>
            Build optional line string for a argument.
            </summary>
            <param name="argument">Argument attribute.</param>
            <returns>Optional line string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.GetFieldArgumentAttribute(System.Reflection.FieldInfo)">
            <summary>
            Get the ArgumentAttribute from the field. If the field don't define this
            Custom attribute, it will return null.
            </summary>
            <param name="fieldInfo">Field information.</param>
            <returns>Argument attribute associated with the field.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.GetFlagAndPlaceHolderString(Microsoft.Tts.Offline.Utility.ArgumentAttribute)">
            <summary>
            When output the usage, this function will generate the flag string
            Such as "-time n1 n2..." string.
            </summary>
            <param name="argument">Argument attribute.</param>
            <returns>Argument presentation on command line.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.GetFieldFriendlyTypeName(System.Reflection.FieldInfo)">
            <summary>
            Call by the GetFlagAndPlaceHolderString() function, and generate the frendly
            Name of each parameter in command line, such as "n1 n2 ..." string.
            </summary>
            <param name="fieldInfo">Field information.</param>
            <returns>Field name of the argument.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.ParseTheDestination(System.Object)">
            <summary>
            Check and parse the internal target and external target, then push the result
            Of parsing into the DestMap.
            Internal target class has predefined some flags, such as "-h", "-C"
            External target class are defined by the library users.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.IsFlagStringAndGetTheDestination(System.String)">
            <summary>
            Check the given string is a flag, if so, get the corresponding destination class of the flag.
            </summary>
            <param name="str">String to test.</param>
            <returns>Destination.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.ClpHelper.SaveValueStringToEmptyFlag(System.String)">
            <summary>
            Save the given string to the empty flag("") destination class.
            </summary>
            <param name="str">Flag string to save, not the realy null Flag, is the "" Flag.</param>
            <returns>Destination.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination">
            <summary>
            Private class, to hold the information of the target object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.#ctor(System.Reflection.FieldInfo,Microsoft.Tts.Offline.Utility.ArgumentAttribute,Microsoft.Tts.Offline.Utility.CommandLineParser.InternalFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination"/> class.
            </summary>
            <param name="fieldInfo">Field information.</param>
            <param name="argument">Argument attribute.</param>
            <param name="internalTarget">Internal flags.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.TryParseStringToValue(System.Type,System.String)">
            <summary>
            Parse the string to given type of value.
            </summary>
            <param name="type">Type of value.</param>
            <param name="str">String to parse.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.TryToAddValue(System.Object,System.String)">
            <summary>
            Try to and a value to the target. Frist prase the string form parameter
            To a given value. And then, save the value to a target field or a value
            List.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
            <param name="str">String value to add.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.Save(System.Object)">
            <summary>
            Save function will do some cleanup of the value save.
            </summary>
            <param name="target">Target object to reflect usage information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.TryParse(System.String,System.Type,System.Globalization.NumberStyles)">
            <summary>
            Use the given style to parse the string to given type of value.
            </summary>
            <param name="str">String to parse.</param>
            <param name="type">Type of value.</param>
            <param name="ns">Number styles.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.TryParse(System.String,System.Type)">
            <summary>
            Use the defalut style to parse the string to given type of value.
            </summary>
            <param name="str">String to parse.</param>
            <param name="type">Type of value.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.DoTryParse(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Run the TryParse function by the given method and parameters.
            </summary>
            <param name="methodInfo">Method information.</param>
            <param name="methodArgs">Method arguments.</param>
            <returns>Result value.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.InternalTarget">
            <summary>
            Gets internal target.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.Argument">
            <summary>
            Gets Argument attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.CommandLineParser.Destination.AlreadySaved">
            <summary>
            Gets a value indicating whether Value already saved.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.CommandLineParser.InternalFlags">
            <summary>
            This class is defined to take the internal flags, such as -h, -?, -C, and etc.
            When the parse begin to parse the target object, it will parse is class's object
            First. So, the parse can first put the internal flags into the DestMap to avoid
            Library user redifined those flags. And When finish parsed all flags, The library
            Will check the property NeedHelp to determinated those flags are appeared in the
            Command line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.CommandLineParser.InternalFlags.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.CommandLineParser.InternalFlags"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.CommandLineParser.InternalFlags.NeedHelp">
            <summary>
            Gets a value indicating whether Flag indicating whether user requires help.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.CommandLineParser.InternalFlags.ConfigFile">
            <summary>
            Gets or sets Configuration file path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.IValidator">
            <summary>
            Defines the Validate methods that the inherit class must implement to
            Evaluate the parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.IValidator.Validate">
            <summary>
            Evaluates parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ILogSink">
            <summary>
            Logs sink interafce.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ILogSink.LogFilePath">
            <summary>
            Gets log file path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ConsoleApp`1">
            <summary>
            This class can standardize the "main" function, unify its content.
            </summary>
            <typeparam name="T">The pattern type.</typeparam>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleApp`1.Run(System.String[],System.Func{`0,System.Int32})">
            <summary>
            Standardizes the "main" function, 
            1. It can handle all the thrown exceptions.
            2. It has the same pattern of return code.
            3. Its parameters have the same format.
            </summary>
            <param name="arguments">The arguments of the calling main function.</param>
            <param name="process">The main process function.</param>
            <returns>The error code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleApp`1.Run(System.String[],System.Func{`0,System.Int32},Microsoft.Tts.Offline.Utility.ILogger)">
            <summary>
            Standardizes the "main" function, 
            1. It can handle all the thrown exceptions.
            2. It has the same pattern of return code.
            3. Its parameters have the same format.
            </summary>
            <param name="arguments">The arguments of the calling main function.</param>
            <param name="process">The main process function.</param>
            <param name="logger">The logger used for log.</param>
            <returns>The error code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleApp`1.Run(System.String[],System.Func{`0,System.Int32},System.Func{`0,Microsoft.Tts.Offline.Utility.ILogger,System.Exception,System.Int32},Microsoft.Tts.Offline.Utility.ILogger)">
            <summary>
            Standardizes the "main" function, 
            1. It can handle all the thrown exceptions.
            2. It has the same pattern of return code.
            3. Its parameters have the same format.
            </summary>
            <param name="arguments">The arguments of the calling main function.</param>
            <param name="process">The main process function.</param>
            <param name="errorHandle">The delegate function of error Handle.</param>
            <param name="logger">The logger used for log.</param>
            <returns>The error code.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.VoiceFontNames">
            <summary>
            The voice fonts.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.VoiceFontNames.ZhCN">
            <summary>
            Zh-CN Lily.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.VoiceFontNames.ZhCNYaoyao">
            <summary>
            Zh-CN Yaoyao APM.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.VoiceFontNames.EnUS">
            <summary>
            En-US Helen 8K HTS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.VoiceFontNames.EnUSRus">
            <summary>
            En-US Rus.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.VoiceFontNames.EnUSFixedPoint">
            <summary>
            En-US fixed point.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.WaveUtil">
            <summary>
            Waveform utility.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.WaveUtil.SupportedSamplesPerSecond">
            <summary>
            Gets the supported list of samples per second.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.Helper">
            <summary>
            Static helper, including various help functions.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Helper.MaxShortPath">
            <summary>
            Max length of short Windows file or directory path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Helper.ThresholdConst">
            <summary>
            Define a default Threshold value for comparing double number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Helper.PlusDoubleZero">
            <summary>
            Plus Double zero.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Helper.MinusDoubleZero">
            <summary>
            Minus Double zero.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Helper.SND_SYNC">
            <summary>
            SND_SYNC .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Helper.SND_ASYNC">
            <summary>
            SND_ASYNC .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Helper.SND_MEMORY">
            <summary>
            SND_MEMORY .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Helper.SND_FILENAME">
            <summary>
            SND_FILENAME .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.PrintColorMessage(Microsoft.Tts.Offline.Common.ErrorSeverity,System.String,System.Object[])">
            <summary>
            Print message into output or error with different color according to severity.
            </summary>
            <param name="severity">Severity.</param>
            <param name="format">Format string.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.PrintColorMessage(Microsoft.Tts.Offline.Common.ErrorSeverity,System.String)">
            <summary>
            Print message into output or error with different color according to severity.
            </summary>
            <param name="severity">Severity.</param>
            <param name="message">Message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.PrintSuccessMessage(System.String,System.Object[])">
            <summary>
            Print success message into output.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.PrintColorMessageToOutput(System.ConsoleColor,System.String,System.Object[])">
            <summary>
            Print message into output.
            </summary>
            <param name="color">Color.</param>
            <param name="format">Format string.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.PrintColorMessageToOutput(System.ConsoleColor,System.String)">
            <summary>
            Print message into output.
            </summary>
            <param name="color">Color.</param>
            <param name="message">Message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.PrintColorMessageToError(System.ConsoleColor,System.String,System.Object[])">
            <summary>
            Print message into error.
            </summary>
            <param name="color">Color.</param>
            <param name="format">Format string.</param>
            <param name="args">Arguments to format.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.PrintColorMessageToError(System.ConsoleColor,System.String)">
            <summary>
            Print message into error.
            </summary>
            <param name="color">Color.</param>
            <param name="message">Message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Send message.
            </summary>
            <param name="hWnd">Window handle to post message to.</param>
            <param name="message">Message.</param>
            <param name="wParam">WParam.</param>
            <param name="lParam">LParam.</param>
            <returns>Return code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.PostMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Post message.
            </summary>
            <param name="hWnd">Window handle to post message to.</param>
            <param name="message">Message.</param>
            <param name="wParam">WParam.</param>
            <param name="lParam">LParam.</param>
            <returns>True if succeeded, otherwise flase.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.PlaySound(System.String,System.Int32,System.Int32)">
            <summary>
            Windows API play sound.
            </summary>
            <param name="soundFile">Sound file to play.</param>
            <param name="hmod">Play mode.</param>
            <param name="falgs">Flags.</param>
            <returns>Return code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsEmptyDirectory(System.String)">
            <summary>
            Tests whether a directory exists and is empty.
            </summary>
            <param name="path">The given directory to test.</param>
            <returns>True for the given directory is an empty one, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetAbsolutePath(System.String)">
            <summary>
            Get absolute path.
            </summary>
            <param name="path">Relative path.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetFullPath(System.String,System.String)">
            <summary>
            Get full path to the file.
            </summary>
            <param name="dataDir">Data directory.</param>
            <param name="path">File path.</param>
            <returns>Full path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetSubFilesRelativePath(System.String,System.String)">
            <summary>
            Get sub files relative path.
            </summary>
            <param name="dir">Search root dir.</param>
            <param name="searchPattern">Search pattern.</param>
            <returns>All sub files relative path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetSubFilesRelativePath(System.String,System.String,System.Boolean)">
            <summary>
            Get sub files relative path.
            </summary>
            <param name="dir">Search root dir.</param>
            <param name="searchPattern">Search pattern.</param>
            <param name="recursive">Search recursivly.</param>
            <returns>All sub files relative path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.SearchFilePath(System.String)">
            <summary>
            Search the exactly location for given file with given file name.
            </summary>
            <param name="fileName">File name of the file to search for.</param>
            <returns>The location of the file, null if not found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FileToShortPath(System.String)">
            <summary>
            Ensure the file exist and convert the long path to short path.
            </summary>
            <param name="longPath">Long file path.</param>
            <returns>Short path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.DirToShortPath(System.String)">
            <summary>
            Ensure the directory exist, if no, create it and convert the path to short path.
            </summary>
            <param name="longPath">Long directory path.</param>
            <returns>Short path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ToShortPath(System.String)">
            <summary>
            Convert the path to short path, if the file/directory does not exist,
            Throw an InvalidDataException exception.
            </summary>
            <param name="longPath">Long path.</param>
            <returns>Short path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetTempFileName">
            <summary>
            Call to Path.GetTempFileName() with exception handling
            <param />
            Suppress this warning to make this API the same as Path.GetTempFileName().
            </summary>
            <returns>Temporary file path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetTempFolderName">
            <summary>
            Get temporary folder name
            Add a suffix "_offline" to clarify its an offline data folder.
            </summary>
            <returns>Temporary folder name.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.AppendTextFiles(System.String,System.Text.Encoding,System.String[])">
            <summary>
            Append text file to existing file.
            </summary>
            <param name="targetFile">Target file to be appended to.</param>
            <param name="encoding">File encoding both for input file an output file.</param>
            <param name="files">Locations of source text files to read from for appending.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsReadonlyFile(System.String)">
            <summary>
            Whether the file is readonly.
            </summary>
            <param name="filePath">File path to be checked.</param>
            <returns>Whehter the file is readonly.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetVoicePathByCreatingIniFile(System.String)">
            <summary>
            Create INI file and return path without file extension.
            </summary>
            <param name="content">The content.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetLocalShareFileFullPath(System.String)">
            <summary>
            Get local share file full path, if it's not local share file, return input file.
            Input: \\localhost\ccs_work\v-hub\Test.txt. 
            Output: D:\ccs_work\v-hub\Test.txt.
            </summary>
            <param name="shareFile">Local share file path.</param>
            <returns>Full path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsLocalPath(System.String)">
            <summary>
            Check whether the input path is a local path.
            </summary>
            <param name="path">Input path.</param>
            <returns>Ture if the input path is a local path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.BuildArgument(System.String[])">
            <summary>
            Build command argument string.
            </summary>
            <param name="args">Command line argument list.</param>
            <returns>Command line argument string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.BuildArgument(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Build command argument string.
            </summary>
            <param name="args">Command line argument list.</param>
            <returns>Command line argument string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.AppendArgument(System.String,System.String[])">
            <summary>
            Append argument list to original argument.
            </summary>
            <param name="originalArgument">Original argument to be appended.</param>
            <param name="args">Argument list to append.</param>
            <returns>Full argument string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.DebuggerBreak(System.Boolean)">
            <summary>
            Triggle debug break.
            </summary>
            <param name="yesNo">Break or not.</param>
            <returns>True.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindTestRootPath">
            <summary>
            Finds the testing root path.
            <example>~\target\offline\objd\i386.</example>
            </summary>
            <returns>Test root directory path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindTestDataPath">
            <summary>
            Finds the testing data path.
            <example>~\tts\tools\Offline\testdata.</example>
            </summary>
            <returns>Test data directory path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindTtsTargetPath">
            <summary>
            Finds the TTS target path in build environment by its relative location to offline test root path.
            </summary>
            <returns>TTS target path in build environment.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindLocaleHandlerPath">
            <summary>
            Finds the locale handler path.
            </summary>
            <returns>Location of locale handler folder.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindVoiceFontPath(Microsoft.Tts.Offline.Utility.VoiceFontNames)">
            <summary>
            Finds the voice font path.
            </summary>
            <param name="fontName">The name of the voice font to find.</param>
            <returns>Location of the locale handler folder.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsUncDrive(System.String)">
            <summary>
            Check if it's valid UNC path.
            </summary>
            <param name="path">The file path.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.OpenDirAndSelectFile(System.String)">
            <summary>
            Open directory and select file.
            </summary>
            <param name="filePath">File to be selected.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.OpenFile(System.String)">
            <summary>
            Open file.
            </summary>
            <param name="filePath">File path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetItemValueFromIniFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            GetItemValueFromIniFile.
            </summary>
            <param name="iniFile">IniFile.</param>
            <param name="itemName">ItemName.</param>
            <param name="encoding">Encoding.</param>
            <returns>Item value from test case log.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetItemValueFromIniFile(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            GetItemValueFromIniFile.
            </summary>
            <param name="iniFile">IniFile.</param>
            <param name="itemName">ItemName.</param>
            <param name="sectionName">SectionName.</param>
            <param name="encoding">Encoding.</param>
            <returns>Item value from test case log.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.AppendTextNewLine(System.String,System.String,System.Object[])">
            <summary>
            Append new line text.
            </summary>
            <param name="filePath">File path to be appended.</param>
            <param name="format">Text format.</param>
            <param name="args">Text arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.AppendText(System.String,System.String,System.Object[])">
            <summary>
            Append line text.
            </summary>
            <param name="filePath">File path to be appended.</param>
            <param name="format">Text format.</param>
            <param name="args">Text arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IterateTextFile(Microsoft.Tts.Offline.Utility.Helper.LineHandler,System.String)">
            <summary>
            Iterate a text file.
            </summary>
            <param name="handler">Line string handler.</param>
            <param name="filePath">Text file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.LoadTextSessions(System.String,System.String)">
            <summary>
            Loads all text sessions/blocks into lists, which is separated by given line.
            </summary>
            <param name="filePath">Location of text file to read lines.</param>
            <param name="separatorLine">The separator line to separate sessions.</param>
            <returns>Text sessions.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.AllFileLines(System.String)">
            <summary>
            Reads all text lines from given file.
            </summary>
            <param name="filePath">Location of text file to read lines.</param>
            <returns>Enumerator of the lines in the given file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FileLines(System.String)">
            <summary>
            Reads text lines from given file, while dropping empty lines in the text file.
            </summary>
            <param name="filePath">Location of text file to read lines.</param>
            <returns>Enumerator of the lines in the given file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FileLines(System.String,System.Boolean)">
            <summary>
            Read text lines from given file.
            </summary>
            <param name="filePath">Location of text file to read lines.</param>
            <param name="ignoreBlankLine">IgnoreBlankLine.</param>
            <returns>Enumerator of the lines in the given file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FileLines(System.String,System.Text.Encoding)">
            <summary>
            Read text lines from given file.
            </summary>
            <param name="filePath">Location of text file to read lines.</param>
            <param name="encoding">The encoding of the file.</param>
            <returns>Enumerator of the lines in the file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FileLines(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Read text lines from given file.
            </summary>
            <param name="filePath">Location of text file to read lines.</param>
            <param name="encoding">The encoding of the file.</param>
            <param name="ignoreBlankLine">Whether ignore blank line.</param>
            <returns>Enumerator of the lines in the file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.WriteLines(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Write text lines to given file.
            </summary>
            <param name="lines">Text lines.</param>
            <param name="filePath">Location of text file to write lines.</param>
            <param name="append">Append or not.</param>
            <param name="encoding">The encoding of the file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.Streamlines(System.IO.TextReader)">
            <summary>
            Get file lines from file.
            </summary>
            <param name="reader">The reader of text stream to load.</param>
            <returns>Enumerator of the lines in file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.EnsureFolderExistForFile(System.String)">
            <summary>
            Ensure directory exist for certain file path, this is,
            If the directory does not exist, create it.
            </summary>
            <param name="filePath">File path to process.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.EnsureFolderExist(System.String)">
            <summary>
            Ensure directory exist for certain file path, this is,
            If the directory does not exist, create it.
            </summary>
            <param name="dirPath">Directory path to process.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ThrowIfFileNotExist(System.String)">
            <summary>
            Checks file exists.
            </summary>
            <param name="filePath">FilePath.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ThrowIfDirectoryNotExist(System.String)">
            <summary>
            Checks dir exists.
            </summary>
            <param name="dirPath">DirPath.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ThrowIfNull(System.Object)">
            <summary>
            Checks object argument not as null.
            </summary>
            <param name="instance">Object instance to check.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ThrowIfNullOrUnequalLength``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Checks two lists are not null and equal length.
            </summary>
            <typeparam name="T">List type.</typeparam>
            <param name="list1">List 1.</param>
            <param name="list2">List 2.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ThrowIfNull(System.String)">
            <summary>
            Checks object argument not as null.
            </summary>
            <param name="str">String instance to check.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ThrowIfNotWithFileExtension(System.String,System.String)">
            <summary>
            Checks file path with extension.
            </summary>
            <param name="filePath">File path.</param>
            <param name="fileExtension">File extension.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ThrowIfArrayNullOrEmpty(System.Array)">
            <summary>
            Check array object not null or empty.
            </summary>
            <param name="array">Array instance to check.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FileValidExists(System.String)">
            <summary>
            Verify whether a text exist and not with zero-length size.
            </summary>
            <param name="filePath">File to test.</param>
            <returns>Boolean, indicating OK or not.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FileValidExists(System.String,System.Boolean)">
            <summary>
            Verify whether a file exists and contains valid texts.
            </summary>
            <param name="filePath">File to test.</param>
            <param name="acceptWhiteSpace">Whether accept file with only white space as valid.</param>
            <returns>Boolean, indicating OK or not.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CheckFileExistsInFolder(System.String,System.String)">
            <summary>
            Check file exists in a folder.
            </summary>
            <param name="dir">Directory.</param>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CheckFileExists(System.String)">
            <summary>
            Check file exists.
            </summary>
            <param name="filePath">File path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CheckFolderNotEmpty(System.String)">
            <summary>
            Check whether directory exists and has file in it.
            </summary>
            <param name="dirPath">Directory path to process.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.SetFileReadOnly(System.String,System.Boolean)">
            <summary>
            SetFileReadOnly.
            </summary>
            <param name="filePath">File to set.</param>
            <param name="readOnly">Readonly flag to set.</param>
            <returns>Whether succeed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsUnicodeFile(System.String)">
            <summary>
            Tell whether a file is in unicode.
            </summary>
            <param name="filePath">File to test.</param>
            <returns>True if Unicode file, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsValidPath(System.String)">
            <summary>
            Tell whether a path string is valid.
            </summary>
            <param name="path">Path to test.</param>
            <returns>True if valid, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.NeutralFormat(System.String,System.Object[])">
            <summary>
            Format the string in language independent way.
            </summary>
            <param name="format">Format string.</param>
            <param name="arg">Arguments to format.</param>
            <returns>Formated string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.TestDirWritable(System.String)">
            <summary>
            TestDirWritable.
            </summary>
            <param name="dirPath">DirPath.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.TestWritable(System.String)">
            <summary>
            Test whether the file can be written. if this file is not writable,
            Exception (of FileStream) will be thrown out.
            </summary>
            <param name="filePath">The file path to be checked.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.TestWritableWithoutException(System.String)">
            <summary>
            Test file writtable.
            </summary>
            <param name="filePath">File path to be tested.</param>
            <returns>Error message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.HandleAllException(System.Exception)">
            <summary>
            Used handle all exception in the main function.
            </summary>
            <param name="exception">Exception to be checked.</param>
            <returns>Whether the exception should be filtered.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FilterException(System.Exception)">
            <summary>
            If the exception is in the filter exception list only print the
            Exception to the console and return true, else return false.
            In most case if return true, caller will return error code, else
            Throw the exception.
            </summary>
            <param name="exception">Exception object to be filtered.</param>
            <returns>Return true if the exception in the filterExceptions,
            else return false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetExceptionErrorCode(System.Exception)">
            <summary>
            Gets the exit code of the exception.
            </summary>
            <param name="exception">Exception object to be filtered.</param>
            <returns>Exit code of the exception.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FilterException(System.Exception,System.Type[])">
            <summary>
            If the exception is in the filter exception list only print the
            Exception to the console and return true, else return false.
            In most case if return true, caller will return error code, else
            Throw the exception.
            </summary>
            <param name="exception">Exception object to be filtered.</param>
            <param name="filterExceptions">Exception types to be filetered.</param>
            <returns>Return true if the exception in the filterExceptions,
            else return false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CreateException(System.Type,System.String)">
            <summary>
            Create new exception instance with given exception type and parameter.
            </summary>
            <param name="type">Exception type.</param>
            <param name="parameter">
            1. if type is FileNotFoundException/DirectoryNotFoundException,
            Parameter should be file/directory name.
            </param>
            <returns>Exception created.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.BuildExceptionMessage(System.Exception)">
            <summary>
            Get all inner exceptions message string.
            </summary>
            <param name="exception">Exception.</param>
            <returns>Exception message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.Compare``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Compares two ICollection.
            </summary>
            <typeparam name="T">The template of ICollection.</typeparam>
            <param name="expected">The expected value.</param>
            <param name="actual">The actual value.</param>
            <param name="ignoreOrder">True to indicate the order in collection should be ignored.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareTextFile(System.String,System.String,System.Boolean,System.Boolean,System.Double)">
            <summary>
            Compare two text files.
            </summary>
            <param name="leftFile">Left file.</param>
            <param name="rightFile">Right file.</param>
            <param name="ignoreBlank">Ignore blank comparing or not.</param>
            <param name="compareFloatWithImprecise">
            If compare float number with precision comparison, When string is including some float number.
            </param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareTextFile(System.String,System.String,System.Boolean,Microsoft.Tts.Offline.Utility.Helper.IgnoreLineWhenCompare,System.Boolean,System.Double)">
            <summary>
            Compare two text files.
            </summary>
            <param name="leftFile">Left file.</param>
            <param name="rightFile">Right file.</param>
            <param name="ignoreBlank">Ignore blank comparing or not.</param>
            <param name="ignoreLineWhenCompare">IgnoreLineWhenCompare.</param>
            <param name="compareFloatWithImprecise">
            If compare float number with precision comparison, When string is including some float number.
            </param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareTextFile(System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Double)">
            <summary>
            Compare two text files.
            </summary>
            <param name="leftFile">Left file.</param>
            <param name="rightFile">Right file.</param>
            <param name="ignoreBlank">Ignore blank comparing or not.</param>
            <param name="columnIndex">Compare per columns less than the index.</param>
            <param name="compareFloatWithImprecise">
            If compare float number with precision comparison, When string is including some float number.
            </param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareTextFile(System.String,System.String,System.Boolean,Microsoft.Tts.Offline.Utility.Helper.IgnoreLineWhenCompare,System.Int32,System.Boolean,System.Double)">
            <summary>
            Compare two text files.
            </summary>
            <param name="leftFile">Left file.</param>
            <param name="rightFile">Right file.</param>
            <param name="ignoreBlank">Ignore blank comparing or not.</param>
            <param name="ignoreLineWhenCompare">IgnoreLineWhenCompare.</param>
            <param name="columnIndex">Compare per columns less than the index.</param>
            <param name="compareFloatWithImprecise">
            If compare float number with precision comparison, When string is including some float number.
            </param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareTextDir(System.String,System.String,System.Boolean,System.Boolean,System.Double)">
            <summary>
            Compare text files in both directories.
            </summary>
            <param name="leftDir">Left direcroty.</param>
            <param name="rightDir">Right directory.</param>
            <param name="ignoreBlank">Ignore blank comparing or not.</param>
            <param name="compareFloatWithImprecise">
            If compare float number with precision comparison, When string is including some float number.
            </param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareTextDir(System.String,System.String,System.Boolean,Microsoft.Tts.Offline.Utility.Helper.IgnoreLineWhenCompare,System.Boolean,System.Double)">
            <summary>
            Compare text files in both directories.
            </summary>
            <param name="leftDir">Left direcroty.</param>
            <param name="rightDir">Right directory.</param>
            <param name="ignoreBlank">Ignore blank comparing or not.</param>
            <param name="ignoreLineWhenCompare">IgnoreLineWhenCompare.</param>
            <param name="compareFloatWithImprecise">
            If compare float number with precision comparison, When string is including some float number.
            </param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareTextDir(System.String,System.String,System.Boolean,Microsoft.Tts.Offline.Utility.Helper.IgnoreLineWhenCompare,System.String,System.Boolean,System.Double)">
            <summary>
            Compare text files in both directories.
            </summary>
            <param name="leftDir">Left direcroty.</param>
            <param name="rightDir">Right directory.</param>
            <param name="ignoreBlank">Ignore blank comparing or not.</param>
            <param name="ignoreLineWhenCompare">IgnoreLineWhenCompare.</param>
            <param name="searchPattern">Text search pattern.</param>
            <param name="compareFloatWithImprecise">
            If compare float number with precision comparison, When string is including some float number.
            </param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareExcelFile(System.String,System.String,System.Boolean,System.Double)">
            <summary>
            Compare two excel files.
            </summary>
            <param name="leftFile">Left file.</param>
            <param name="rightFile">Right file.</param>
            <param name="compareFloatWithImprecise">
            If compare float number with precision comparison, When string is including some float number.
            </param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if file contents are equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareString(System.String,System.String,System.Boolean,System.Boolean,System.Double)">
            <summary>
            Compare two strings.
            </summary>
            <param name="left">Left string.</param>
            <param name="right">Right string.</param>
            <param name="ignoreBlank">Ignore blank comparing or not.</param>
            <param name="compareFloatWithImprecise">
            If compare float number with precision comparison, When string is including some float number.
            </param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareFloatWithImpreciseBetweenTwoString(System.String,System.String,System.Double)">
            <summary>
            Compare two strings, 
            meantime need compare float number with not precise comparison when it includes float number string.
            </summary>
            <param name="left">Left string.</param>
            <param name="right">Right string.</param>
            <param name="threshold">A threshold to do a pass rule.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.AppendBinary(System.String,System.String[])">
            <summary>
            Append binaries files into a target file.
            </summary>
            <param name="targetFile">Terget file to append to.</param>
            <param name="files">File path list to append.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Copy directory.
            </summary>
            <param name="source">Source directory to copy from.</param>
            <param name="target">Target directory to copy to.</param>
            <param name="overwrite">Falg to overwrite existint target file or not.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ForcedDeleteDir(System.String)">
            <summary>
            Delete dir even if the files in the dir has readonly attribute.
            </summary>
            <param name="dir">Directory to be deleted.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ForcedDeleteFile(System.String)">
            <summary>
            Delete one file.
            </summary>
            <param name="filePath">File need to be deleted.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ForceCopyFile(System.String,System.String)">
            <summary>
            Force copy file.
            </summary>
            <param name="sourceFilePath">Source file path.</param>
            <param name="targetFilePath">Target file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CopyFileIfTargetNotExist(System.String,System.String)">
            <summary>
            Copy file if not exist.
            </summary>
            <param name="sourceFilePath">Source file path.</param>
            <param name="targetFilePath">Target file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CopyFileIfSourceExist(System.String,System.String,System.Boolean)">
            <summary>
            Copy file if not exist.
            </summary>
            <param name="sourceFilePath">Source file path.</param>
            <param name="targetFilePath">Target file path.</param>
            <param name="overwrite">Whether it is overwrite.</param>
            <returns>Whether the file is copied.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.SafeDelete(System.String)">
            <summary>
            Safe delete a file or directory.
            </summary>
            <param name="path">Path of file or directory.</param>
            <returns>Error string if exception found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CheckFilesAlign(System.String,System.String,System.String,System.String)">
            <summary>
            Check file alignment for each sentence id.
            </summary>
            <param name="leftDir">Left file directory.</param>
            <param name="leftExtension">Left file extension.</param>
            <param name="rightDir">Right file directory.</param>
            <param name="rightExtension">Right file extension.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindRegEditTool">
            <summary>
            Find the regedit.exe tool path.
            </summary>
            <returns>Regedit.exe file path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindRegsvr32Tool">
            <summary>
            Find the regsvr32.exe tool path.
            </summary>
            <returns>RegSvr32.exe file path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.Is64BitMachine">
            <summary>
            Tell the processor architecture of current machine through 
            Environment.GetEnvironmentVariable("PROCESSOR_ARCHITECTURE").
            </summary>
            <returns>True for 64bit machine, else false for 32bit machine.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsValidateEnum``1(``0)">
            <summary>
            Is valid enum value.
            </summary>
            <typeparam name="T">Enum type.</typeparam>
            <param name="enumValue">Enum value.</param>
            <returns>Whether the value is a valid enum value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IndexOf(System.String,System.String[])">
            <summary>
            Find index of item in item collection.
            </summary>
            <param name="item">Item to find.</param>
            <param name="items">Item collection.</param>
            <returns>Index.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.RandomizeCollectionElements``1(System.Random,System.Collections.ObjectModel.Collection{``0})">
            <summary>
            RandomizeCollectionElements.
            </summary>
            <param name="random">Random.</param>
            <param name="data">The data to shuffle.</param>
            <typeparam name="T">The type.</typeparam>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.AppendCollection``1(System.Collections.ObjectModel.Collection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Append from source collection to target one.
            </summary>
            <param name="targetCollection">Target collection.</param>
            <param name="sourceCollection">Source sollection.</param>
            <typeparam name="T">The type.</typeparam>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.Convert2Collection(System.Char[])">
            <summary>
            Convert a char array to char collection.
            </summary>
            <param name="set">Char array.</param>
            <returns>Char collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.Convert2Collection(System.String[])">
            <summary>
            Convert a string array to collection.
            </summary>
            <param name="set">String array.</param>
            <returns>String collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.SplitCollection``1(System.Collections.ObjectModel.Collection{``0},System.Int32,System.Collections.ObjectModel.Collection{System.Collections.ObjectModel.Collection{``0}})">
            <summary>
            Split Collection.
            </summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="sourceCollection">SourceCollection.</param>
            <param name="splitSize">SplitSize.</param>
            <param name="splittedCollections">SplittedCollections.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FillData(System.String[],System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Fill all strings in data into collection object.
            </summary>
            <param name="data">Data string array.</param>
            <param name="container">Mapping dictionary.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FillData(System.String[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            File entry pair in data array into map, one is id,
            And the other is integer value.
            <example>
                "a", "1",
                "b", "2",.
            </example>
            </summary>
            <param name="data">Data string array.</param>
            <param name="container">Mapping dictionary.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FillData(System.String[],System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            File entry pair in data array into map, one is id,
            And the other is string value.
            <example>
                "a", "aa",
                "b", "bb",.
            </example>
            </summary>
            <param name="data">Data string array.</param>
            <param name="container">Mapping dictionary.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FillMap(System.String[],System.String[],System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            File map left to right into the map object
            Like one-by-one mapping for tts phone set and sr phone set.
            </summary>
            <param name="left">Left string array.</param>
            <param name="right">Right string array.</param>
            <param name="container">Mapping result collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.MakePattern(System.String)">
            <summary>
            Make safe regular express pattern.
            </summary>
            <param name="pattern">Raw pattern.</param>
            <returns>Safe pattern.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.RemoveEmptyItems(System.String[])">
            <summary>
            Remove empty/only whitespace string items
            From the source string array.
            </summary>
            <param name="items">String array.</param>
            <returns>String array with empty item removed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ValidateEnumValue(System.Type,System.Int32)">
            <summary>
            Validate whether given value is defined or not, if not defined,
            An ArgumentException will be thrown.
            </summary>
            <param name="type">Given enumeration type.</param>
            <param name="value">Given enumeration value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FromBytes``1(System.Byte[])">
            <summary>
            Convert the byte arrayy into object.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <param name="rawValue">RawValue.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ToBytes(System.Object)">
            <summary>
            Convert the object into byte array.
            </summary>
            <param name="source">Object.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsCommentLine(System.String)">
            <summary>
            Check if the line is comment.
            </summary>
            <param name="line">Line to be checked.</param>
            <returns>Whether the line is comment.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.RemoveDuplicateBlank(System.String)">
            <summary>
            Remove duplicate blank space.
            </summary>
            <param name="line">Line to be processed.</param>
            <returns>Processed line.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsPascal(System.String)">
            <summary>
            Check the word whether is in Pascal format, which means first letter is in upper case,
            And the others are in lower case.
            </summary>
            <param name="word">Word.</param>
            <returns>Ture is the word is in Pascal format.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ToPascal(System.String)">
            <summary>
            Convert the word into Pascal format, which means first letter is in upper case,
            And the others are in lower case.
            </summary>
            <param name="word">Word.</param>
            <returns>Word in Pascal format.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsUpper(System.String)">
            <summary>
            Check whether all the letters of the word are in upper.
            </summary>
            <param name="word">Word.</param>
            <returns>True for all letters are in upper.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsLower(System.String)">
            <summary>
            Check whether all the letters of the word are in lower.
            </summary>
            <param name="word">Word.</param>
            <returns>True for all letters are in lower.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsLetter(System.String)">
            <summary>
            Check whether all the letters of the word are letters.
            </summary>
            <param name="word">Word.</param>
            <returns>True for all letters are letters.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsEnglishWord(System.String)">
            <summary>
            Check whether all the letters of the word are english letters.
            </summary>
            <param name="word">Word.</param>
            <returns>True for all letters are english letters.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsNumber(System.String)">
            <summary>
            Check whether all the letters of the word are numbers.
            </summary>
            <param name="word">Word.</param>
            <returns>True for all letters are numbers.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ContainsLetter(System.String)">
            <summary>
            Check whether all the letters contains at least one letter.
            </summary>
            <param name="word">Word.</param>
            <returns>True all the letters contains at least one letter.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ContainsNumber(System.String)">
            <summary>
            Check whether all the letters contains at least one number.
            </summary>
            <param name="word">Word.</param>
            <returns>True all the letters contains at least one number.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.Split(System.String,System.Char[])">
            <summary>
            Split string with given splitters.
            </summary>
            <param name="text">Text.</param>
            <param name="splitters">Splitters.</param>
            <returns>Splitted strings.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.Split(System.String)">
            <summary>
            Split string with white space.
            </summary>
            <param name="text">Text.</param>
            <returns>Splitted strings.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.TryParse``1(System.String,``0@)">
            <summary>
            This method used to avoid exception when parsing invalid string.
            </summary>
            <param name="value">Value.</param>
            <param name="t">IgnoreCase.</param>
            <typeparam name="T">The type.</typeparam>
            <returns>Error.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.UintToString(System.UInt32)">
            <summary>
            Coverts unit file tag to string value.
            </summary>
            <param name="tag">The file tag of unit format.</param>
            <returns>The string value of file tag.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareDictionary``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Compare two dictionaries by key/value.
            </summary>
            <typeparam name="TKey">Key.</typeparam>
            <typeparam name="TValue">TValue.</typeparam>
            <param name="left">Left key/value pair.</param>
            <param name="right">Right key/value pair.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareDictionary``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Compare two dictionaries by key/value and value comparer.
            </summary>
            <typeparam name="TKey">Key.</typeparam>
            <typeparam name="TValue">TValue.</typeparam>
            <param name="left">Left key/value pair.</param>
            <param name="right">Right key/value pair.</param>
            <param name="valueComparer">Value comparer.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareBinary(System.String,System.String)">
            <summary>
            Compare two file as binary mode.
            </summary>
            <param name="leftFile">Path of left file to compare.</param>
            <param name="rightFile">Path of right file to compare.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.DeleteEmptyFolders(System.String)">
            <summary>
            Delete all empty folders in the directory.
            </summary>
            <param name="dir">Directory to be operated.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Compare two directory.
            </summary>
            <param name="leftDir">Left directory.</param>
            <param name="rightDir">Right directory.</param>
            <param name="recursive">True: compare as recursive mode; false: don't compare sub-folders.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CompareDirectory(System.String,System.String,System.Boolean,System.Func{System.String,System.String,System.Boolean})">
            <summary>
            Compare two directory.
            </summary>
            <param name="leftDir">Left directory.</param>
            <param name="rightDir">Right directory.</param>
            <param name="recursive">True: compare as recursive mode; false: don't compare sub-folders.</param>
            <param name="needCompareFile">Whether need compare the file.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetBuildArchitecture">
            <summary>
            Get build architecture.
            </summary>
            <returns>The architecture of current assembly.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.IsBuildDebug">
            <summary>
            Judge if build type is debug.
            </summary>
            <returns>Ture if debug build, or release.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ReadValue(System.String,System.String)">
            <summary>
            Get the value from the configuration file for the given value name.
            <param />
            With name and value pairs, the configuration file example could be:
            <example>
                TARGETKIND = FESTREAM
                TARGETGUID = 16kHzDynamicStreamYV2M2.
            </example>
            </summary>
            <param name="configFile">The location of configuration file.</param>
            <param name="valueName">The case-sentitive name of the value to get from.
            The value name will be used in the regular expression directly.</param>
            <returns>Value string, null if not found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ReadAllIds(System.String)">
            <summary>
            Load sentence ids from file.
            </summary>
            <param name="filePath">Sentence id list file.</param>
            <returns>Id dictionary.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.SaveIds(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Save sentence ids to file.
            </summary>
            <param name="ids">Sentence ids to save.</param>
            <param name="filePath">Target file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.SaveIds(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Save sentence ids to file.
            </summary>
            <param name="ids">Sentence ids to save.</param>
            <param name="filePath">Target file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.CheckRegex(System.String)">
            <summary>
            Check regex expression.
            </summary>
            <param name="expression">Regex expression.</param>
            <returns>Whether the expression is valid.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.BuildSayAsSsmlElement(System.String,System.String)">
            <summary>
            Build say as SSML element.
            </summary>
            <param name="content">Content to speak.</param>
            <param name="sayAs">Say as value.</param>
            <returns>Ssml say as element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.BuildSsmlContent(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Build SSML content.
            </summary>
            <param name="language">Language to be speak.</param>
            <param name="ssmlElement">Ssml element.</param>
            <returns>SSML content to be spokens.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.ShuffleList``1(System.Collections.Generic.List{``0},System.Int32,System.Random)">
            <summary>
            Shuffle a List(T) instance.
            </summary>
            <typeparam name="T">Type of each element.</typeparam>
            <param name="data">The list to be shuffled.</param>
            <param name="count">Number of (heading) elements to be shuffled.</param>
            <param name="autoRand">The random generator.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindIndex(System.Collections.Generic.ICollection{System.String},System.String)">
            <summary>
            Find the index of name in the name array.
            </summary>
            <param name="names">Name array.</param>
            <param name="queryName">Query name.</param>
            <returns>Index, -1 for not found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindSearchDirs">
            <summary>
            Find the locations of directories to search for the file.
            Currently it includes:
            1. The directory location of currently executing assembly
            2. Current working directory
            3. Path in the system path.
            </summary>
            <returns>Directories which are to search in.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.GetShortPathName(System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            Pre-allocate StringBuilder instance to hold result.
            </summary>
            <param name="longPath">Long path.</param>
            <param name="shortPath">Short path.</param>
            <param name="bufferSize">Beffer size of short path.</param>
            <returns>Return code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Helper.FindSystemTool(System.String)">
            <summary>
            Find tool under the windows system path.
            </summary>
            <param name="toolName">Tool name to find.</param>
            <returns>Tool location path.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.Helper.TempFullPath">
            <summary>
            Gets Temp file/folder full path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.Helper.LineHandler">
            <summary>
            Delegate for string line handling, such as for iterating text file.
            </summary>
            <param name="line">Line string.</param>
            <param name="stop">Indicate whether or not to stop iterating.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.Helper.IgnoreLineWhenCompare">
            <summary>
            Indicating whether ignore the line when compare the text file.
            </summary>
            <param name="line">Line to compare.</param>
            <returns>Whether ignore the line when compare the text file.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ItemRange">
            <summary>
            Describe variable length items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ItemRange.Start">
            <summary>
            Gets or sets the range start.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ItemRange.Length">
            <summary>
            Gets or sets the range length.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.HtkTool">
            <summary>
            HTK tools.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HtkTool.ReadOneBlock(System.IO.StreamReader)">
            <summary>
            Read a sentence block from MLF file.
            </summary>
            <param name="mlfReader">Reader of MLF file.</param>
            <returns>Line collection of one block.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HtkTool.VerifyMlfFormat(System.String)">
            <summary>
            Verify whether a MLF file is in well-format.
            </summary>
            <param name="filePath">File path.</param>
            <returns>True if passed, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HtkTool.VerifyScpFormat(System.String)">
            <summary>
            Verify whether a SCP file is in well-format.
            </summary>
            <param name="filePath">File to verify.</param>
            <returns>True if passed, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HtkTool.Clone">
            <summary>
            Clone this instance.
            </summary>
            <returns>New HtkTool instance.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.HtkTool.HtkDir">
            <summary>
            Gets or sets Directory of HTK tools.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.HtkTool.Item(System.String)">
            <summary>
            Gets Find certian tool.
            </summary>
            <param name="name">Tool name.</param>
            <returns>Tool path.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ILogger">
            <summary>
            Logger interface.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.Update(Microsoft.Tts.Offline.Utility.Observable{Microsoft.Tts.Offline.Utility.LoggerEventArgs},Microsoft.Tts.Offline.Utility.LoggerEventArgs)">
            <summary>
            The delegate of update event handler.
            </summary>
            <param name="sender">Indicate who is the sender of this update.</param>
            <param name="eventArg">The LoggerEventArgs what want to be dispatched.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.Log">
            <summary>
            Log message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.Log(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogLine">
            <summary>
            Log message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogLine(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogError">
            <summary>
            Log error message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogError(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogErrorLine">
            <summary>
            Log error message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogErrorLine(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogWarning">
            <summary>
            Log warning message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogWarning(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogWarningLine">
            <summary>
            Log warning message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.LogWarningLine(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ILogger.Reset">
            <summary>
            Clean the logger.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.LoggerEventArgs">
            <summary>
            The Observer argument for ILogger.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.LoggerEventArgs.Format">
            <summary>
            Gets or sets the format string, which is the first argument in Log() method.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.LoggerEventArgs.Args">
            <summary>
            Gets or sets the arguments for format string, which is the second argument in Log() method.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.NullLogger">
            <summary>
            Null logger, do nothing.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.Update(Microsoft.Tts.Offline.Utility.Observable{Microsoft.Tts.Offline.Utility.LoggerEventArgs},Microsoft.Tts.Offline.Utility.LoggerEventArgs)">
            <summary>
            The delegate of update event handler.
            </summary>
            <param name="sender">Indicate who is the sender of this update.</param>
            <param name="eventArg">The LoggerEventArgs what want to be dispatched.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.Log">
            <summary>
            Log message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.Log(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogLine">
            <summary>
            Log message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogLine(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogError">
            <summary>
            Log error message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogError(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogErrorLine">
            <summary>
            Log error message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogErrorLine(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogWarning">
            <summary>
            Log warning message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogWarning(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogWarningLine">
            <summary>
            Log warning message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.LogWarningLine(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullLogger.Reset">
            <summary>
            Clean the logger.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ChainLogger">
            <summary>
            Collects several objects of loggers, such as TextLogger, ConsoleLogger,
            Then process them.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ChainLogger._loggers">
            <summary>
            Collects the objects of loggers.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.#ctor(Microsoft.Tts.Offline.Utility.ILogger[])">
            <summary>
            Initializes a new instance of the ChainLogger class with objects of ILogger.
            </summary>
            <param name="loggers">The collection of objects of loggers.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.Update(Microsoft.Tts.Offline.Utility.Observable{Microsoft.Tts.Offline.Utility.LoggerEventArgs},Microsoft.Tts.Offline.Utility.LoggerEventArgs)">
            <summary>
            The delegate of update event handler.
            </summary>
            <param name="sender">Indicate who is the sender of this update.</param>
            <param name="eventArg">The LoggerEventArgs what want to be dispatched.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.Log">
            <summary>
            Log message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.Log(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogLine">
            <summary>
            Log message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogLine(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogError">
            <summary>
            Log error message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogError(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogErrorLine">
            <summary>
            Log error message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogErrorLine(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogWarning">
            <summary>
            Log warning message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogWarning(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogWarningLine">
            <summary>
            Log warning message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.LogWarningLine(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ChainLogger.Reset">
            <summary>
            Clean the logger.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ChainLogger.Loggers">
            <summary>
            Gets the Loggers.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TextLogger">
            <summary>
            Text file logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TextLogger class with the log file path.
            </summary>
            <param name="filePath">File to log into.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the TextLogger class with the log file path and characters encoding.
            </summary>
            <param name="filePath">File to log into.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.Update(Microsoft.Tts.Offline.Utility.Observable{Microsoft.Tts.Offline.Utility.LoggerEventArgs},Microsoft.Tts.Offline.Utility.LoggerEventArgs)">
            <summary>
            The delegate of update event handler.
            </summary>
            <param name="sender">Indicate who is the sender of this update.</param>
            <param name="eventArg">The LoggerEventArgs what want to be dispatched.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.Log">
            <summary>
            Log message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.Log(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogLine">
            <summary>
            Log message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogLine(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogError">
            <summary>
            Log error message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogError(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogErrorLine">
            <summary>
            Log a new error line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogErrorLine(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogWarning">
            <summary>
            Log a new warning line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogWarning(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogWarningLine">
            <summary>
            Log warning message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogWarningLine(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.Reset">
            <summary>
            Clean the logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogInfo">
            <summary>
            Performances actual log here.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TextLogger.LogInfo(System.IO.StreamWriter)">
            <summary>
            Performances actual log here through specific writer.
            </summary>
            <param name="writer">Writer used to log information.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TextLogger.IsTraced">
            <summary>
            Gets or sets a value indicating whether open trace.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ConsoleLogger">
            <summary>
            Console logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.#ctor">
            <summary>
            Initializes a new instance of the ConsoleLogger class with default color.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.#ctor(System.ConsoleColor)">
            <summary>
            Initializes a new instance of the ConsoleLogger class with foreground color.
            </summary>
            <param name="foregroundColor">Foreground color.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.#ctor(System.ConsoleColor,System.ConsoleColor)">
            <summary>
            Initializes a new instance of the ConsoleLogger class with foreground and background color.
            </summary>
            <param name="foregroundColor">Foreground color.</param>
            <param name="backgroundColor">Background color.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.Update(Microsoft.Tts.Offline.Utility.Observable{Microsoft.Tts.Offline.Utility.LoggerEventArgs},Microsoft.Tts.Offline.Utility.LoggerEventArgs)">
            <summary>
            The delegate of update event handler.
            </summary>
            <param name="sender">Indicate who is the sender of this update.</param>
            <param name="eventArg">The LoggerEventArgs what want to be dispatched.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.Log">
            <summary>
            Log message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.Log(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogLine">
            <summary>
            Log a new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogLine(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogError">
            <summary>
            Log error message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogError(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogErrorLine">
            <summary>
            Log a new error line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogErrorLine(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogWarning">
            <summary>
            Log a new warning line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogWarning(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogWarningLine">
            <summary>
            Log a new warning line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogWarningLine(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.Reset">
            <summary>
            Clean the logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleLogger.LogInfo">
            <summary>
            Do actual log here.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ConsoleProgressLogger">
            <summary>
            Console progress logger.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ConsoleProgressLogger.DefaultMessageFormat">
            <summary>
            Default message format.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleProgressLogger.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ConsoleProgressLogger class.
            </summary>
            <param name="totalItemsCount">Total items count.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleProgressLogger.#ctor(System.Int32,System.ConsoleColor,System.ConsoleColor)">
            <summary>
            Initializes a new instance of the ConsoleProgressLogger class.
            </summary>
            <param name="totalItemsCount">Total items count.</param>
            <param name="progressMessageColor">Process message color.</param>
            <param name="summaryMessageColor">Summary message color.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleProgressLogger.LogProgress(System.Int32)">
            <summary>
            Log message to show the progress of tool runing.
            </summary>
            <param name="processedItemsCount">Processed items count.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleProgressLogger.LogSummary(System.Int32)">
            <summary>
            Log message to show the summary of tool running.
            </summary>
            <param name="processedItemsCount">Processed items count.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ConsoleProgressLogger.DetectConsole">
            <summary>
            Detect the console visible can be shift or not.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.SyncedLogger">
            <summary>
            Provide a thread safe operation on logger objects.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.#ctor(Microsoft.Tts.Offline.Utility.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.SyncedLogger"/> class.
            </summary>
            <param name="innerLogger">The real inner logger.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.Log(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.Log">
            <summary>
            Log message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogError(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogError">
            <summary>
            Log error message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogErrorLine(System.String,System.Object[])">
            <summary>
            Log error message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogErrorLine">
            <summary>
            Log error message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogLine(System.String,System.Object[])">
            <summary>
            Log message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogLine">
            <summary>
            Log message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogWarning(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogWarning">
            <summary>
            Log warning message to logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogWarningLine(System.String,System.Object[])">
            <summary>
            Log warning message to logger with special format of string and with new line.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.LogWarningLine">
            <summary>
            Log warning message to logger with new line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.Reset">
            <summary>
            Clean the logger.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SyncedLogger.Update(Microsoft.Tts.Offline.Utility.Observable{Microsoft.Tts.Offline.Utility.LoggerEventArgs},Microsoft.Tts.Offline.Utility.LoggerEventArgs)">
            <summary>
            The delegate of update event handler.
            </summary>
            <param name="sender">Indicate who is the sender of this update.</param>
            <param name="eventArg">The LoggerEventArgs what want to be dispatched.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ManagedThreadPool">
            <summary>
            Simple managed thread pool.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ManagedThreadPool.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.Tts.Offline.Utility.ManagedThreadPool"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ManagedThreadPool.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ManagedThreadPool"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ManagedThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
            Queue work items.
            </summary>
            <param name="callback">Callback work item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ManagedThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
            Queue work item with state.
            </summary>
            <param name="callback">Callback item.</param>
            <param name="state">State.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ManagedThreadPool.WaitForDone">
            <summary>
            Wait for work items are done.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ManagedThreadPool.Reset">
            <summary>
            Reset all.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ManagedThreadPool.ProcessQueuedItems">
            <summary>
            Do the work items.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ManagedThreadPool.Initialize">
            <summary>
            Initialize thread pool.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ManagedThreadPool.MaxThreads">
            <summary>
            Gets or sets Maximum threads.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ManagedThreadPool.WaitingCallbacks">
            <summary>
            Gets Waiting callback.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ManagedThreadPool.ThreadsInUse">
            <summary>
            Gets The active thread number.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ManagedThreadPool.WaitingCallback">
            <summary>
            A work item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ManagedThreadPool.WaitingCallback.#ctor(System.Threading.WaitCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ManagedThreadPool.WaitingCallback"/> class.
            </summary>
            <param name="callback">Waitcallback.</param>
            <param name="state">State.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ManagedThreadPool.WaitingCallback.Callback">
            <summary>
            Gets Callback.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ManagedThreadPool.WaitingCallback.State">
            <summary>
            Gets State.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.NumberConverter">
            <summary>
            Safe number convertion.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NumberConverter.Double2Int16(System.Double)">
            <summary>
            Convert float value to short value.
            </summary>
            <param name="inputValue">Input float value.</param>
            <returns>Output short value.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.XmlHelper">
            <summary>
            XmlHelper help operate Xml file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.XmlHelper.InvalidXmlCharStart">
            <summary>
            Invalid XML characters the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD).
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.XmlHelper.SchemaResourcePrefix">
            <summary>
            Schema Resource Prefix "Microsoft.Tts.Offline.".
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Utility.XmlHelper"/> class from being created.
            XmlHelper only contain static methods, add a private default constructor
            To exclude warning CA1053 (Static holder types should not have constructors).
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.AppendElement(System.Xml.XmlDocument,System.Xml.XmlElement,System.String,System.String,System.String,System.Xml.Schema.XmlSchema)">
            <summary>
            Append an element with attribute to a parent element.
            </summary>
            <param name="dom">Dom.</param>
            <param name="elem">Parent element.</param>
            <param name="childElemName">Child element name.</param>
            <param name="attribName">Attribute name.</param>
            <param name="attribValue">Attribute value.</param>
            <param name="schema">Schema value.</param>
            <returns>New create element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.AppendElement(System.Xml.XmlDocument,System.Xml.XmlElement,System.String,System.String,System.String,System.Xml.Schema.XmlSchema,System.Boolean)">
            <summary>
            Append an element with attribute to a parent element.
            </summary>
            <param name="dom">Dom.</param>
            <param name="elem">Parent element.</param>
            <param name="childElemName">Child element name.</param>
            <param name="attribName">Attribute name.</param>
            <param name="attribValue">Attribute value.</param>
            <param name="schema">Schema value.</param>
            <param name="alwaysCreateElem">Alreays create element.</param>
            <returns>New create element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.LoadSchemaFromResource(System.Reflection.Assembly,System.String)">
            <summary>
            Load schema from resource in the assembly.
            </summary>
            <param name="assembly">Assembly form which to read schema.</param>
            <param name="resourceName">Resource to be loaded.</param>
            <returns>Loaded XmlSchema.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.LoadSchemaFromResource(System.String)">
            <summary>
            Load schema from resource.
            </summary>
            <param name="resourceName">Resource to be loaded.</param>
            <returns>Loaded XmlSchema.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.IsValidXMLText(System.String)">
            <summary>
            Check if input is valid xml text.
            </summary>
            <param name="text">Input text.</param>
            <returns>If input is valid xml text.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.LoadSchemaIncludes(System.Xml.Schema.XmlSchema)">
            <summary>
            Load schema includes.
            </summary>
            <param name="schema">Schema.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.Validate(System.String,System.Xml.Schema.XmlSchema)">
            <summary>
            Valid file with existing schema.
            </summary>
            <param name="filePath">File path of the config file.</param>
            <param name="schema">XmlSchema of the config file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.ValidateXDocument(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchema)">
            <summary>
            Valid XDocument with the specified XmlSchema.
            </summary>
            <param name="source">XDocument to be validate.</param>
            <param name="schema">XmlSchema used for validating.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.Validate(System.IO.Stream,System.Xml.Schema.XmlSchema)">
            <summary>
            Valid xml file with the specified XmlSchema.
            </summary>
            <param name="stream">Stream to be validate.</param>
            <param name="schema">XmlSchema used for validating.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.GetEncoding(System.String)">
            <summary>
            Get the encoding for the XML file.
            </summary>
            <param name="filePath">XML file.</param>
            <returns>Encoding.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.GetXmlNodeLineNumber(System.Xml.XmlNode)">
            <summary>
            Get the line number from the XmlNode.
            </summary>
            <param name="node">XmlNode to be checked.</param>
            <returns>Node line number in XML file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.GetXmlNodeLinePosition(System.Xml.XmlNode)">
            <summary>
            Get the line position from the Xml Node.
            </summary>
            <param name="node">XmlNode to be checked.</param>
            <returns>Xml node line position.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.GetAttributeString(System.Xml.XmlElement,System.String)">
            <summary>
            Get attribute of xml element.
            </summary>
            <param name="ele">Xml element.</param>
            <param name="attrib">Attribute name string.</param>
            <returns>Attribute value string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.GetAttributeNumber(System.Xml.XmlElement,System.String)">
            <summary>
            Get integer attribute value of xml element.
            </summary>
            <param name="ele">Xml element.</param>
            <param name="attribName">Attribute name.</param>
            <returns>Attribute value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.GetAttributeDateTime(System.Xml.XmlElement,System.String)">
            <summary>
            Get date time attribute value of xml element.
            </summary>
            <param name="ele">Xml element.</param>
            <param name="attribName">Attribute name.</param>
            <returns>Attribute value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.WriteElementAttribute(System.Xml.XmlWriter,System.String,System.String,System.String,System.String)">
            <summary>
            Write element attribute.
            </summary>
            <param name="writer">Xml writer.</param>
            <param name="nameSpace">Name space.</param>
            <param name="elementName">Element name.</param>
            <param name="attributeName">Attribute name.</param>
            <param name="attributeValue">Attribute value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlHelper.XmlElementEqual(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            Compare the two element.
            </summary>
            <param name="firstElement">First xml element doc.</param>
            <param name="secondElement">Second xml element doc.</param>
            <returns>Whether both xml element equal.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.XmlFileElement">
            <summary>
            XmlFileElement which can get the line number.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlFileElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.XmlFileElement"/> class.
            </summary>
            <param name="prefix">Prefix.</param>
            <param name="localName">Local name.</param>
            <param name="namespaceStr">Namespace URI.</param>
            <param name="xmlDoc">Xml document.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlFileElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.XmlFileElement"/> class.
            </summary>
            <param name="prefix">Prefix.</param>
            <param name="localName">Local name.</param>
            <param name="namespaceStr">Namespace URI.</param>
            <param name="xmlDoc">Xml document.</param>
            <param name="lineNumber">Line number.</param>
            <param name="linePosition">Line position.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlFileElement.HasLineInfo">
            <summary>
            Whether has line infomation.
            </summary>
            <returns>Whether has line info.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.XmlFileElement.LineNumber">
            <summary>
            Gets Line number.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.XmlFileElement.LinePosition">
            <summary>
            Gets Line position.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.XmlFileDocument">
            <summary>
            XmlFileDocument which support line number.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlFileDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.XmlFileDocument"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlFileDocument.CreateElement(System.String,System.String,System.String)">
            <summary>
            Create element.
            </summary>
            <param name="prefix">Prefix.</param>
            <param name="localName">Local name.</param>
            <param name="namespaceURI">Namespace URI.</param>
            <returns>Xml element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlFileDocument.Load(System.Xml.XmlReader)">
            <summary>
            Load from the XmlReader.
            </summary>
            <param name="reader">Xml Reader.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.StringPool">
            <summary>
            A simple string pool class, multiple instances of same string will share storage.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.WordsToStringPool(System.Collections.Generic.List{System.String},Microsoft.Tts.Offline.Utility.StringPool,System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Put words into string pool.
            </summary>
            <param name="words">Words.</param>
            <param name="stringPool">String pool.</param>
            <param name="offsets">Offset list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.PutString(System.String)">
            <summary>
            Put string into string pool.
            </summary>
            <param name="str">String.</param>
            <returns>Offset in the memory stream of written string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.GetString(System.Int32)">
            <summary>
            Get one string from the given position of data in the string Pool.
            </summary>
            <param name="position">Position of the string in the string Pool.</param>
            <returns>String retrieved from string Pool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.PutBuffer(System.Byte[])">
            <summary>
            Write a block of bytes to the memory stream using data reading from buffer.
            </summary>
            <param name="buffer">Buffer to write.</param>
            <returns>Offset in the memory stream of written buffer.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.ToArray">
            <summary>
            Get the buffer of the memory stream.
            </summary>
            <returns>Buffer in bytes.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.Reset">
            <summary>
            Resets the lengths of current string pool to zero.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.Save(System.IO.BinaryWriter)">
            <summary>
            Saves the current contents to a binary writer.
            </summary>
            <param name="writer">The given binary writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.Load(System.IO.BinaryReader,System.Int32)">
            <summary>
            Discards the current contents and loads from a binary reader.
            </summary>
            <param name="reader">The given binary reader.</param>
            <param name="size">The size to read.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.Dispose">
            <summary>
            Disposes the resources used in this object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the RewindableTextReader.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources;
            False to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.Equals``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Check whether two lists are equal with each other.
            </summary>
            <typeparam name="T">Type of the element in list.</typeparam>
            <param name="left">Left list.</param>
            <param name="right">Right list.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.StringPool.ReadString">
            <summary>
            Read one string of text from current position of the string pool.
            </summary>
            <returns>String read, null if reaching the end of stream.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.StringPool.Length">
            <summary>
            Gets the length of the memory stream.
            </summary>
            <returns>Length of the memory stream.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.StringPool.Position">
            <summary>
            Gets the current position within the string pool.
            </summary>
            <returns>Position where new string will be put.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.StringPool.Strings">
            <summary>
            Gets all strings in this string pool.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.Delimitor">
            <summary>
            Text helper static class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Delimitor.WhitespaceChar">
            <summary>
            White space char.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Delimitor.TabChar">
            <summary>
            Tab char.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Delimitor.CommentChar">
            <summary>
            Comment char.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Delimitor.PeriodChar">
            <summary>
            Period char.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Delimitor.StringEndingChar">
            <summary>
            String ending char.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Delimitor.ColonChar">
            <summary>
            Colon char.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.Delimitor.DashChar">
            <summary>
            Colon char.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Delimitor.ToArray(System.Char[])">
            <summary>
            Convert char arrays to array.
            </summary>
            <param name="chars">Chars to be converted.</param>
            <returns>Char array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Delimitor.ToArray(System.Char)">
            <summary>
            Convert char to array.
            </summary>
            <param name="c">Char to be converted.</param>
            <returns>Char arrray.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Delimitor.RemoveStringEndingChar(System.String)">
            <summary>
            Remove the '\0' at the end of string.
            </summary>
            <param name="line">String line to be processed.</param>
            <returns>Line have removed ending char.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Delimitor.CleanSplit(System.String,System.Char[])">
            <summary>
            Split the string with RemoveEmptyEntries option.
            </summary>
            <param name="line">The line to be split.</param>
            <param name="delimeters">Delimeters used to split.</param>
            <returns>Splitted items.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.Delimitor.BlankChars">
            <summary>
            Gets Blank char array.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.Delimitor.WhiteSpaceChars">
            <summary>
            Gets white space chars.
            </summary>
            <returns>Blank chars.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.Delimitor.TabChars">
            <summary>
            Gets tab chars.
            </summary>
            <returns>Blank chars.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.Observable`1">
            <summary>
            This is a Observable base class, which enable the log or event can be dispatched
            To many Observer easily.
            </summary>
            <typeparam name="T">The object what you want to dispatched.</typeparam>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Observable`1.NotifyObservers(`0)">
            <summary>
            This method is used to notify all Observer that there is something updated.
            </summary>
            <param name="update">The thing what want to be dispatched.</param>
        </member>
        <member name="E:Microsoft.Tts.Offline.Utility.Observable`1.Observer">
            <summary>
            The event handler of all Observers.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.Observable`1.UpdatedEventHandler">
            <summary>
            The delegate of update event handler.
            </summary>
            <param name="sender">Indicate who is the sender of this update.</param>
            <param name="update">The thing what want to be dispatched.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.FileExtensions">
            <summary>
            This class is used to hold and process the file extension names.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.FileExtensionDelimeter">
            <summary>
            File extension delimeter.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.F0File">
            <summary>
            The extension name of the initial f0 file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.LspFile">
            <summary>
            The extension name of the lsp file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.LpcFile">
            <summary>
            The extension name of the lpc file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.LpccFile">
            <summary>
            The extension name of the lpcc file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.PowerFile">
            <summary>
            The extension name of the power file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.GuidanceLspFile">
            <summary>
            The extension name of the guidanceLsp file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.CmpDataFile">
            <summary>
            The extension name of the cmp data file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HtkParameterFile">
            <summary>
            The extension name of the Htk format parameter file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HtkMasterLabel">
            <summary>
            The extension name of the master label file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HtkHmmList">
            <summary>
            The extension name of the full list file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HtkScript">
            <summary>
            The extension name of the script file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HedScript">
            <summary>
            The extension name of the HHEd script file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HtkMasterMacro">
            <summary>
            The extension name of the master macro file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HtkCmp">
            <summary>
            The extension name of the cmp file, which contains the all acoustic data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HtkStatisticFile">
            <summary>
            The extension name of the statistic file, which contains the statistic data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HtkTree">
            <summary>
            The extension name of the decision tree file, which contains the decision tree structure.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.CandidateGroup">
            <summary>
            The extension name of the candidate group file, which contains the candidate group data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.Waveform">
            <summary>
            The extension name of wave files.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.UnitIndexing">
            <summary>
            The extension name of the unit indexing file, which contains the indexing information of the units.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.WaveInfoHeader">
            <summary>
            The extension name of the wave info header file, which contains the wave information header.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.WaveAlignment">
            <summary>
            The extension name of the wave alignment file, which contains the segmentation of source units.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.WaveInventory">
            <summary>
            The extension name of the wave inventory file, which contains the uncompressed wave data of the all candidates.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.CcTable">
            <summary>
            The extension name of the CC table file, which contains the cross correlation cost.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.CrossDomainCCTable">
            <summary>
            The extension name of the cross domain CC table file, which contains the cross correlation cost of candidates in different domains.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.KldTable">
            <summary>
            The extension name of the KLD table file, which contains the KLD cost.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.Preselection">
            <summary>
            The extension name of the pre-selection data file, which contains the pre-selection data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.AcousticParameterModel">
            <summary>
            The extension name of acoustic parameter model, which contains acoustic parameter model data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.AcousticTransformModel">
            <summary>
            The extension name of acoustic transform model, which contains acoustic parameter model data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.ModelWaveMapping">
            <summary>
            The extension name of the model wave mapping file, which contains the information for debugging.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.TransformModelMapping">
            <summary>
            The extension name of the transform matrix and HMM model mapping file, which contains information for voice adaptation debugging.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.LabelFile">
            <summary>
            The extension name of label file, which contains segmentation information.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.BackendParameterFile">
            <summary>
            The extension name of backend parameter file, which contains any table for backend.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.TransformData">
            <summary>
            The extension name of transform data file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.EnviromentFile">
            <summary>
            The extension name of voice font enviroment file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.Md5FileList">
            <summary>
            The extension name of md5 list file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.Text">
            <summary>
            The extension name of plain text file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.Xml">
            <summary>
            The extension name of XMl file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.Configuration">
            <summary>
            The extension name of configuration file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.SpeechFilingSystem">
            <summary>
            The extension name of configuration file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.CommonPhraseFile">
            <summary>
            The extension name of voice font Common phrase file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.CsvFile">
            <summary>
            The extension name of CSV file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.ExcelFile">
            <summary>
            The extension name of excel file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.ToBIBreakIndexFile">
            <summary>
            The extension name of break index ToBI annotation file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.ToBIToneFile">
            <summary>
            The extension name of boundary tone annotation file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.AcousticTableFile">
            <summary>
            The extension name of acoustic data table file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.ToBIWaveSufferPhoneSegFile">
            <summary>
            The extension name of wave suffer phone segment file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.ToBIWaveSufferSyllableSegFile">
            <summary>
            The extension name of wave suffer syllable segment file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.ToBIWaveSufferWordSegFile">
            <summary>
            The extension name of wave suffer word segment file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.OfflineConfigurationFile">
            <summary>
            The extension name of offline configuration file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.ToBIWaveSufferMarkedFile">
            <summary>
            The extension name of wave suffer marked file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.ToBIAnnotationPackFile">
            <summary>
            The extension name of ToBI annotation pack.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.LatticeFile">
            <summary>
            The extension name of speech recognition lattice file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.RecognitionFile">
            <summary>
            The extension name of speech recognition result file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.HeqFile">
            <summary>
            The extension name of histogram equalization table file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.PitchMarkerFile">
            <summary>
            The extension name of pitch marker file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FileExtensions.NNModel">
            <summary>
            The extension name of NN model, which contains NN model data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.FileExtensions.EnsureExtensionWithoutDelimeter(System.String)">
            <summary>
            Ensure file extension without delimeter.
            </summary>
            <param name="extension">The given extension name.</param>
            <returns>File extension with delimeter.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.FileExtensions.EnsureExtensionWithDelimeter(System.String)">
            <summary>
            Ensure file extension with delimeter.
            </summary>
            <param name="extension">The given extension name.</param>
            <returns>File extension with delimeter.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.FileExtensions.AppendExtensionName(System.String,System.String)">
            <summary>
            Appends the given extension name to the file.
            </summary>
            <param name="file">The given file name without extension name.</param>
            <param name="extensionName">The given extension name.</param>
            <returns>The file name with given extension name.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.FileExtensions.IsWithFileExtension(System.String,System.String)">
            <summary>
            Appends the given extension name to the file.
            </summary>
            <param name="file">The given file name without extension name.</param>
            <param name="extensionName">The given extension name.</param>
            <returns>Whether the file with the specified extension.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.FileExtensions.CreateSearchPatternWithFileExtension(System.String)">
            <summary>
            Create search pattern with file extension.
            </summary>
            <param name="fileExtension">The given file name without extension name.</param>
            <returns>Whether the file with the specified extension.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.FileExtensions.RemoveFilePathExtension(System.String)">
            <summary>
            Remove file path extension.
            </summary>
            <param name="filePath">File path.</param>
            <returns>File path without extension.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsXmlComment">
            <summary>
            Tts xml comment.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.TtsXmlComment"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComment.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.TtsXmlComment"/> class.
            </summary>
            <param name="name">Name of the comment.</param>
            <param name="value">Value of the comment.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComment.Parse(System.Xml.XmlNode)">
            <summary>
            Parse node from XML node.
            </summary>
            <param name="node">XML node.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComment.Parse(System.Xml.XmlReader)">
            <summary>
            Parse comment from XML text reader.
            </summary>
            <param name="reader">XmlReader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComment.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the item to xml writer.
            </summary>
            <param name="writer">XmlWriter.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComment.CreateXmlElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Create xml element.
            </summary>
            <param name="dom">Xml document.</param>
            <param name="xmlNamespace">Xml namespace.</param>
            <returns>Created xml element.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlComment.Timestamp">
            <summary>
            Gets or sets Time stamp.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlComment.Name">
            <summary>
            Gets or sets Name of the comment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlComment.Tag">
            <summary>
            Gets or sets Tag object of the comment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlComment.Value">
            <summary>
            Gets or sets Value of the comment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsXmlStatus">
            <summary>
            Tts XML status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlStatus.UnsetPosition">
            <summary>
            Unset status position.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.TtsXmlStatus"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlStatus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.TtsXmlStatus"/> class.
            </summary>
            <param name="name">Status name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlStatus.#ctor(System.String,Microsoft.Tts.Offline.Utility.TtsXmlStatus.EditStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.TtsXmlStatus"/> class.
            </summary>
            <param name="name">Status name.</param>
            <param name="status">Status.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlStatus.Parse(System.Xml.XmlNode)">
            <summary>
            Parse status from xml node.
            </summary>
            <param name="node">XML node.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlStatus.Parse(System.Xml.XmlReader)">
            <summary>
            Parse status from XML reader.
            </summary>
            <param name="reader">XML reader to parse from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlStatus.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the item to xml writer.
            </summary>
            <param name="writer">XmlWriter.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlStatus.CreateXmlElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Create XML element.
            </summary>
            <param name="dom">XML document.</param>
            <param name="xmlNamespace">XML namespace.</param>
            <returns>Created XML element.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlStatus.DelIndex">
            <summary>
            Gets or sets Deleted index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlStatus.Position">
            <summary>
            Gets or sets Position.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlStatus.Tag">
            <summary>
            Gets or sets Object tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlStatus.Severity">
            <summary>
            Gets or sets Severity string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlStatus.Timestamp">
            <summary>
            Gets or sets Time stamp.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlStatus.Name">
            <summary>
            Gets or sets Status name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlStatus.Status">
            <summary>
            Gets or sets Edit status.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlStatus.OriginalValue">
            <summary>
            Gets or sets Original value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlStatus.Comment">
            <summary>
            Gets or sets Edit comment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsXmlStatus.EditStatus">
            <summary>
            Edit status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlStatus.EditStatus.Original">
            <summary>
            Original status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlStatus.EditStatus.Add">
            <summary>
            Add status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlStatus.EditStatus.Modify">
            <summary>
            Modify status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlStatus.EditStatus.Delete">
            <summary>
            Delete status.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue">
            <summary>
            Voice quality issues.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue._severity">
            <summary>
            Issue severity.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue._issueType">
            <summary>
            Issue Type.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.#ctor(Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.VQSeverity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue"/> class.
            </summary>
            <param name="severity">Severity.</param>
            <param name="issueType">Issue type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.Parse(System.Xml.XmlNode)">
            <summary>
            Parse status from xml node.
            </summary>
            <param name="node">XML node.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.Parse(System.Xml.XmlReader)">
            <summary>
            Parse status from XML reader.
            </summary>
            <param name="reader">XML reader to parse from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the item to xml writer.
            </summary>
            <param name="writer">XmlWriter.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.CreateXmlElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Create XML element.
            </summary>
            <param name="dom">XML document.</param>
            <param name="xmlNamespace">XML namespace.</param>
            <returns>Created XML element.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.Severity">
            <summary>
            Gets Issue severity.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.IssueType">
            <summary>
            Gets Issue type.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.VQSeverity">
            <summary>
            Voice quality issue Severity.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.VQSeverity.High">
            <summary>
            High severity.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.VQSeverity.Medium">
            <summary>
            Medium severity.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlVQIssue.VQSeverity.Low">
            <summary>
            Low severity.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsXmlComments">
            <summary>
            Tts xml comments.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlComments.SelfStatusName">
            <summary>
            The elelment selves status element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsXmlComments.TimeStampFormat">
            <summary>
            Timestamp format.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.TtsXmlComments"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.Reset">
            <summary>
            Reset the status and comments.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.RemoveStatus(System.String)">
            <summary>
            Remove status.
            </summary>
            <param name="name">Status to be removed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.GetSingleStatus(System.String)">
            <summary>
            Get single status.
            </summary>
            <param name="name">Status to be get.</param>
            <returns>Result status.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.RemoveComment(System.String)">
            <summary>
            Remove comment.
            </summary>
            <param name="name">Name of the comment to be removed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.GetSingleComment(System.String)">
            <summary>
            Get single comment.
            </summary>
            <param name="name">Name of the comment to get.</param>
            <returns>Comment value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.GetComments(System.String)">
            <summary>
            Comments to get.
            </summary>
            <param name="name">Comment name to get.</param>
            <returns>Comment values.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.AppendComment(Microsoft.Tts.Offline.Utility.TtsXmlComment,System.Boolean)">
            <summary>
            Append comment.
            </summary>
            <param name="comment">Comment to append.</param>
            <param name="canBeMultiValue">Whether the comment can be mutlti value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.AppendStatus(Microsoft.Tts.Offline.Utility.TtsXmlStatus,System.Boolean)">
            <summary>
            Append status.
            </summary>
            <param name="status">Status of the .</param>
            <param name="canBeMultiValue">Whether the status can be mutlti value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.AppendVQIssue(Microsoft.Tts.Offline.Utility.TtsXmlVQIssue)">
            <summary>
            Append VQ Issues.
            </summary>
            <param name="ttsXmlVQIssue">VQ Issue.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.Parse(System.Xml.XmlReader)">
            <summary>
            Parse Comments from XML reader.
            </summary>
            <param name="reader">Xml reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.Parse(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse TtsXmlComment list.
            </summary>
            <param name="node">XmlNode.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.WriteToXml(System.Xml.XmlWriter)">
            <summary>
            Write the item to xml writer.
            </summary>
            <param name="writer">XmlWriter.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsXmlComments.CreateXmlElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Create XML element of the TtsXMLComments.
            </summary>
            <param name="dom">Xml document.</param>
            <param name="xmlNamespace">Xml name space.</param>
            <returns>Created XML element.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlComments.Tag">
            <summary>
            Gets or sets Tag object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlComments.TtsXmlStatusDict">
            <summary>
            Gets XML status dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlComments.TtsXmlCommentDict">
            <summary>
            Gets XML comment dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsXmlComments.TtsXmlVQIssueCollection">
            <summary>
            Gets XML VQ Issue Collection.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.ConfigurationException">
            <summary>
            Class to hold all configuration exception.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ConfigurationException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ConfigurationException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.ConfigurationReference">
            <summary>
            Class to process the reference in configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationReference.ReferenceCharacter">
            <summary>
            The character indicating whether the string is reference or not.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationReference.#ctor">
            <summary>
            Initializes a new instance of the ConfigurationReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ConfigurationReference class.
            </summary>
            <param name="module">The referenced module.</param>
            <param name="name">The referenced name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationReference.IsReference(System.String)">
            <summary>
            Checks the input string is a reference or not.
            </summary>
            <param name="value">The given string to check.</param>
            <returns>True indicates the given string is a reference, otherwise indicates a constant value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationReference.Parse(System.String)">
            <summary>
            Parses the reference string.
            </summary>
            <param name="value">The given string to parse.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationReference.ToString">
            <summary>
            Gets the string to present this object.
            </summary>
            <returns>A string to present this object.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationReference.Module">
            <summary>
            Gets or sets the referenced module.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationReference.Name">
            <summary>
            Gets or sets the referenced name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase">
            <summary>
            Class to process the module element in configuration file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase.#ctor">
            <summary>
            Initializes a new instance of the ConfigurationItemBase class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase.Load(System.Xml.XmlElement)">
            <summary>
            Loads the configuration element from a given XmlElement.
            </summary>
            <param name="element">The given XmlElement to load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase.ToElement(System.Xml.XmlDocument,System.Xml.Schema.XmlSchema)">
            <summary>
            Converts the configuration element to XmlElement.
            </summary>
            <param name="doc">The given XmlDocument who will be the document of returned XmlElement.</param>
            <param name="schema">The given XmlSchema.</param>
            <returns>The XmlElement holds this element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase.SetInputValue(System.String,System.String,System.Boolean)">
            <summary>
            Sets input value in this configuration item. If the given input is not exist a new input will be added.
            </summary>
            <param name="name">The given input name.</param>
            <param name="value">The value want to set to the given input.</param>
            <param name="isCdataSection">The value to indicate whether the value is a CDATA section.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase.ContainsInput(System.String)">
            <summary>
            Tests whether this configuration item contains the given input.
            </summary>
            <param name="name">The given input name.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase.GetInputValue(System.String)">
            <summary>
            Gets input value in this configuration item. If the given input is not exist a new input will be added.
            </summary>
            <param name="name">The given input name.</param>
            <returns>The value of the given input.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase.RemoveInput(System.String)">
            <summary>
            Removes the given input in this configuration item.
            </summary>
            <param name="name">The given input name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase.LoadInputs(System.Xml.XmlElement)">
            <summary>
            Loads the inputs sub-element of this element.
            </summary>
            <param name="element">The given XmlElement to load input sub-element.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase.Inputs">
            <summary>
            Gets or sets the all inputs in this configuration item.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.Configuration">
            <summary>
            Class to load/save configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.Configuration.RefFilePrefix">
            <summary>
            Reference configuration prefix.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.Configuration.RootElementName">
            <summary>
            The root element name of this configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.Configuration._schema">
            <summary>
            The schema of this configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.#ctor">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.ContainsModule(System.String)">
            <summary>
            Tests whether the given module is in this configuration.
            </summary>
            <param name="module">The given module name.</param>
            <returns>True indicates the module exists. Otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.FindModule(System.String)">
            <summary>
            Finds the given module in this configuration.
            </summary>
            <param name="module">The given module name.</param>
            <returns>The module want to find.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.RemoveModule(System.String)">
            <summary>
            Removes the given module in this configuration.
            </summary>
            <param name="module">The module.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.ContainsInclude(System.String)">
            <summary>
            Tests whether the given include is in this configuration.
            </summary>
            <param name="src">The srouce of the include.</param>
            <returns>True indicates the include exists. Otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.FindIncludes(System.String)">
            <summary>
            Finds the given includes in this configuration.
            </summary>
            <param name="src">The srouce of the include.</param>
            <returns>A Dictionary object to contains the includes, whose key is the index of the include
            and value is the include.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.RemoveConfigurationItem(Microsoft.Tts.Offline.FlowEngine.ConfigurationItemBase)">
            <summary>
            Removes the given item in this configuration.
            </summary>
            <param name="item">The given configuration item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.InsertAllModules(Microsoft.Tts.Offline.FlowEngine.Configuration,System.Int32)">
            <summary>
            Inserts all modules from given configuration into this configuration.
            </summary>
            <param name="config">The given configuration.</param>
            <param name="index">The beginning index to insert all modules.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.AddConfigElement(System.String,System.String)">
            <summary>
            Add configuration element to the configuration.
            </summary>
            <param name="inputElementName"> The input element name. .</param>
            <param name="elementAttribute"> The input element attribute. .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.SkipAllModules(System.Boolean)">
            <summary>
            Skip all modules in this configuration.
            </summary>
            <param name="skip">The value indicating whether to skip.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.GetAllModules">
            <summary>
            Gets the all modules in this configuration file in order.
            </summary>
            <returns>The all modules in this configuration file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.Load(System.String)">
            <summary>
            Loads the configuration from the given file name/URL.
            </summary>
            <remarks>If the input configFile begins with character '#', it means the file is an internal resource.</remarks>
            <param name="configFile">The given file name/URL to read.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.Load(System.IO.Stream)">
            <summary>
            Loads the configuration from the given stream.
            </summary>
            <param name="stream">The given stream to read.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.Save(System.String)">
            <summary>
            Saves the configuration to the given file name/URL.
            </summary>
            <param name="configFile">The given file name/URL to write.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.Save(System.IO.Stream)">
            <summary>
            Saves the configuration to the given stream.
            </summary>
            <param name="stream">The given stream to write.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.Load(System.Xml.XmlDocument)">
            <summary>
            Loads configuration from the XmlDocument.
            </summary>
            <param name="doc">The given XmlDocument.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.Configuration.ToDocument">
            <summary>
            Converts the configuration to XmlDocument.
            </summary>
            <returns>The converted XmlDocument.</returns>
        </member>
        <member name="E:Microsoft.Tts.Offline.FlowEngine.Configuration.ConfigurationResolve">
            <summary>
            The event to resolve the inside configuration file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.Configuration.Schema">
            <summary>
            Gets the configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.Configuration.Items">
            <summary>
            Gets the configuration items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.Configuration.HandlerNamespace">
            <summary>
            Gets or sets handler namespace.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.Configuration.ConfigurationResolver">
            <summary>
            The delegate to resolve the inside configuration file.
            </summary>
            <param name="sender">The Configuration object to send this event.</param>
            <param name="eventArgs">The event argements.</param>
            <returns>The stream contains the inside configuration file.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.ConfigurationInclude">
            <summary>
            Class to process the include element in configuration file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationInclude.ElementName">
            <summary>
            The name of include element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationInclude.SrcAttribute">
            <summary>
            The name of the "src" attribute.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationInclude.SkipAttribute">
            <summary>
            The name of the "skip" attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationInclude.ParsesInclude(Microsoft.Tts.Offline.FlowEngine.Configuration.ConfigurationResolver)">
            <summary>
            Parses the included file.
            </summary>
            <param name="resolver">The resolver to resolve the include file.</param>
            <returns>The Dictionary of ConfigurationModule.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationInclude.Load(System.Xml.XmlElement)">
            <summary>
            Loads the configuration include element from a given XmlElement.
            </summary>
            <param name="element">The given XmlElement to load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationInclude.ToElement(System.Xml.XmlDocument,System.Xml.Schema.XmlSchema)">
            <summary>
            Converts the configuration include element to XmlElement.
            </summary>
            <param name="doc">The given XmlDocument who will be the document of returned XmlElement.</param>
            <param name="schema">The given XmlSchema.</param>
            <returns>The XmlElement holds this input element.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationInclude.Source">
            <summary>
            Gets or sets the include source.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationInclude.Skip">
            <summary>
            Gets or sets a value indicating whether the skip attribute.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput">
            <summary>
            Class to process the input element in configuration file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.InputElementName">
            <summary>
            The name of input element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.InputElementNameAttribute">
            <summary>
            The name of the "name" attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.ValidateCdataSection(System.String,System.Xml.Schema.XmlSchemaInclude,System.String)">
            <summary>
            Validates the CDATA section.
            </summary>
            <param name="cdata">The Xml string in CDATA section.</param>
            <param name="include">The schema should be included.</param>
            <param name="type">The type name in the included schema to validate the CDATA.</param>
            <returns>The schema which validated the CDATA.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.Load(System.Xml.XmlElement)">
            <summary>
            Loads the configuration input element from a given XmlElement.
            </summary>
            <param name="element">The given XmlElement to load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.ToElement(System.Xml.XmlDocument,System.Xml.Schema.XmlSchema)">
            <summary>
            Converts the configuration input element to XmlElement.
            </summary>
            <param name="doc">The given XmlDocument who will be the document of returned XmlElement.</param>
            <param name="schema">The given XmlSchema.</param>
            <returns>The XmlElement holds this input element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.GenerateDocumentForCDataSection(System.String)">
            <summary>
            Generates an integrate document for CDATA section.
            </summary>
            <param name="cdata">The given CDATA section.</param>
            <returns>The generated document.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.GenerateSchemaForCDataSection(System.Xml.Schema.XmlSchemaInclude,System.String,System.String)">
            <summary>
            Generates a schema to validate the generated document.
            </summary>
            <param name="include">The schema should be included.</param>
            <param name="name">The name of the CDATA section.</param>
            <param name="type">The type name in the included schema to validate the CDATA.</param>
            <returns>The generated schema.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.Name">
            <summary>
            Gets or sets the name of the input item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.Value">
            <summary>
            Gets or sets the value of the input item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationInput.IsCdataSection">
            <summary>
            Gets or sets a value indicating whether the value is a CData section.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule">
            <summary>
            Class to process the module element in configuration file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.ElementName">
            <summary>
            The name of module element.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.NameAttribute">
            <summary>
            The name of the "name" attribute.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.TypeAttribute">
            <summary>
            The name of the "type" attribute.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.SkipAttribute">
            <summary>
            The name of the "skip" attribute.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.KeepIntermediateDataAttribute">
            <summary>
            The name of the "keepIntermediateData" attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.Load(System.Xml.XmlElement)">
            <summary>
            Loads the configuration module element from a given XmlElement.
            </summary>
            <param name="element">The given XmlElement to load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.ToElement(System.Xml.XmlDocument,System.Xml.Schema.XmlSchema)">
            <summary>
            Converts the configuration module element to XmlElement.
            </summary>
            <param name="doc">The given XmlDocument who will be the document of returned XmlElement.</param>
            <param name="schema">The given XmlSchema.</param>
            <returns>The XmlElement holds this input element.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.Namespace">
            <summary>
            Gets or sets the namespace of module type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.Name">
            <summary>
            Gets or sets the name of module element.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.Type">
            <summary>
            Gets or sets the type of module element.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.Skip">
            <summary>
            Gets or sets a value indicating whether to skip this module.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.KeepIntermediateData">
            <summary>
            Gets or sets a value indicating whether to keep the intermediate data of this module.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.ConfigurationModule.FullType">
            <summary>
            Gets full type of this module.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo">
            <summary>
            A helper class to get the information of FlowHandler.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo._loadedAssemblies">
            <summary>
            The all loaded assemblies.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo._allHandlerTypeInfos">
            <summary>
            The all handler type info in those loaded assemblies.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the HandlerTypeInfo class.
            </summary>
            <param name="type">The given type of the class.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo.GetAllHandlerTypeInfo">
            <summary>
            Gets the information of all types which are extended from the FlowHandler class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo.AllHandlerTypeInfos">
            <summary>
            Gets the all handler type info.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo.FullName">
            <summary>
            Gets the type name of the FlowHandler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo.Type">
            <summary>
            Gets the type of the FlowHandler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo.Inputs">
            <summary>
            Gets the all inputs of the FlowHandler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo.Parsers">
            <summary>
            Gets the all parsers handler of the FlowHandler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.HandlerTypeInfo.Outputs">
            <summary>
            Gets the all outputs of the FlowHandler.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.FlowItem">
            <summary>
            A class to store the all information of a single engine item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowItem.#ctor(Microsoft.Tts.Offline.FlowEngine.ConfigurationModule)">
            <summary>
            Initializes a new instance of the FlowItem class.
            </summary>
            <param name="config">The given configuration module item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowItem.InitializeLogger(Microsoft.Tts.Offline.Utility.ILogger,Microsoft.Tts.Offline.Utility.ILogger)">
            <summary>
            Initializes the logger of this engine item.
            </summary>
            <param name="detailLogger">The logger which will contains more detailed log.</param>
            <param name="compactLogger">The logger which will contains only the important log.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowItem.InitializeInputs(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.FlowEngine.FlowItem})">
            <summary>
            Initializes the inputs of this engine item.
            </summary>
            <param name="items">The previous engine items.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowItem.UpdateImplictInputs(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.FlowEngine.FlowItem})">
            <summary>
            Updates the inputs to setup the default parameters transmission.
            If there is no anything found, the default value will be used.
            </summary>
            <param name="items">The previous engine items.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowItem.SetValue(System.String,System.String)">
            <summary>
            Sets the value to the given instance.
            </summary>
            <param name="name">The property's name of the given instance will be set the value to.</param>
            <param name="value">The value will be set to the instance.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowItem.SetValue(System.String,Microsoft.Tts.Offline.FlowEngine.FlowItem,System.String)">
            <summary>
            Sets the value to the given instance from another instance.
            </summary>
            <param name="inputName">The property's name of the given instance will be set the value to.</param>
            <param name="item">The instance which will be get the value from.</param>
            <param name="outputName">The property's name of the given instatnce will be get the value from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowItem.ParseCdata(System.String,System.String)">
            <summary>
            Parses CDATA section in input.
            </summary>
            <param name="name">The method's name of the given instance will be used to parse the CDATA.</param>
            <param name="cdata">The CDATA will be parsed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowItem.ValidateInput(Microsoft.Tts.Offline.FlowEngine.ConfigurationInput)">
            <summary>
            Validates the name of the input from configuration.
            </summary>
            <param name="input">The configuration input.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowItem.ValidateOutput(System.String)">
            <summary>
            Validates the name of the output from configuration.
            </summary>
            <param name="name">The name of the output.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowItem.Config">
            <summary>
            Gets the configuratuion module item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowItem.Handler">
            <summary>
            Gets the handler object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowItem.TypeInfo">
            <summary>
            Gets the handler type info.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowItem.Name">
            <summary>
            Gets the name of this item.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.FlowEngine">
            <summary>
            A class works as an engine to run the inputed pipeline.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.FlowEngine._items">
            <summary>
            The pipeline setup according to the configuration items.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.FlowEngine._detailLogger">
            <summary>
            The logger to log the all dumped information.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.FlowEngine._compactLogger">
            <summary>
            The logger to log the important information.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowEngine.#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.FlowEngine.ConfigurationModule},System.String)">
            <summary>
            Initializes a new instance of the FlowEngine class.
            </summary>
            <param name="configItems"> The given all configuration items. .</param>
            <param name="logFile"> The given file name to store the log. .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowEngine.#ctor(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.FlowEngine.ConfigurationModule},System.String,Microsoft.Tts.Offline.StatusRecorder)">
            <summary>
            Initializes a new instance of the FlowEngine class.
            </summary>
            <param name="configItems"> The given all configuration items. .</param>
            <param name="logFile"> The given file name to store the log. .</param>
            <param name="statusRecorder"> The status recorder for the engine. .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowEngine.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.FlowEngine.ConfigurationModule},System.String)">
            <summary>
            Initializes a new instance of the FlowEngine class.
            </summary>
            <param name="engineName">Engine name.</param>
            <param name="configItems">The given all configuration items.</param>
            <param name="logFile">The given file name to store the log.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowEngine.ToString">
            <summary>
            Get a string to present the configuration.
            </summary>
            <returns>The string to present the configuration of this object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowEngine.Execute">
            <summary>
            Execute the pipeline.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowEngine.FindItem(System.Func{Microsoft.Tts.Offline.FlowEngine.FlowItem,System.Boolean})">
            <summary>
            Finds the engine items according to the function.
            </summary>
            <param name="func">The function for the given engine item.</param>
            <returns>The engine items whose meet the function.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowEngine.FindItem(System.String)">
            <summary>
            Finds the engine item according to the name.
            </summary>
            <param name="name">Name.</param>
            <returns>The engine item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowEngine.Log(System.String,System.Object[])">
            <summary>
            Writes the log into log file and Console.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Arguments for format string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowEngine.SkipFinishedModules(Microsoft.Tts.Offline.StatusRecorder,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.FlowEngine.ConfigurationModule})">
            <summary>
            Process the status information.
            </summary>
            <param name="statusRecorder"> The status recorder with status information. .</param>
            <param name="configItems"> The given all configuration items. .</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.FlowEngine.FlowHandler">
            <summary>
            This abstract class is used to organize the pipeline of the FlowHandler.
            Every step in FlowHandler will be extended from this class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.FlowHandler.WarningFileName">
            <summary>
            Warning file name of each hanlder.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.FlowHandler.paraComputePlatform">
            <summary>
            The parallel computation platform. 
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FlowEngine.FlowHandler.logger">
            <summary>
            The ILogger interface to log the runtime information.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.#cctor">
            <summary>
            Initializes static members of the FlowHandler class.
            Set the default maximum thread number as the processor number.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FlowHandler class.
            </summary>
            <param name="name">The given name of this handler.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.GetParaPlatformType">
            <summary>
            Return the paltform type.
            </summary>
            <returns>Computation platform.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.DeleteIntermediateDataAsyn(System.String,Microsoft.Tts.Offline.Utility.ILogger)">
            <summary>
            Delete unnecessary file asynchronously.
            </summary>
            <param name="dataPath">The  full path of target file.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.ParallelComputing(Microsoft.Tts.Offline.Utility.ParallelParameter)">
            <summary>
            The method to perform parallel computing.
            </summary>
            <param name="parallelParameter">The instance of ParallelParameter, which is a parallel computation unit.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.ParallelComputing(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.Utility.ParallelParameter})">
            <summary>
            The method to perform parallel computing.
            </summary>
            <param name="parallelParameters">The collection for ParallelParameter, which is a parallel computation unit.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.PrepareRuntimeInputs">
            <summary>
            The method PrepareRuntimeInput() will be called to perform fill the runtime parameter of this handler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.Execute(System.Boolean,System.Boolean)">
            <summary>
            The main entry to execute this handler.
            </summary>
            <param name="enable">Indicator to this handler is enabled or disabled. If this handler is
            Disabled, the abstract Execute() methods will not be invoked. However, the abstract ValidateResults(bool enable)
            methods will be invoked to setup the result of this handler.</param>
            <param name="keepIntermediateData">Indicator to whether keep the intermediate data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.Log(System.String,System.Object[])">
            <summary>
            Write the given string into all registered Observer.
            </summary>
            <param name="format">The format of the string.</param>
            <param name="arg">The argument of the string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.LogWithTime(System.String,System.Object[])">
            <summary>
            Write the given string into all registered Observer with time info.
            </summary>
            <param name="format">The format of the string.</param>
            <param name="arg">The argument of the string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.GetOutPathUnderResultDirectory(System.String)">
            <summary>
            Get the output under the result directory.
            </summary>
            <param name="outPath">Out path.</param>
            <returns>Path under result directory.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.EnsureFileExist(System.String,System.String,System.Object[])">
            <summary>
            Throws FileNotFoundException() when the given file does not exist.
            </summary>
            <param name="file">The given file to be validated.</param>
            <param name="exceptionFormat">The format for the message in the thrown exception when dependency checking is failed.</param>
            <param name="exceptionArg">The argument for the message in the thrown exception when dependency checking is failed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.EnsureDirectoryExist(System.String,System.String,System.Object[])">
            <summary>
            Throws DirectoryNotFoundException() when the given directory does not exist.
            </summary>
            <param name="directory">The given directory to be validated.</param>
            <param name="exceptionFormat">The format for the message in the thrown exception when dependency checking is failed.</param>
            <param name="exceptionArg">The argument for the message in the thrown exception when dependency checking is failed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.EnsureRange``1(``0,``0,``0,System.String,System.Object[])">
            <summary>
            Throws ArgumentOutOfRangeException() when the given value is out of the range [minValue, maxValue].
            </summary>
            <typeparam name="T">The type of the given value.</typeparam>
            <param name="value">The given value to be validated.</param>
            <param name="minValue">The minimum boundary value.</param>
            <param name="maxValue">The maximum boundary value.</param>
            <param name="exceptionFormat">The format for the message in the thrown exception when dependency checking is failed.</param>
            <param name="exceptionArg">The argument for the message in the thrown exception when dependency checking is failed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.EnsureEnumable``1(``0,System.Collections.Generic.ICollection{``0},System.String,System.Object[])">
            <summary>
            Throws ArgumentException() when the given value is not in valid set.
            </summary>
            <typeparam name="T">The type of the given value.</typeparam>
            <param name="value">The given value to be validated.</param>
            <param name="fullSet">The full set of valid value.</param>
            <param name="exceptionFormat">The format for the message in the thrown exception when dependency checking is failed.</param>
            <param name="exceptionArg">The argument for the message in the thrown exception when dependency checking is failed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.EnsureEnum(System.Type,System.String,System.String,System.Object[])">
            <summary>
            Throws ArgumentException() when the given value is not a valid Enum value.
            </summary>
            <param name="type">The type of the Enum.</param>
            <param name="value">The given string value.</param>
            <param name="exceptionFormat">The format for the message in the thrown exception when dependency checking is failed.</param>
            <param name="exceptionArg">The argument for the message in the thrown exception when dependency checking is failed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.EnsureNotNull(System.String,System.String,System.Object[])">
            <summary>
            Throws ArgumentException() when the given value is null or empty.
            </summary>
            <param name="str">The given string to test.</param>
            <param name="exceptionFormat">The format for the message in the thrown exception when dependency checking is failed.</param>
            <param name="exceptionArg">The argument for the message in the thrown exception when dependency checking is failed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.EnsureNotNull(System.Object,System.String,System.Object[])">
            <summary>
            Throws ArgumentException() when the given value is null.
            </summary>
            <param name="obj">The given value to test.</param>
            <param name="exceptionFormat">The format for the message in the thrown exception when dependency checking is failed.</param>
            <param name="exceptionArg">The argument for the message in the thrown exception when dependency checking is failed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.ValidateArguments">
            <summary>
            The abstract method ValidateArguments() will be called to perform the validation
            For the inputs of this handler.
            This method won't be called if this handler is disabled.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.Execute">
            <summary>
            The abstract method Execute() will be called to perform the action of this handler.
            This method won't be called if this handler is disabled.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.ValidateResults(System.Boolean)">
            <summary>
            The abstract method ValidateResults(bool enable) will be used to fill result generated by this handler
            After Execute().
            This method will be called whenever this handler is disabled or not.
            </summary>
            <param name="enable">Indicator to whether flow is enable.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.EnsureCurrentStepExist(System.String)">
            <summary>
            Test whether the step exists in the finished steps array of StatusRecorder.
            </summary>
            <param name="currentStep"> The step name need to check. .</param>
            <returns> Whether the step exists or not. .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.RecordCurrentStep(System.String)">
            <summary>
            If the StepStatusRecorder is not null, recorde the currentStep,
            Otherwise not.
            </summary>
            <param name="currentStep"> The step name need to record. .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.DeleteOnLocal(System.String)">
            <summary>
            Delete of a local directory, enhancement of Directory.Delete.
            Resursively.
            </summary>
            <param name="pathname">Path name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FlowEngine.FlowHandler.RemoveReadOnlyAttr(System.String)">
            <summary>
            Remove the read only attribute of the files.
            </summary>
            <param name="fname">The fname.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.ParaComputePlatform">
            <summary>
            Gets the public computation platform.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.MaxThreads">
            <summary>
            Gets or sets the maximum thread number.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.InWorkingDirectory">
            <summary>
            Gets or sets the working directory for this object.
            Input of this handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.RuntimeOutputs">
            <summary>
            Gets the runtime input, this is used for letting module to abtain parameter
            At runtime, not only from configuration file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.Logger">
            <summary>
            Gets or sets the ILogger interface.
            Input of this handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.WarningWriter">
            <summary>
            Gets or sets the warning writer.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.Name">
            <summary>
            Gets the name of this handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.StepStatusRecorder">
            <summary>
            Gets or sets the status recorder of this handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.IntermediateDataDirectory">
            <summary>
            Gets the directory to place the intermediate data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.ResultDirectory">
            <summary>
            Gets the directory to place the result data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.Description">
            <summary>
            Gets or sets the description of this handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FlowEngine.FlowHandler.WarningFilePath">
            <summary>
            Gets the warning file path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.Complex">
            <summary>
            Complex.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.Complex.Real">
            <summary>
            Real.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.Complex.Imaginary">
            <summary>
            Imaginary.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.Complex"/> struct.
            </summary>
            <param name="real">Real part of this complex.</param>
            <param name="imaginary">Imaginary part of this complex.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.Complex"/> struct.
            </summary>
            <param name="real">Real part of this complex.</param>
            <param name="imaginary">Imaginary part of this complex.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.op_Addition(Microsoft.Tts.Offline.Waveform.Complex,Microsoft.Tts.Offline.Waveform.Complex)">
            <summary>
            Operator +.
            </summary>
            <param name="x">Left operand.</param>
            <param name="y">Right operand.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.op_Subtraction(Microsoft.Tts.Offline.Waveform.Complex,Microsoft.Tts.Offline.Waveform.Complex)">
            <summary>
            Operator -.
            </summary>
            <param name="x">Left operand.</param>
            <param name="y">Right operand.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.Add(Microsoft.Tts.Offline.Waveform.Complex,Microsoft.Tts.Offline.Waveform.Complex)">
            <summary>
            Add.
            </summary>
            <param name="x">Left operand.</param>
            <param name="y">Right operand.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.Subtract(Microsoft.Tts.Offline.Waveform.Complex,Microsoft.Tts.Offline.Waveform.Complex)">
            <summary>
            Subtract.
            </summary>
            <param name="x">Left operand.</param>
            <param name="y">Right operand.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.Multiply(Microsoft.Tts.Offline.Waveform.Complex,Microsoft.Tts.Offline.Waveform.Complex)">
            <summary>
            Multiply.
            </summary>
            <param name="x">Left operand.</param>
            <param name="y">Right operand.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.op_Multiply(Microsoft.Tts.Offline.Waveform.Complex,Microsoft.Tts.Offline.Waveform.Complex)">
            <summary>
            Operator *.
            </summary>
            <param name="x">Left operand.</param>
            <param name="y">Right operand.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.op_Multiply(System.Single,Microsoft.Tts.Offline.Waveform.Complex)">
            <summary>
            Operator *.
            </summary>
            <param name="r">Left operand.</param>
            <param name="b">Right operand.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.op_Division(Microsoft.Tts.Offline.Waveform.Complex,System.Single)">
            <summary>
            Operator /.
            </summary>
            <param name="b">Left operand.</param>
            <param name="r">Right operand.</param>      
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.Divide(Microsoft.Tts.Offline.Waveform.Complex,System.Single)">
            <summary>
            Operator Divide.
            </summary>
            <param name="b">Left operand.</param>
            <param name="r">Right operand.</param>      
            <returns>Result value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.op_Equality(Microsoft.Tts.Offline.Waveform.Complex,Microsoft.Tts.Offline.Waveform.Complex)">
            <summary>
            Operator ==.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.op_Inequality(Microsoft.Tts.Offline.Waveform.Complex,Microsoft.Tts.Offline.Waveform.Complex)">
            <summary>
            Operator !=.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if not equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.Conjugate(Microsoft.Tts.Offline.Waveform.Complex@)">
            <summary>
            Conjugate the complex.
            </summary>
            <param name="complex">Input complex.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.Conjugate(Microsoft.Tts.Offline.Waveform.Complex[]@)">
            <summary>
            Conjugate the complex array.
            </summary>
            <param name="complexes">Input complex array.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.Short2Complex(System.Int16[],Microsoft.Tts.Offline.Waveform.Complex[]@,System.Boolean)">
            <summary>
            Convert a short array to a complex array.
            </summary>
            <param name="shortArray">Input value array.</param>
            <param name="complexArray">Complex array.</param>
            <param name="real">Give short value to real or imaginary of the complex.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.Mode">
            <summary>
            Mode.
            </summary>
            <returns>Mode of complex.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>String presentation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.Equals(System.Object)">
            <summary>
            Equal.
            </summary>
            <param name="obj">Other object to compare with.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Complex.GetHashCode">
            <summary>
            Get hash code for this object.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.Fft">
            <summary>
            Fast Fourier Transfer.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Fft.Transfer(System.Int16[])">
            <summary>
            Transfer.
            </summary>
            <param name="samples">Input value array.</param>
            <returns>Output values array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Fft.Transfer(System.Boolean,Microsoft.Tts.Offline.Waveform.Complex[]@)">
            <summary>
            Transfer.
            </summary>
            <param name="invert">Do invert transfering or not.</param>
            <param name="complexs">Complex array.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Fft.Transfer(System.Boolean,System.Int16[],System.Single[]@)">
            <summary>
            Transfer.
            </summary>
            <param name="invert">Do invert transfering or not.</param>
            <param name="samples">Input value array.</param>
            <param name="outputValues">Output value array.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Fft.FFT(Microsoft.Tts.Offline.Waveform.Complex[],System.Boolean)">
            <summary>
            Do FFT recursive.
            </summary>
            <param name="input">Complex array.</param>
            <param name="invert">Do invert transfering or not.</param>
            <returns>The FFT result complex array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Fft.GenHamWindow(System.Int32)">
            <summary>
            Generate precomputed Hamming window function.
            </summary>
            <param name="frameSize">Frame size.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Fft.Ham(Microsoft.Tts.Offline.Waveform.Complex[]@)">
            <summary>
            Apply Hamming Window to Speech frame s.
            </summary>
            <param name="complex">Complex array.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.Fft.FftWidth">
            <summary>
            Gets or sets FFT width.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.Fft.WindowSize">
            <summary>
            Gets or sets Window size.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.Fft.WindowIncrement">
            <summary>
            Gets or sets Window increment step length.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.Riff">
            <summary>
            Definition of RIFF.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.Riff.IdUndefined">
            <summary>
            IdUndefined .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.Riff.IdRiff">
            <summary>
            IdRiff .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.Riff.IdWave">
            <summary>
            IdWave .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.Riff.IdFormat">
            <summary>
            IdFormat .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.Riff.IdData">
            <summary>
            IdData .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.Riff.IdText">
            <summary>
            IdText .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Riff.ReadWaveFile(System.String)">
            <summary>
            Load waveform data from file.
            </summary>
            <param name="filePath">Source file.</param>
            <returns>Riff loaded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Riff.ReadWave(System.IO.Stream)">
            <summary>
            Read waveform data from wave stream.
            </summary>
            <param name="stream">Wave stream.</param>
            <returns>Riff loaded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Riff.SaveWaveFile(System.String,Microsoft.Tts.Offline.Waveform.Riff)">
            <summary>
            Save this Riff to waveform file.
            </summary>
            <param name="filePath">Target file.</param>
            <param name="riff">Riff data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Riff.GetChunk(System.Int32)">
            <summary>
            Find riff chunk for certain Id.
            </summary>
            <param name="id">Identify to find.</param>
            <returns>RiffChunk found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Riff.LoadHead(System.IO.BinaryReader)">
            <summary>
            Load Riff data head from binary stream.
            </summary>
            <param name="br">Binart stream.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Riff.SaveHead(System.IO.BinaryWriter)">
            <summary>
            Save this Riff to binary stream.
            </summary>
            <param name="bw">Binary writer to save.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.Riff.Chunks">
            <summary>
            Gets Riff chunks in this Riff.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.Riff.Id">
            <summary>
            Gets or sets Identify for this Riff.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.Riff.RiffType">
            <summary>
            Gets or sets Type of this Riff.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.Riff.Size">
            <summary>
            Gets or sets Data length/size of this Riff.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.Riff.TotalSize">
            <summary>
            Gets Total size for the riff data including head data.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.RiffChunk">
            <summary>
            Riff chunk.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.RiffChunk.GetData">
            <summary>
            Data in byte array.
            </summary>
            <returns>Chunk data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.RiffChunk.SetData(System.Byte[])">
            <summary>
            Set new data.
            </summary>
            <param name="value">New value.</param>
            <returns>Old value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.RiffChunk.Load(System.IO.BinaryReader,System.Int32)">
            <summary>
            Load data from binary stream for certain type.
            </summary>
            <param name="br">Binary stream.</param>
            <param name="chunkIdType">Id type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.RiffChunk.Append(System.Byte[])">
            <summary>
            Append new data to original data.
            </summary>
            <param name="newData">New data array.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.RiffChunk.Save(System.IO.BinaryWriter)">
            <summary>
            Save this to bindary stream.
            </summary>
            <param name="bw">Binary stream to save into.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.RiffChunk.Id">
            <summary>
            Gets or sets Identify.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.RiffChunk.Size">
            <summary>
            Gets or sets Data size.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.RiffChunk.TotalSize">
            <summary>
            Gets Total size for the chunk including head data.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WaveFile">
            <summary>
            Class to manage waveform file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.DetectNoise(System.Int16[])">
            <summary>
            Detect noise in waveform.
            </summary>
            <param name="samples">Waveform samples.</param>
            <returns>Count of noise points.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.ReadFormat(System.String)">
            <summary>
            Read wave file format.
            </summary>
            <param name="filePath">Waveform file to read format.</param>
            <returns>WaveFormat.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.ReadSampleCount(System.String)">
            <summary>
            Read the sample count of a waveform file.
            </summary>
            <param name="filePath">Waveform file to read sample count.</param>
            <returns>Sample count of the waveform file. if -1 is returned.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.ReadWaveFile(System.String)">
            <summary>
            Load a waveform file from file.
            </summary>
            <param name="filePath">Waveform file to load from.</param>
            <returns>WaveFile.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.WriteWaveFile(System.String,System.Single[],System.Int32)">
            <summary>
            Write a Single[] to a WAV file. Mostly for debugging purposes, this
            Routine generates a WAV file whose duration is the same as
            That of the original waveform.
            </summary>
            <param name="filePath">Target file to save.</param>
            <param name="outWave">Waveform samples to save.</param>
            <param name="samplesPerSecond">Samples per second.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.SplitIntoTwoChannels(Microsoft.Tts.Offline.Waveform.WaveFile)">
            <summary>
            Split a 2-channel waveform file into two waveform file.
            </summary>
            <param name="waveFile">Source 2-channel waveform file instance.</param>
            <returns>2 waveform files in the collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.MergeTwoChannels(Microsoft.Tts.Offline.Waveform.WaveFile,Microsoft.Tts.Offline.Waveform.WaveFile)">
            <summary>
            Merge two waveform files into 2-channel waveform file.
            </summary>
            <param name="leftFile">Left waveform file for left channel, i.e. first channel.</param>
            <param name="rightFile">Right waveform file for left channel, i.e. second channel.</param>
            <returns>Merged waveform file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.Save(System.String)">
            <summary>
            Save this instance to waveform file.
            </summary>
            <param name="filePath">Target file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.Load(System.String)">
            <summary>
            Load wavefile instance from waveform file path.
            </summary>
            <param name="filePath">Source file to load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.Load(System.IO.Stream)">
            <summary>
            Load wavefile instance from waveform stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.SplitChannels">
            <summary>
            Split all channels to byte array.
            </summary>
            <returns>Splitted channels data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.Cut(System.Double,System.Double)">
            <summary>
            Cut certain piece of data in this waveform file.
            </summary>
            <param name="startTime">Start time in second.</param>
            <param name="duration">Waveform time duration in second.</param>
            <returns>Cut wavefile.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.Append(Microsoft.Tts.Offline.Waveform.WaveFile)">
            <summary>
            Append other wavefile instance to this instance.
            </summary>
            <param name="wf">Wave file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.GetSoundData">
            <summary>
            Get waveform data in byte array.
            </summary>
            <returns>Sound data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.Amplify(System.Double)">
            <summary>
            Change amplitude of this waveform file. please call 
            CalcMaxAmplifyFactor function first to get the max factor to avoid 
            Get the voice data clipped.
            This function will not apply DC (Direct Current) bias adjustation.
            </summary>
            <param name="factor">
            If the factor is less than 1.0 decreases the amplitude;
            If the factor is greater than 1.0 increases the amplitude.
            if use a negative number to invert the phase of the speech data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.CheckWaveFormat(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check wave file's format according to setting value.
            </summary>
            <param name="samplesPerSecond">Sample per second.</param>
            <param name="channel">Channel number.</param>
            <param name="bytesPerSample">Bytes per sample.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.AmplifyClippedReport(System.Double,System.Int32[])">
            <summary>
            Change amplitude of this waveform file.
            The clipped sample will be reported 
            The length of clipped = length of amplified data + 1, first element of clipped is used to save the number of clipped samples
            The other elements save the postion of clipped samples
            This function will not apply DC (Direct Current) bias adjustation.
            </summary>
            <param name="factor">
            If the factor is less than 1.0 decreases the amplitude;
            If the factor is greater than 1.0 increases the amplitude.
            if use a negative number to invert the phase of the speech data.</param>
            <param name="clipped">Clipped sample position.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.CalcMaxAmplifyFactor">
            <summary>
            Calculate the amplifying factor for all the samples as loud as 
            Possible without clipping.
            </summary>
            <returns>Maximum amplifying factor for this waveform file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.Amplify(System.Int16[],System.Double)">
            <summary>
            Amplify byte stream (16bits audio data).
            </summary>
            <param name="data">Data to be amplified.</param>
            <param name="factor">Amplify factor.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.AmplifyClippedReport(System.Int16[],System.Double,System.Int32[])">
            <summary>
            Amplify byte stream (16bits audio data). Report the clipped sample
            The length of clipped = length of data + 1, first element of clipped is used to save the number of clipped samples
            The other elements save the postion of clipped samples.
            </summary>
            <param name="data">Data to be amplified.</param>
            <param name="factor">Amplify factor.</param>
            <param name="clipped">Clipped sample position.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.SearchMaxVolume(System.Int16[])">
            <summary>
            Search max volume.
            </summary>
            <param name="data">Samples.</param>
            <returns>Maximum volume.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.Initialze">
            <summary>
            Initialize this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.EnsureTwoBytesPerSample">
            <summary>
            Ensure there are two bytes for each sample.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.DoCut(System.Double,System.Double)">
            <summary>
            Exactly do cut operation.
            </summary>
            <param name="starttime">Start time in second.</param>
            <param name="duration">Waveform time duration in second.</param>
            <returns>Riff of the cut piece.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.DoCut(System.Int32,System.Int32)">
            <summary>
            Exactly do cut operation.
            </summary>
            <param name="samplePosition">Start sample position.</param>
            <param name="sampleNumber">Waveform sample length.</param>
            <returns>Riff of the cut piece.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFile.Validate">
            <summary>
            Validate.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFile.Spectrum">
            <summary>
            Gets or sets Spectrum (FFT) data of this wavefile.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFile.DataIn16Bits">
            <summary>
            Gets the audio data in 16bits PCM format.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFile.Duration">
            <summary>
            Gets Waveform time duration in second.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFile.Riff">
            <summary>
            Gets or sets Riff for this waveform file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFile.Format">
            <summary>
            Gets or sets Waveform file format.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFile.FilePath">
            <summary>
            Gets File path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WaveFormatTag">
            <summary>Wave format type.</summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveFormatTag.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveFormatTag.Pcm">
            <summary>
            WAVE_FORMAT_PCM 
            Pcm assumes that the BlockAlign field contains exactly one set of 
            Samples (one block). Also, each sample must be byte-aligned within the block.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveFormatTag.Alaw">
            <summary>
            WAVE_FORMAT_ALAW .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveFormatTag.Mulaw">
            <summary>
            WAVE_FORMAT_MULAW .
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WaveChannel">
            <summary>
            Supported types of channel number of waveform file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveChannel.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveChannel.Mono">
            <summary>
            Mono channel.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveChannel.Stereo">
            <summary>
            Stereo channels.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WaveSamplesPerSecond">
            <summary>
            Supported samples per second of waveform files.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveSamplesPerSecond.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveSamplesPerSecond.Telephone">
            <summary>
            8k Hz for narrow band telephone scenario.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveSamplesPerSecond.Desktop">
            <summary>
            16k Hz for desktop or wide band telephone scenario.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveSamplesPerSecond.FmQuality">
            <summary>
            22k Hz for FM radio audio quality.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveSamplesPerSecond.Recording">
            <summary>
            44.1k Hz for CD audio quality, which is default delivered from recording studio.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WaveBitsPerSample">
            <summary>
            Supported bits per sample of waveform files.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveBitsPerSample.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveBitsPerSample.Eight">
            <summary>
            8 bits, usual for telephone scenario.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveBitsPerSample.Sixteen">
            <summary>
            16 bits, usual for desktop scenario.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WaveFormat">
            <summary>
            Waveform format definition
            For related information see "Details about WAVEFORMATEX Fields" at 
            Http://www.microsoft.com/whdc/device/audio/multichaud.mspx.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.Validate(Microsoft.Tts.Offline.Waveform.WaveFormat)">
            <summary>
            Validate the format data.
            </summary>
            <param name="format">Waveform format.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.op_Equality(Microsoft.Tts.Offline.Waveform.WaveFormat,Microsoft.Tts.Offline.Waveform.WaveFormat)">
            <summary>
            Operator ==.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.op_Inequality(Microsoft.Tts.Offline.Waveform.WaveFormat,Microsoft.Tts.Offline.Waveform.WaveFormat)">
            <summary>
            Operator !=.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if not equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.Load(System.Byte[])">
            <summary>
            Load format from data.
            </summary>
            <param name="chunk">Data to load from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.ToBytes">
            <summary>
            Save this format data into byte array.
            </summary>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.GetHashCode">
            <summary>
            Get hash code.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.Equals(System.Object)">
            <summary>
            Equal this with other instance.
            </summary>
            <param name="obj">Other instance.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.Equals(Microsoft.Tts.Offline.Waveform.WaveFormat)">
            <summary>
            Equal this with other instance.
            </summary>
            <param name="other">Other instance.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.FilterFormatException(System.Exception)">
            <summary>
            Filter format data exception.
            </summary>
            <param name="exception">Exception.</param>
            <returns>True if filtered, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveFormat.Validate">
            <summary>
            Validate data consistence between fields.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFormat.FormatTag">
            <summary>
            Gets or sets Format tag/type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFormat.Channels">
            <summary>
            Gets or sets Channel number the number of interleaved samples per block
            This is the number of individual channels in the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFormat.SamplesPerSecond">
            <summary>
            Gets or sets The intended sample rate for the stream.
            The number of blocks that should be processed in exactly one second.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFormat.AverageBytesPerSecond">
            <summary>
            Gets or sets Average byte number per second, used for buffer size estimation, 
            So this number is calculated on gross block size.
            This value alway is the product of BlockAlign and SamplesPerSecond.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFormat.BlockAlign">
            <summary>
            Gets or sets Data block align.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFormat.BitsPerSample">
            <summary>
            Gets or sets Bits per sample.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveFormat.ExtSize">
            <summary>
            Gets or sets Extension size of this format.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.CasesType">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CasesType.case">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CasesType.lang">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CasesType.component">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CasesType.componentSpecified">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CasesType.category">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CasesType.categorySpecified">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CasesType.frequency">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CasesType.sayas">
            <remarks/>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.CaseType">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.comment">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.input">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.output">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.accept">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.priority">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.prioritySpecified">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.source">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.category">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.pron_polyword">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.tn_sayas">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.tn_format">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.pron_sayas">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.pron_format">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.CaseType.index">
            <remarks/>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.PartType">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.PartType.word">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.PartType.breakOption">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.PartType.breakOptionSpecified">
            <remarks/>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.PartType.Value">
            <remarks/>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.BreakOptionType">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.BreakOptionType.must">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.BreakOptionType.no">
            <remarks/>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.PriorityType">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.PriorityType.P0">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.PriorityType.P1">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.PriorityType.P2">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.PriorityType.P3">
            <remarks/>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.ComponentType">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ComponentType.SentenceSeparator">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ComponentType.WordBreaker">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ComponentType.TextNormalization">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ComponentType.Pronunciation">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ComponentType.SentenceTypeDetector">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ComponentType.ProsodicBreak">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ComponentType.BoundaryTone">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ComponentType.NonUniform">
            <remarks/>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.CategoryType">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.CategoryType.Rule">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.CategoryType.POS">
            <remarks/>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.CategoryType.Nothing">
            <remarks/>
        </member>
        <member name="T:Microsoft.Tts.Offline.Gender">
            <summary>
            Gender.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Gender.Male">
            <summary>
            Male.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Gender.Female">
            <summary>
            Female.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Gender.Child">
            <summary>
            Child.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Gender.Neutral">
            <summary>
            Neutral.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Speaker">
            <summary>
            Speaker to descript speaker information.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Speaker.Clone">
            <summary>
            Clone.
            </summary>
            <returns>Speaker instance cloned.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Speaker.Name">
            <summary>
            Gets or sets Name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Speaker.PrimaryLanguage">
            <summary>
            Gets or sets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Speaker.Gender">
            <summary>
            Gets or sets Gender.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Speaker.GenderLetter">
            <summary>
            Gets Gender flag.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Properties.Resources.speaker">
            <summary>
                Overrides the current speaker.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ManuAlignAdapter">
            <summary>
            Class to adapt manu-alignment segment data to well-labeled segment data.
            To speed up manu-alignment, vender will use simplest symbols to represent
            Each phones during segmentation. This module will recover this to well-labeled.
            <param />
            Vender re-aligns all the segments in the segment data. He/she can only insert or delete
            Silence segments in original automatic alignment data, and keeps all other segments.
            <example>
            Given script entry:
            100001 american.
                   ax - m eh 1 - r ax - k . ax n /
            Raw manual alignment data, deliveried by vender:
            0.00000 sp
            0.25800 a
            0.37960 a
            0.54910 a
            0.70830 a
            0.76960 a
            0.91630 sp
            Based on forced alignment:
            0.00000 sil
            0.28000 ax
            0.38000 m+eh
            0.55000 r+ax
            0.71000 k
            0.76000 ax+n
            0.92000 sil
            Adapted result as:
            0.00000 sil
            0.25800 ax
            0.37960 m+eh
            0.54910 r+ax
            0.70830 k
            0.76960 ax+n
            0.91630 sil.
            </example>
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ManuAlignAdapter.Adapt(System.String,System.String,System.String)">
            <summary>
            Adapt raw manual alignment data to well-labeled alignment data.
            </summary>
            <param name="rawManuDir">Raw manual alignment data directory.</param>
            <param name="forcedDir">Forced alignment data directory.</param>
            <param name="manuDir">Adapted result directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ManuAlignAdapter.RemoveSilenceSegment(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.WaveSegment})">
            <summary>
            Remove all silence segment in the segment collection.
            </summary>
            <param name="segments">Segment collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ManuAlignAdapter.Adapting(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.WaveSegment},System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.WaveSegment},System.String,System.Boolean)">
            <summary>
            Adapt certain segment file for one sentence.
            </summary>
            <param name="rawManSegs">Raw manual segment collection.</param>
            <param name="forcedSegs">Automatic forced alignment segment collection.</param>
            <param name="adaptedSegFile">Adapted result file.</param>
            <param name="writing">Indicate whether write to file.</param>
            <returns>Whether both segments are matched.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.VqIssue">
            <summary>
            The VQ issue class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.VqIssue.Category">
            <summary>
            The enum for issue category.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.VqIssue.Category.None">
            <summary>
            No VQ issue.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.VqIssue.Category.Naturalness">
            <summary>
            Naturalness VQ issue.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.VqIssue.Category.Intelligibility">
            <summary>
            Intelligibility VQ issue.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.VqIssue.Severity">
            <summary>
            The enum for issue severity.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.VqIssue.Severity.None">
            <summary>
            No severity.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.VqIssue.Severity.Warning">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Common.VqIssue.Severity.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.VqIssueItem">
            <summary>
            The VQ issue item class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.VqIssueItem"/> class.
            Construct only with the name.
            </summary>
            <param name="name">The name of the item, can be phone name, word gramephe and sentence ID.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.VqIssueItem"/> class.
            Construct only with the name and label.
            </summary>
            <param name="name">The name of the item, can be phone name, word gramephe and sentence ID.</param>
            <param name="label">The description of the item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.VqIssueItem"/> class.
            Construct with the label, issue category and severity.
            </summary>
            <param name="name">The name of the item, can be phone name, word gramephe and sentence ID.</param>
            <param name="label">The description of the item.</param>
            <param name="leftContext">The left context of this item.</param>
            <param name="rightContext">The right context of this item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.#ctor(System.String,System.String,System.String,System.String,Microsoft.Tts.Offline.Common.VqIssue.Category,Microsoft.Tts.Offline.Common.VqIssue.Severity)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.VqIssueItem"/> class.
            Construct with the label, issue category and severity.
            </summary>
            <param name="name">The name of the item, can be phone name, word gramephe and sentence ID.</param>
            <param name="label">The description of the item.</param>
            <param name="leftContext">The left context of this item.</param>
            <param name="rightContext">The right context of this item.</param>
            <param name="category">The issue category of the item.</param>
            <param name="severity">The issue severity of the item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.#ctor(System.String,System.String,System.String,System.String,Microsoft.Tts.Offline.Common.VqIssue.Category,Microsoft.Tts.Offline.Common.VqIssue.Severity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.VqIssueItem"/> class.
            Construct with the label, issue category and severity.
            </summary>
            <param name="name">The name of the item, can be phone name, word gramephe and sentence ID.</param>
            <param name="label">The description of the item.</param>
            <param name="leftContext">The left context of this item.</param>
            <param name="rightContext">The right context of this item.</param>
            <param name="category">The issue category of the item.</param>
            <param name="severity">The issue severity of the item.</param>
            <param name="parent">The name of the parent of this item, e.g. for phone item, the parent item should be word.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.#ctor(Microsoft.Tts.Offline.Common.VqIssueItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.VqIssueItem"/> class.
            </summary>
            <param name="item">The item to copy from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.CompareTo(System.Object)">
            <summary>
            The realization for the compare function
            The object will be sorted with following ordering:
               Issue category: descending
               Name : ascending
               Label: ascending
               Left context:   ascending
               Right context:  ascending
               Issue severity: descending.
            </summary>
            <param name="obj">The object to compare with.</param>
            <returns>RetValue.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.ToString">
            <summary>
            To string.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.ToString(System.Boolean)">
            <summary>
            To string (whether convert with severity).
            </summary>
            <param name="withSeverity">Whether convert to string with "severity".</param>
            <returns>OutString.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.PrintColoredLabelToConsole">
            <summary>
            Print the label into output with different color according to severity.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.BuildColoredTextSegment">
            <summary>
            Build text for colored cell string for Excel.
            </summary>
            <returns>The colored text segment.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueItem.BuildColoredTextSegment(System.Boolean,System.Boolean)">
            <summary>
            Build text for colored cell string for Excel.
            </summary>
            <param name="withLabel">Whether to build the text segment with label.</param>
            <param name="withRightContext">Whether to build the text segment with right context.</param>
            <returns>The colored text segment.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueItem.Name">
            <summary>
            Gets The name of the item, can be sentence ID, word grapheme, unit/phone name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueItem.Label">
            <summary>
            Gets or sets The label to distinct the item, can be sentence ID, word grapheme, unit/phone name,
            Congtext word or anything.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueItem.LeftContext">
            <summary>
            Gets or sets The left context word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueItem.RightContext">
            <summary>
            Gets or sets The right context word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueItem.IssueCategory">
            <summary>
            Gets or sets The issue category.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueItem.IssueSeverity">
            <summary>
            Gets or sets The issue severity.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueItem.Parent">
            <summary>
            Gets or sets The parent for this item: for phone, the parent will be the word; for word, the parent will be the sentence id.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Common.VqIssueStatsItem">
            <summary>
            The VQ issue item class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueStatsItem.#ctor(System.String,System.String,System.String,System.String,Microsoft.Tts.Offline.Common.VqIssue.Category)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Common.VqIssueStatsItem"/> class.
            </summary>
            <param name="name">The name of the item, can be phone name, word gramephe and sentence ID.</param>
            <param name="label">The description of the item.</param>
            <param name="leftContext">The left context of this item.</param>
            <param name="rightContext">The right context of this item.</param>
            <param name="category">The issue category of the item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueStatsItem.CompareTo(System.Object)">
            <summary>
            The realization for the compare function
            The object will be sorted with following ordering:
               Name : ascending
               Label: ascending
               Left context:   ascending
               Right context:  ascending
               Issue category: descending
               Issue severity: descending
               Issue count:    descending.
            </summary>
            <param name="obj">The object to compare with.</param>
            <returns>Return retValue.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueStatsItem.ToString">
            <summary>
            To string.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Common.VqIssueStatsItem.Update(Microsoft.Tts.Offline.Common.VqIssueItem)">
            <summary>
            Update the stats item with a specific VQ issue item.
            </summary>
            <param name="vqIssueItem">Update with the specific VQ issue item.</param>
            <returns>Bool.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.Name">
            <summary>
            Gets The name of the item, can be sentence ID, word grapheme, unit/phone name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.Label">
            <summary>
            Gets The label to distinct the item, can be sentence ID, word grapheme, unit/phone name,
            Congtext word or anything.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.LeftContext">
            <summary>
            Gets or sets The left context word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.RightContext">
            <summary>
            Gets or sets The right context word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.IssueCategory">
            <summary>
            Gets or sets The issue category.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.TotalCount">
            <summary>
            Gets The total count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.ErrorCount">
            <summary>
            Gets The error count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.ErrorRatio">
            <summary>
            Gets The error ratio.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.ErrorRecords">
            <summary>
            Gets The error record list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.WarningCount">
            <summary>
            Gets The warning count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.WarningRatio">
            <summary>
            Gets The warning ratio.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Common.VqIssueStatsItem.WarningRecords">
            <summary>
            Gets The warning record list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TtsUtterance">
            <summary>
            Tts utterance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUtterance.#ctor(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.TtsUtterance"/> class.
            </summary>
            <param name="language">Language of the utterance.</param>
            <param name="engine">Engine of the utterance.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUtterance.SaveAsXml(Microsoft.Tts.Offline.TtsUtterance,System.String)">
            <summary>
            Save TTS utterance to file in XML format.
            </summary>
            <param name="utterance">Utterance to save.</param>
            <param name="filePath">File to save in.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUtterance.ReadFromXml(System.String)">
            <summary>
            Load TtsUtterance from XML data file.
            </summary>
            <param name="filePath">File to load from.</param>
            <returns>Utterance instance read from file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUtterance.SaveUnitsAsXml(Microsoft.Tts.Offline.TtsUtterance,System.Xml.XmlTextWriter)">
            <summary>
            Save TTS units to file in XML format.
            </summary>
            <param name="utterance">Units of utterance to save.</param>
            <param name="writer">XML text writer to write units information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUtterance.ProcessUtterance(System.Xml.XmlTextReader,Microsoft.Tts.Offline.TtsUtterance)">
            <summary>
            Read and parse utterance data from the XML text reader.
            </summary>
            <param name="reader">XML text reader to read data from.</param>
            <param name="utterance">Target utterance to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUtterance.ProcessWords(System.Xml.XmlTextReader,Microsoft.Tts.Offline.TtsUtterance)">
            <summary>
            Read and parse words data from the XML text reader to utterance.
            </summary>
            <param name="reader">XML text reader to read data from.</param>
            <param name="utterance">Target utterance to save result words.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUtterance.ProcessWord(System.Xml.XmlTextReader,Microsoft.Tts.Offline.TtsUtterance)">
            <summary>
            Read and parse word data from the XML text reader to utterance.
            </summary>
            <param name="reader">XML text reader to read data from.</param>
            <param name="utterance">Target utterance to save result words.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUtterance.ProcessUnits(System.Xml.XmlTextReader,Microsoft.Tts.Offline.TtsUtterance)">
            <summary>
            Read and parse units data from the XML text reader to utterance.
            </summary>
            <param name="reader">XML text reader to read data from.</param>
            <param name="utterance">Target utterance to save result units.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.TtsUtterance.ParseUnit(System.Xml.XmlTextReader,Microsoft.Tts.Offline.TtsUtterance)">
            <summary>
            Read and parse unit data from the XML text reader to utterance.
            </summary>
            <param name="reader">XML text reader to read data from.</param>
            <param name="utterance">Target utterance to save result units.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUtterance.TNedText">
            <summary>
            Gets or sets Text-normalized string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUtterance.Viterbi">
            <summary>
            Gets or sets Viterbi.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUtterance.WaveUnits">
            <summary>
            Gets Wave units.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUtterance.Acoustic">
            <summary>
            Gets or sets Acoustic.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUtterance.SegmentFile">
            <summary>
            Gets or sets Segment file path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUtterance.RawText">
            <summary>
            Gets or sets Raw text for text string before normalization.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TtsUtterance.Script">
            <summary>
            Gets or sets Script information of this utterance.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.AcousticItem">
            <summary>
            Acoustice information of utterance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.AcousticItem.EpochFilePath">
            <summary>
            Gets or sets EpochFilePath.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.AcousticItem.Egg16kFilePath">
            <summary>
            Gets or sets EggFilePath.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.AcousticItem.Wave16kFilePath">
            <summary>
            Gets or sets Wave16kFilePath.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.AcousticItem.RecordedWaveFilePath">
            <summary>
            Gets or sets WaveFilePath.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.VoiceCreationLanguageDataError">
            <summary>
            VoiceCreationLanguageData error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.VoiceCreationLanguageDataError.MismatchLanguage">
            <summary>
            Language data file language mismatch.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.VoiceCreationLanguageDataError.EmptyLanguageDataFile">
            <summary>
            Can't find data in language data file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Core.VoiceCreationLanguageDataError.CanNotCreatePhomeme">
            <summary>
            Can Not Create Phomeme.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData">
            <summary>
            In voice creation related tools, it needs to load some language data to do data validation
            This class is a helper to manage language data in those tools.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.ValidateLanguageData(Microsoft.Tts.Offline.Language)">
            <summary>
            Validate language data files.
            </summary>
            <param name="language">Language of the data files.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.SetLanguageData(Microsoft.Tts.Offline.Language)">
            <summary>
            Set language data file path to localor globals
            The principle for using localor:
            1. data object model don't use Localor.GetXXX function direclty.
            </summary>
            <param name="language">The language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.ParseLanguageData(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.String,System.Boolean)">
            <summary>
            Parse XML document for language data information.
            In language expansion scenerio, language data are explictly provided by langDev.
            While in voice expansion scenerio, language data are deployed together with tools.
            </summary>
            <param name="dom">XmlDocument to be parsed.</param>
            <param name="nsmgr">XmlNameSpace.</param>
            <param name="prefix">Prefix.</param>
            <param name="checkFiles">Whether check import files.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.ParseLanguageDataFromXmlElement(System.Boolean,System.Xml.XmlElement)">
            <summary>
            Parse language data from xml element.
            </summary>
            <param name="checkFiles">CheckFiles.</param>
            <param name="eleLangData">EleLangData.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.SaveLanguageData(System.Xml.XmlDocument,System.Xml.Schema.XmlSchema,System.Xml.XmlElement)">
            <summary>
            Save language data information.
            </summary>
            <param name="dom">Xml dom document.</param>
            <param name="schema">Xml schema.</param>
            <param name="parentEle">Parent element.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.SaveLanguageData(System.Xml.XmlWriter)">
            <summary>
            Save language data information.
            </summary>
            <param name="xmlWriter">Xml writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.IsEmpty">
            <summary>
            Tell if the file paths are empty.
            </summary>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.GetLanguageDataFileFullPath(System.String)">
            <summary>
            Get language data file full path.
            </summary>
            <param name="filePath">Language file path.</param>
            <returns>Language data full path.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.Language">
            <summary>
            Gets or sets Data language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.PhoneSet">
            <summary>
            Gets or sets Phoneset file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.PosTable">
            <summary>
            Gets or sets Postable file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.UnitTable">
            <summary>
            Gets or sets Unit table file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.TruncateRule">
            <summary>
            Gets or sets Truncate rule.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.TtsToSapiVisemeId">
            <summary>
            Gets or sets Tts to sapi viseme id file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.TtsToSrPhone">
            <summary>
            Gets or sets Tts to SR phone map file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.TtsToIpaPhone">
            <summary>
            Gets or sets Tts to IPA phone map file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.CartQuestions">
            <summary>
            Gets or sets Cart questions for unit selection font building.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.PhoneQuestions">
            <summary>
            Gets or sets Tts phone questions.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.SrModelDir">
            <summary>
            Gets or sets Sr model directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.FontMeta">
            <summary>
            Gets or sets Tts font meta (unit selection, seems it is better to be
            A voice data).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.DataDir">
            <summary>
            Gets or sets Language data directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Core.VoiceCreationLanguageData.LexicalAttributeSchema">
            <summary>
            Gets or sets Lexical attribute schema.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.CostNode">
            <summary>
            Cost node.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNode.System#IComparable{Microsoft#Tts#Offline#Viterbi#CostNode}#CompareTo(Microsoft.Tts.Offline.Viterbi.CostNode)">
            <summary>
            Compare this cost node with other one.
            </summary>
            <param name="other">Other cost node to compare with.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects
                being compared. The return value has the following meanings: Value Meaning
                Less than zero This object is less than the other parameter.Zero This object
                is equal to other. Greater than zero This object is greater than other. 
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNode.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>String presentation of this instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNode.IsPreceed(Microsoft.Tts.Offline.Viterbi.CostNode)">
            <summary>
            Test this cost node is preceding of the given node.
            </summary>
            <param name="node">Cost node to test with.</param>
            <returns>True for yes, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNode.CompareTo(Microsoft.Tts.Offline.Viterbi.CostNode)">
            <summary>
            Compare this cost node with other one.
            </summary>
            <param name="other">Other cost node to compare with.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects
                being compared. The return value has the following meanings: Value Meaning
                Less than zero This object is less than the other parameter.Zero This object
                is equal to other. Greater than zero This object is greater than other. 
            </returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNode.PrecedeNodeIndex">
            <summary>
            Gets or sets Preceding node index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNode.Index">
            <summary>
            Gets or sets Index of this cost node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNode.ClusterIndex">
            <summary>
            Gets or sets Cluster index of the cluster that this cost node belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNode.RouteCost">
            <summary>
            Gets or sets Total route cost of this cost node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNode.TargetCost">
            <summary>
            Gets or sets Target cost of this cost node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNode.WaveUnit">
            <summary>
            Gets or sets Wave unit associated with this cost node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNode.Key">
            <summary>
            Gets Key of this cost node.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.CostNodeCluster">
            <summary>
            Costnode cluster, this is cost node candidates for certain unit specification.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeCluster.AddNode(Microsoft.Tts.Offline.Viterbi.CostNode)">
            <summary>
            Add new node to this cluster.
            </summary>
            <param name="node">Node to add.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeCluster.ConcatenateCost">
            <summary>
            Gets or sets ConcatenateCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeCluster.BestNodeIndex">
            <summary>
            Gets or sets BestNodeIndex.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeCluster.Index">
            <summary>
            Gets or sets Index of this cluster in all clusters in one utterance .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeCluster.TtsUnit">
            <summary>
            Gets or sets Specify which TtsUnit specification this cluster is for.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeCluster.IndexedNodes">
            <summary>
            Gets All nodes in this cluster organized through indexing.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeCluster.CostNodes">
            <summary>
            Gets All nodes in this cluster.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.CostNodeGroupGlyph">
            <summary>
            CostNodeClusterGlyph.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.IGlyph">
            <summary>
            IGlyph interface for glyph for Viterbi view.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.IGlyph.PrecalcLayout(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Pre-calculate the layout of this instance.
            </summary>
            <param name="g">Graphics instance.</param>
            <param name="font">Font.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.IGlyph.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Boolean)">
            <summary>
            Draw this instance on the Graphics.
            </summary>
            <param name="g">Graphics to draw with.</param>
            <param name="rect">Boundary to draw on.</param>
            <param name="font">Font to draw with.</param>
            <param name="brush">Brush to draw with.</param>
            <param name="selected">Is in selected mode.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.IGlyph.X">
            <summary>
            Gets or sets X position of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.IGlyph.Y">
            <summary>
            Gets or sets Y position of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.IGlyph.Size">
            <summary>
            Gets or sets Size of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.IGlyph.Rectangle">
            <summary>
            Gets or sets Ractange bound of this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGroupGlyph.PrecalcLayout(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Pre-calculate the layout of this instance.
            </summary>
            <param name="g">Graphics instance.</param>
            <param name="font">Font.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGroupGlyph.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Boolean)">
            <summary>
            Draw this instance on the Graphics.
            </summary>
            <param name="g">Graphics to draw with.</param>
            <param name="rect">Boundary to draw on.</param>
            <param name="font">Font to draw with.</param>
            <param name="brush">Brush to draw with.</param>
            <param name="selected">Is in selected mode.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGroupGlyph.CostNodes">
            <summary>
            Gets Cost nodes of this group.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGroupGlyph.X">
            <summary>
            Gets or sets X position of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGroupGlyph.Y">
            <summary>
            Gets or sets Y position of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGroupGlyph.Size">
            <summary>
            Gets or sets Size of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGroupGlyph.Rectangle">
            <summary>
            Gets or sets Ractange bound of this instance.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph">
            <summary>
            CostNodeClusterGlyph.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Boolean)">
            <summary>
            Draw this instance on the Graphics.
            </summary>
            <param name="g">Graphics to draw with.</param>
            <param name="rect">Boundary to draw on.</param>
            <param name="font">Font to draw with.</param>
            <param name="brush">Brush to draw with.</param>
            <param name="selected">Is in selected mode.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.PrecalcLayout(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Pre-calculate the layout of this instance.
            </summary>
            <param name="g">Graphics instance.</param>
            <param name="font">Font.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.RecalcLayout">
            <summary>
            Re-calculate the layout of this glyph instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.BuildGlyphs(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Viterbi.CostNodeGlyph},System.Boolean)">
            <summary>
            Build this cluster's glyph.
            </summary>
            <param name="shownNodes">Shown node collection.</param>
            <param name="folded">Flag indicating whether drawing in folded mode.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.AddNode(Microsoft.Tts.Offline.Viterbi.CostNodeGlyph)">
            <summary>
            Add a costnode glyph to this cluster.
            </summary>
            <param name="node">Node to add.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.HitTest(System.Drawing.Point)">
            <summary>
            Hit testing on given point for a glyph.
            </summary>
            <param name="point">Point to test.</param>
            <returns>Glyph instance found, null for nothing found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.DrawHeader(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Draw header of cluster glyph.
            </summary>
            <param name="g">Graphics to draw on.</param>
            <param name="font">Font to draw with.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw border of the cluster glyph.
            </summary>
            <param name="g">Graphics to draw on.</param>
            <param name="rect">Rect to draw in.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.Selected">
            <summary>
            Gets or sets a value indicating whether this glyph is selected.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.CostNodeCluster">
            <summary>
            Gets or sets Cost node cluster associated with this glyph instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.Glyphs">
            <summary>
            Gets All glyphs in this cluster.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.IndexedNodes">
            <summary>
            Gets Costnode glyph grouped by indexing.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.CostNodeGlyphs">
            <summary>
            Gets All costnode glyph.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.X">
            <summary>
            Gets or sets X position of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.Y">
            <summary>
            Gets or sets Y position of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.Size">
            <summary>
            Gets or sets Size of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph.Rectangle">
            <summary>
            Gets or sets Ractange bound of this instance.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.MouseState">
            <summary>
            Mouse State.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Viterbi.MouseState.None">
            <summary>
            Non-defined.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Viterbi.MouseState.Enter">
            <summary>
            Move enter.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph">
            <summary>
            CostNode glyph.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.ToString">
            <summary>
            Convert this instance into string presentation.
            </summary>
            <returns>String presentation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Boolean)">
            <summary>
            Draw this instance on the Graphics.
            </summary>
            <param name="g">Graphics to draw with.</param>
            <param name="rect">Boundary to draw on.</param>
            <param name="font">Font to draw with.</param>
            <param name="brush">Brush to draw with.</param>
            <param name="selected">Is in selected mode.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.PrecalcLayout(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Pre-calculate the layout of this instance.
            </summary>
            <param name="g">Graphics instance.</param>
            <param name="font">Font.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.DoMouseMove(Microsoft.Tts.Offline.Viterbi.ViterbiView,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle DoMouseMove event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.DoMouseEnter(Microsoft.Tts.Offline.Viterbi.ViterbiView)">
            <summary>
            Handle DoMouseEnter event.
            </summary>
            <param name="viterbiView">Event sender.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.DoMouseLeave(Microsoft.Tts.Offline.Viterbi.ViterbiView)">
            <summary>
            Handle DoMouseLeave event.
            </summary>
            <param name="viterbiView">Event sender.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.IsPreceed(Microsoft.Tts.Offline.Viterbi.CostNode)">
            <summary>
            Test this cost node is preceding of the given node.
            </summary>
            <param name="node">Cost node to test with.</param>
            <returns>True for yes, otherwise false.</returns>
        </member>
        <member name="E:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.OnMouseMove">
            <summary>
            On mouse move event.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.OnRequestRate">
            <summary>
            On request rate event.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.Selected">
            <summary>
            Gets or sets a value indicating whether this node is selected or not.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.CostNode">
            <summary>
            Gets or sets CostNode.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.MouseState">
            <summary>
            Gets or sets Mouse state of this node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.Size">
            <summary>
            Gets or sets Size of this glyph.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.Rectangle">
            <summary>
            Gets or sets Clip of this glyph.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.X">
            <summary>
            Gets or sets Location x of this glyph.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.CostNodeGlyph.Y">
            <summary>
            Gets or sets Location y of this glyph.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.ClusterEventArgs">
            <summary>
            Description of ClusterEventArgs class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Viterbi.ClusterEventArgs._costNodeClusterGlyph">
            <summary>
            Cluster glyph associated with this event argments.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ClusterEventArgs.#ctor(Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Viterbi.ClusterEventArgs"/> class.
            </summary>
            <param name="cluster">Cluster glyph associated with this event argments.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.ClusterEventArgs.CostNodeClusterGlyph">
            <summary>
            Gets CodeNodeGlyph.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.NodeEventArgs">
            <summary>
            Description of NodeEventArgs class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.NodeEventArgs.#ctor(Microsoft.Tts.Offline.Viterbi.CostNodeGlyph)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Viterbi.NodeEventArgs"/> class.
            </summary>
            <param name="node">Cost node to associated with.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.NodeEventArgs.#ctor(Microsoft.Tts.Offline.Viterbi.CostNodeGlyph,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Viterbi.NodeEventArgs"/> class.
            </summary>
            <param name="node">Cost node to associated with.</param>
            <param name="e">Event to associated with.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.NodeEventArgs.CostNodeGlyph">
            <summary>
            Gets CodeNodeGlyph.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.NodeEventArgs.MouseEventArgs">
            <summary>
            Gets MouseEventArgs.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.NodeRoute">
            <summary>
            Node route.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.NodeRoute.GetSelectedGroups">
            <summary>
            Get continued selected groups.
            </summary>
            <returns>Unit group array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.NodeRoute.System#IComparable{Microsoft#Tts#Offline#Viterbi#NodeRoute}#CompareTo(Microsoft.Tts.Offline.Viterbi.NodeRoute)">
            <summary>
            Compare this node route instance with other instance.
            </summary>
            <param name="other">Other instance to compare with.</param>
            <returns> A 32-bit signed integer that indicates the relative order of the objects
               being compared. The return value has the following meanings: Value Meaning
               Less than zero This object is less than the other parameter.Zero This object
               is equal to other. Greater than zero This object is greater than other.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.NodeRoute.ReverseCostNodes">
            <summary>
            Reverse cost nodes in the route.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.NodeRoute.CompareTo(Microsoft.Tts.Offline.Viterbi.NodeRoute)">
            <summary>
            Compare this node route instance with other instance.
            </summary>
            <param name="other">Other instance to compare with.</param>
            <returns> A 32-bit signed integer that indicates the relative order of the objects
               being compared. The return value has the following meanings: Value Meaning
               Less than zero This object is less than the other parameter.Zero This object
               is equal to other. Greater than zero This object is greater than other.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.NodeRoute.SwitchNode(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Viterbi.CostNode},System.Int32,System.Int32)">
            <summary>
            Swith two cost nodes in the cost node collection.
            </summary>
            <param name="costNodes">Cost node collection to operate on.</param>
            <param name="i">First node index.</param>
            <param name="j">Second node index.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.NodeRoute.Visible">
            <summary>
            Gets or sets a value indicating whether this route is visible on rendering.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.NodeRoute.CostNodes">
            <summary>
            Gets Cost node collection on this route.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.NodeRoute.Index">
            <summary>
            Gets or sets Index of this cost node route in whole viterbi view.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.NodeRoute.TotalCost">
            <summary>
            Gets Total cost of this node route.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.RequestRateEventArgs">
            <summary>
            RequestRateEventArgs.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.RequestRateEventArgs.#ctor(Microsoft.Tts.Offline.Viterbi.CostNodeGlyph,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Viterbi.RequestRateEventArgs"/> class.
            </summary>
            <param name="node">Node associated with this arguments.</param>
            <param name="rate">Rate.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.RequestRateEventArgs.Rate">
            <summary>
            Gets or sets Rate.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.RequestRateEventArgs.CostNodeGlyph">
            <summary>
            Gets CostNodeGlyph.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.ViterbiSearch">
            <summary>
            Viterbi search algorithm and data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiSearch.FindRoute(System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.WaveUnit})">
            <summary>
            Find route from all routes according to wave units information.
            </summary>
            <param name="wus">Wave unit collection.</param>
            <returns>Found route.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiSearch.FindRoute(Microsoft.Tts.Offline.Viterbi.CostNode)">
            <summary>
            Find route which contains target node.
            </summary>
            <param name="targetNode">Node to find.</param>
            <returns>NodeRoute.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiSearch.SortNodeRoutes">
            <summary>
            Sort all node routes according to cost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.ViterbiSearch.SelectedRoute">
            <summary>
            Gets or sets Current selected route for rendering.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.ViterbiSearch.NodeRoutes">
            <summary>
            Gets All routes for certain unit specification.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.ViterbiSearch.CostNodeClusters">
            <summary>
            Gets All node clusters for each unit's specification.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.ViterbiView">
            <summary>
            ViterbiView.
            </summary>
            <summary>
            ViterbiView.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Viterbi.ViterbiView"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.Select(Microsoft.Tts.Offline.Viterbi.CostNodeClusterGlyph)">
            <summary>
            Performance select a cluster.
            </summary>
            <param name="cluster">Cluster to select.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.MakeSureVisible(Microsoft.Tts.Offline.Viterbi.CostNodeCluster)">
            <summary>
            Make sure cluster is visible on screen.
            </summary>
            <param name="cluster">Cluster to performance.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.BuildShownNodeLattice(System.Single)">
            <summary>
            Build shown node lattice view.
            </summary>
            <param name="percent">How many percent of routes would be shown.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.BuildShownNodeLattice(System.Int32)">
            <summary>
            Build shown node lattice view.
            </summary>
            <param name="shownRouteCount">How many routes would be shown.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.RecalcLayout(System.Drawing.Rectangle)">
            <summary>
            Recalcualte layout.
            </summary>
            <param name="rect">Rectangle to calculate layout in.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.FindRoute(Microsoft.Tts.Offline.Viterbi.CostNode)">
            <summary>
            Find a NodeRoute which is shown and includes the cost node.
            </summary>
            <param name="costNode">Cost noe to find route on.</param>
            <returns>Found node route.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Hanlde OnPaint event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Hanlde OnMouseMove event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnResize(System.EventArgs)">
            <summary>
            Hanlde OnResize event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Hanlde OnScroll event.
            </summary>
            <param name="se">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Hanlde OnMouseClick event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.DoResize">
            <summary>
            Execute resize actions.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.BuildShownClusters">
            <summary>
            Build shown clusters.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.BuildShownRoutes(System.Int32)">
            <summary>
            Build shown routes.
            </summary>
            <param name="routeCount">Route count to show.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.ConnectNodes(System.Drawing.Graphics,Microsoft.Tts.Offline.Viterbi.CostNodeGlyph,Microsoft.Tts.Offline.Viterbi.CostNodeGlyph,System.Drawing.Pen)">
            <summary>
            Connect two cost node glyph.
            </summary>
            <param name="g">Graphics to draw on.</param>
            <param name="previous">Previous cost node glyph.</param>
            <param name="current">Current cost node glyph.</param>
            <param name="pen">Pen to draw with.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.HitTest(System.Drawing.Point)">
            <summary>
            Tell which glyph is hit.
            </summary>
            <param name="point">Point to test.</param>
            <returns>Glyph instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.DeselectNode(Microsoft.Tts.Offline.Viterbi.CostNodeGlyph)">
            <summary>
            De-select a costnode glyph.
            </summary>
            <param name="node">Node to deselect.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.SelectNode(Microsoft.Tts.Offline.Viterbi.CostNodeGlyph)">
            <summary>
            Select a cost node.
            </summary>
            <param name="node">Node to select.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.HighLightRoutesOnNode(Microsoft.Tts.Offline.Viterbi.CostNodeGlyph,System.Drawing.Graphics)">
            <summary>
            Highlight all the routes including the costnode.
            </summary>
            <param name="node">Node to highlight routes on it.</param>
            <param name="g">Graphics to draw on.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.HighLightRoute(Microsoft.Tts.Offline.Viterbi.NodeRoute,System.Drawing.Graphics)">
            <summary>
            Hightlight a route.
            </summary>
            <param name="route">Route to highlight.</param>
            <param name="g">Graphics to draw on.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.NeedCostRateNode_OnRequestRate(System.Object,Microsoft.Tts.Offline.Viterbi.RequestRateEventArgs)">
            <summary>
            Hanlde OnRequestRate event of needCostRateNode.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Tts.Offline.Viterbi.ViterbiView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Viterbi.ViterbiView._dummyButton">
            <summary>
            It is used for enable scrolling of panel.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.ViterbiView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            The contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnShowNode">
            <summary>
            OnShowNode.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnNodeClick">
            <summary>
            OnNodeClick.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnWordClick">
            <summary>
            OnWordClick.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnClusterClick">
            <summary>
            OnClusterClick.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Viterbi.ViterbiView.OnNodeContextMenu">
            <summary>
            OnNodeContextMenu.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.ViterbiView.CostNodeClusterGlyphs">
            <summary>
            Gets All node clusters for each unit's specification.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.ViterbiView.ShownNodeGlyphs">
            <summary>
            Gets Visible Shown Node Glyphs.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.ViterbiView.NodeFolded">
            <summary>
            Gets or sets a value indicating whether Specify nodes is folded in view.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.ViterbiView.SelectedNode">
            <summary>
            Gets or sets Selected CostNode glyph.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.ViterbiView.Utterance">
            <summary>
            Gets or sets Utterance associated with this view.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.WordGlyph">
            <summary>
            Description of WordGlyph class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.WordGlyph.PrecalcLayout(System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Pre-calculate the layout of this instance.
            </summary>
            <param name="g">Graphics instance.</param>
            <param name="font">Font.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.WordGlyph.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Boolean)">
            <summary>
            Draw this instance on the Graphics.
            </summary>
            <param name="g">Graphics to draw with.</param>
            <param name="rect">Boundary to draw on.</param>
            <param name="font">Font to draw with.</param>
            <param name="brush">Brush to draw with.</param>
            <param name="selected">Is in selected mode.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.WordGlyph.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>String presentation.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.WordGlyph.Word">
            <summary>
            Gets or sets Word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.WordGlyph.X">
            <summary>
            Gets or sets X position of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.WordGlyph.Y">
            <summary>
            Gets or sets Y position of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.WordGlyph.Size">
            <summary>
            Gets or sets Size of this glyph.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.WordGlyph.Rectangle">
            <summary>
            Gets or sets Clip of this glyph.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Viterbi.WordEventArgs">
            <summary>
            Description of NodeEventArgs class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.WordEventArgs.#ctor(Microsoft.Tts.Offline.Viterbi.WordGlyph)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Viterbi.WordEventArgs"/> class.
            </summary>
            <param name="word">Word associated with this event arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Viterbi.WordEventArgs.#ctor(Microsoft.Tts.Offline.Viterbi.WordGlyph,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Viterbi.WordEventArgs"/> class.
            </summary>
            <param name="word">Word associated with this event arguments.</param>
            <param name="e">Mouse event.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.WordEventArgs.WordGlyph">
            <summary>
            Gets WordGlyph.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Viterbi.WordEventArgs.MouseEventArgs">
            <summary>
            Gets MouseEventArgs.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFont">
            <summary>
            Voice font data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.VoiceFont.LoadingStatusChanged">
            <summary>
            Message id of voice font loading status changed event .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.VoiceFont"/> class.
            </summary>
            <param name="hwnd">Window handle to recieve loading event.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.FileListMap,Microsoft.Tts.Offline.ScriptFile)">
            <summary>
            Check data file consistence between script file and filemap file.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="script">Script file instance.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateWaveAlignment(Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String)">
            <summary>
            Check waveform files consistence between waveform and
            Referrence waveform files with the filemap.
            </summary>
            <param name="fileMap">File list map listed the sentences to validate.</param>
            <param name="waveDir">Base directory of waveform file.</param>
            <param name="refWaveDir">Directory of referrence waveform file.</param>
            <param name="refName">The name of the referrence waveform directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String)">
            <summary>
            Check data file consistence between segment, epoch and wave16k files with the filemap.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="wave16kDir">16k Hz waveform file directory.</param>
            <param name="epochDir">Epoch file directory.</param>
            <param name="segmentDir">Segmentation file directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.FileListMap,System.String,System.String)">
            <summary>
            Check data file consistence between segment, and wave files with the file map.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="waveDir">Waveform file directory.</param>
            <param name="segmentDir">Segmentation file directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.FileListMap,Microsoft.Tts.Offline.ScriptFile,System.String)">
            <summary>
            Check data consistence between script file and segmentation files.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="script">Script file instance.</param>
            <param name="segmentDir">Segment file directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ExtractAcoustic(Microsoft.Tts.Offline.ScriptFile,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,System.String)">
            <summary>
            Extract acoustic features for a given script file.
            </summary>
            <param name="script">Script file instance.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segmentation file directory.</param>
            <param name="wave16kDir">16k Hz waveform file directory.</param>
            <param name="epochDir">Epoch file directory.</param>
            <param name="targetFilePath">Target acoustic file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ReadSamplesPerSecond(System.String)">
            <summary>
            Read samples per second of the speech data in the voice font.
            </summary>
            <param name="fontPath">Voice font path.</param>
            <returns>Samples per second of data for the given voice font.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.ScriptFile,Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.FileListMap,System.String,Microsoft.Tts.Offline.DataErrorSet,System.Boolean)">
            <summary>
            Check data consistence between script item and segmentation file.
            </summary>
            <param name="script">Script file instance.</param>
            <param name="item">Script item.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segment file directory.</param>
            <param name="errorSet">Data error set found.</param>
            <param name="phoneBasedSegment">Phone based alignment or unit based alignment.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.Initialize">
            <summary>
            Initialize this voice font instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.BuildUtterances">
            <summary>
            Build utterance instances.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ParseConfig(System.Xml.XmlElement)">
            <summary>
            Parse voice font configuration.
            </summary>
            <param name="config">Configuration in XmlElement.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateDataAlignment(System.String,System.String,System.String,System.Text.StringBuilder)">
            <summary>
            Check data file consistence between segment, epoch and wave16k file.
            </summary>
            <param name="alignmentFile">Alignment file.</param>
            <param name="epochFile">Epoch file.</param>
            <param name="wave16kFile">16k Hz waveform file.</param>
            <param name="error">Error message.</param>
            <returns>Data warning message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateDataAlignment(System.String,System.String,System.Text.StringBuilder)">
            <summary>
            Check data file consistence between segment and wave file.
            </summary>
            <param name="alignmentFile">Alignment file.</param>
            <param name="waveFile">Waveform file.</param>
            <param name="errorMessage">Error message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateAlignmentFile(System.String,System.Text.StringBuilder)">
            <summary>
            Validate alingment file.
            </summary>
            <param name="alignmentFile">Alignment file to validate.</param>
            <param name="builder">String builder for error message.</param>
            <returns>The position of the last silence alignment.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ValidateEndingEpoch(System.String,System.String,System.Int32[],System.Int32[],System.Int32)">
            <summary>
            Validate ending epoch data, which should be negative value for silence.
            </summary>
            <param name="alignmentFile">Alignment file path.</param>
            <param name="epochFile">Epoch file path.</param>
            <param name="epochs">Epochs data.</param>
            <param name="epochOffsets">Epochs offset.</param>
            <param name="lastSilenceAlign">Last silence alignment position.</param>
            <returns>Warining message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.ExtractAcoustic(System.IO.StreamWriter,Microsoft.Tts.Offline.ScriptFile,System.String,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String)">
            <summary>
            Extract acoustic features for a given sentence.
            </summary>
            <param name="writer">Stream writer to write acoustic features.</param>
            <param name="script">Script file instance.</param>
            <param name="sid">Sentence id.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segmentation file directory.</param>
            <param name="wave16kDir">16k Hz waveform file directory.</param>
            <param name="epochDir">Epoch file directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.DataManager_DataLoadingStatusChanged(System.Object,Microsoft.Tts.Offline.DataLoadingEventArgs)">
            <summary>
            Handle DataLoadingStatusChanged event of DataManager.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="E:Microsoft.Tts.Offline.VoiceFont.DataLoadingStatusChanged">
            <summary>
            Data loading status changed event.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.FontPath">
            <summary>
            Gets or sets Location of the voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.VoiceName">
            <summary>
            Gets or sets Name of this voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.TokenId">
            <summary>
            Gets or sets Voice token id used by SAPI in registry to identify the voice.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.SamplesPerSecond">
            <summary>
            Gets Samples per second of this voice font's speech data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.UnitFeatureFilePath">
            <summary>
            Gets or sets The location of unit feature file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.EngineType">
            <summary>
            Gets or sets EngineType.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.PrimaryLanguage">
            <summary>
            Gets or sets PrimaryLanguage.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.CartTreeManager">
            <summary>
            Gets or sets CartTreeManager.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.WeightTable">
            <summary>
            Gets or sets WeightTable.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.Wave16kDirectories">
            <summary>
            Gets Wave16kDir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.SegmentDirectories">
            <summary>
            Gets SegmentDir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.WaveUnits">
            <summary>
            Gets WaveUnits.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.Utterances">
            <summary>
            Gets Utterance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.FileMap">
            <summary>
            Gets or sets File list map for this voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.ScriptFile">
            <summary>
            Gets or sets Script file for this voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.Segments">
            <summary>
            Gets Segmentation file path manager.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.Wave16ks">
            <summary>
            Gets 16k Hz waveform file path manager.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFont.FontFileType">
            <summary>
            Font file type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.VoiceFont.FontFileType.None">
            <summary>
            Not font file type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.VoiceFont.FontFileType.Brk">
            <summary>
            Brk(Break model) file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.VoiceFont.FontFileType.Emp">
            <summary>
            Emp(Emphasis model) file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFont.SegmentFilePaths">
            <summary>
            Segmentation file path manager.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.VoiceFont.SegmentFilePaths.outer">
            <summary>
            Voice font.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.SegmentFilePaths.#ctor(Microsoft.Tts.Offline.VoiceFont)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.VoiceFont.SegmentFilePaths"/> class.
            Construction of segmentation file path manager.
            </summary>
            <param name="outer">Voice font instance.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.SegmentFilePaths.Item(System.String)">
            <summary>
            Gets segmentation file path with a given sentence id.
            </summary>
            <param name="index">Sentence id.</param>
            <returns>Segmentation file path.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFont.Wave16kFilePaths">
            <summary>
            16k Hz waveform file path manager.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.VoiceFont.Wave16kFilePaths.outer">
            <summary>
            Voice font.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFont.Wave16kFilePaths.#ctor(Microsoft.Tts.Offline.VoiceFont)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.VoiceFont.Wave16kFilePaths"/> class.
            Construction of 16k Hz waveform file path manager.
            </summary>
            <param name="outer">Voice font instance.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFont.Wave16kFilePaths.Item(System.String)">
            <summary>
            Gets 16k Hz waveform file path with a given sentence id.
            </summary>
            <param name="index">Sentence id.</param>
            <returns>16k Hz waveform file path.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFontError">
            <summary>
            Voice font error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.VoiceFontError.OtherErrors">
            <summary>
            Other errors
            Parameters: 
            {0}: error description.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFontHeader">
            <summary>
            Common voice font header.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontHeader.Save(System.IO.BinaryWriter)">
            <summary>
            Save the header with given writer.
            </summary>
            <param name="writer">The binary writer used to save the header.</param>
            <returns>Size.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontHeader.Load(System.IO.BinaryReader)">
            <summary>
            Read the header from given reader.
            </summary>
            <param name="reader">Binary reader.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontHeader.FileTag">
            <summary>
            Gets or sets Tag of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontHeader.FormatTag">
            <summary>
            Gets or sets GUID of the file format.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontHeader.DataSize">
            <summary>
            Gets or sets Bytes of data after this field.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontHeader.Version">
            <summary>
            Gets or sets Version Number.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontHeader.Build">
            <summary>
            Gets or sets Build Number.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.DataLoadingEventHandler">
            <summary>
            Data loading event handler.
            </summary>
            <param name="percent">Percent of data loaded.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.AllDataLoadedEventHandler">
            <summary>
            All data loaded event handler.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFontSet">
            <summary>
            Voice font set class to manage all a collection of voice font.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.VoiceFontSet"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.Load(System.String)">
            <summary>
            Load voice font set from configuration file.
            </summary>
            <param name="configFilePath">Configuration file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.DoLoadDatabase">
            <summary>
            Doing load voice font database.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.Dispose">
            <summary>
            Dispose this object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.Dispose(System.Boolean)">
            <summary>
            Dispose this object.
            </summary>
            <param name="disposing">Flag indicating whether delete unmanaged resource.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.OnDummyFormMessage(System.Windows.Forms.Message@)">
            <summary>
            Handle OnMessage event of _formDummy.
            </summary>
            <param name="m">Message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.Load(System.Xml.XmlDocument)">
            <summary>
            Load voice font from XML DOM object.
            </summary>
            <param name="configDom">Configuration DOM object.</param>
        </member>
        <member name="E:Microsoft.Tts.Offline.VoiceFontSet.OnDataLoading">
            <summary>
            Event of data loading status updated.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.VoiceFontSet.OnAllDataLoaded">
            <summary>
            Event of data loaded.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontSet.EventDatabaseReady">
            <summary>
            Gets Windows event set while database is ready for using.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontSet.DataLoading">
            <summary>
            Gets Data loading worker thread.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontSet.VoiceFonts">
            <summary>
            Gets Voice font dictionary indexed by voice name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFontSet.OnMessageEventHandler">
            <summary>
            On message event handling.
            </summary>
            <param name="m">Message.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFontSet.DummyForm">
            <summary>
            Dummy form to receive Windows message for according thread 
            Communication for WinForm.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.DummyForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.VoiceFontSet.DummyForm"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.DummyForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Wnd message procedure.
            </summary>
            <param name="m">Message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.VoiceFontSet.DummyForm.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resource.
            </summary>
            <param name="disposing">Flag indicating whether to dispose
            unmanaged resouece.</param>
        </member>
        <member name="E:Microsoft.Tts.Offline.VoiceFontSet.DummyForm.OnMessage">
            <summary>
            OnMessage event.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.DataLoadingEventArgs">
            <summary>
            Data loading events.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DataLoadingEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.DataLoadingEventArgs"/> class.
            </summary>
            <param name="percent">Percent.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.DataLoadingEventArgs.Percent">
            <summary>
            Gets or sets Percent.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlVoiceFont">
            <summary>
            Voice font data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlVoiceFont.LoadingStatusChanged">
            <summary>
            Message id of voice font loading status changed event .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.XmlVoiceFont"/> class.
            </summary>
            <param name="hwnd">Window handle to recieve loading event.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.FileListMap,Microsoft.Tts.Offline.XmlScriptFile)">
            <summary>
            Check data file consistence between script file and filemap file.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="script">Script file instance.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateWaveAlignment(Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String)">
            <summary>
            Check waveform files consistence between waveform and
            Referrence waveform files with the filemap.
            </summary>
            <param name="fileMap">File list map listed the sentences to validate.</param>
            <param name="waveDir">Base directory of waveform file.</param>
            <param name="refWaveDir">Directory of referrence waveform file.</param>
            <param name="refName">The name of the referrence waveform directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String)">
            <summary>
            Check data file consistence between segment, epoch and wave16k files with the filemap.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="wave16kDir">16k Hz waveform file directory.</param>
            <param name="epochDir">Epoch file directory.</param>
            <param name="segmentDir">Segmentation file directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.FileListMap,System.String,System.String)">
            <summary>
            Check data file consistence between segment, and wave files with the file map.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="waveDir">Waveform file directory.</param>
            <param name="segmentDir">Segmentation file directory.</param>
            <returns>Error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.FileListMap,Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData,System.String)">
            <summary>
            Check data consistence between script file and segmentation files.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="script">Script file instance.</param>
            <param name="phoneme">Phoneme used to get units.</param>
            <param name="sliceData">Slice data used to get units.</param>
            <param name="segmentDir">Segment file directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.FileListMap,Microsoft.Tts.Offline.XmlScriptFile,System.String)">
            <summary>
            Check phone based data consistence between script file and segmentation files.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="script">Script file instance.</param>
            <param name="segmentDir">Segment file directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateSilenceInWord(Microsoft.Tts.Offline.FileListMap,Microsoft.Tts.Offline.XmlScriptFile,System.String)">
            <summary>
            Checks whether the data contains -sil- in within a word.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="script">Script file instance.</param>
            <param name="segmentDir">Segment file directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ExtractAcoustic(Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,System.String)">
            <summary>
            Extract acoustic features for a given script file.
            </summary>
            <param name="script">Script file instance.</param>
            <param name="phoneme">Phoneme used to get units.</param>
            <param name="sliceData">Slice data used to get units.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segmentation file directory.</param>
            <param name="wave16kDir">16k Hz waveform file directory.</param>
            <param name="epochDir">Epoch file directory.</param>
            <param name="targetFilePath">Target acoustic file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ReadSamplesPerSecond(System.String)">
            <summary>
            Read samples per second of the speech data in the voice font.
            </summary>
            <param name="fontPath">Voice font path.</param>
            <returns>Samples per second of data for the given voice font.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.FileListMap,System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check phone based data consistence between script item and segmentation file.
            </summary>
            <param name="script">Script file instance.</param>
            <param name="item">Script item.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segment file directory.</param>
            <param name="errorSet">Data error set found.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateSilenceInWord(Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.FileListMap,System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Checks whether the data contains -sil- in within a word.
            </summary>
            <param name="script">Script file instance.</param>
            <param name="item">Script item.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segment file directory.</param>
            <param name="errorSet">Data error set found.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateDataAlignment(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData,Microsoft.Tts.Offline.FileListMap,System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check data consistence between script item and segmentation file.
            </summary>
            <param name="item">Script item.</param>
            <param name="phoneme">Phoneme used to get units.</param>
            <param name="sliceData">Slice data used to get units.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segment file directory.</param>
            <param name="errorSet">Data error set found.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.Initialize">
            <summary>
            Initialize this voice font instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.BuildUtterances">
            <summary>
            Build utterance instances.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ParseConfig(System.Xml.XmlElement)">
            <summary>
            Parse voice font configuration.
            </summary>
            <param name="config">Configuration in XmlElement.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateDataAlignment(System.String,System.String,System.Text.StringBuilder)">
            <summary>
            Check data file consistence between segment and wave file.
            </summary>
            <param name="alignmentFile">Alignment file.</param>
            <param name="waveFile">Waveform file.</param>
            <param name="errorMessage">Error message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateDataAlignment(System.String,System.String,System.String,System.Text.StringBuilder)">
            <summary>
            Check data file consistence between segment, epoch and wave16k file.
            </summary>
            <param name="alignmentFile">Alignment file.</param>
            <param name="epochFile">Epoch file.</param>
            <param name="wave16kFile">16k Hz waveform file.</param>
            <param name="error">Error message.</param>
            <returns>Data warning message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.GetLastSilenceAlign(Microsoft.Tts.Offline.SegmentFile,System.Text.StringBuilder)">
            <summary>
            Gets the last silence align of the given segment file.
            </summary>
            <param name="segmentFile">The given segment file.</param>
            <param name="builder">The string builder for error message.</param>
            <returns>The last silence align.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateAlignmentFile(System.String,System.Text.StringBuilder)">
            <summary>
            Validate alingment file.
            </summary>
            <param name="alignmentFile">Alignment file to validate.</param>
            <param name="builder">String builder for error message.</param>
            <returns>The segment file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ValidateEndingEpoch(System.String,System.String,System.Int32[],System.Int32[],System.Int32)">
            <summary>
            Validate ending epoch data, which should be negative value for silence.
            </summary>
            <param name="alignmentFile">Alignment file path.</param>
            <param name="epochFile">Epoch file path.</param>
            <param name="epochs">Epochs data.</param>
            <param name="epochOffsets">Epochs offset.</param>
            <param name="lastSilenceAlign">Last silence alignment position.</param>
            <returns>Warining message.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.ExtractAcoustic(System.IO.StreamWriter,Microsoft.Tts.Offline.XmlScriptFile,System.String,Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String)">
            <summary>
            Extract acoustic features for a given sentence.
            </summary>
            <param name="writer">Stream writer to write acoustic features.</param>
            <param name="script">Script file instance.</param>
            <param name="sid">Script item id.</param>
            <param name="phoneme">Phoneme used to get units.</param>
            <param name="sliceData">Slice data used to get units.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segmentation file directory.</param>
            <param name="wave16kDir">16k Hz waveform file directory.</param>
            <param name="epochDir">Epoch file directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.DataManager_DataLoadingStatusChanged(System.Object,Microsoft.Tts.Offline.DataLoadingEventArgs)">
            <summary>
            Handle DataLoadingStatusChanged event of DataManager.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="E:Microsoft.Tts.Offline.XmlVoiceFont.DataLoadingStatusChanged">
            <summary>
            Data loading status changed event.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.FontPath">
            <summary>
            Gets or sets Location of the voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.VoiceName">
            <summary>
            Gets or sets Name of this voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.TokenId">
            <summary>
            Gets or sets Voice token id used by SAPI in registry to identify the voice.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.SamplesPerSecond">
            <summary>
            Gets Samples per second of this voice font's speech data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.UnitFeatureFilePath">
            <summary>
            Gets or sets The location of unit feature file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.EngineType">
            <summary>
            Gets or sets EngineType.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.PrimaryLanguage">
            <summary>
            Gets or sets PrimaryLanguage.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.CartTreeManager">
            <summary>
            Gets or sets CartTreeManager.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.WeightTable">
            <summary>
            Gets or sets WeightTable.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.Wave16kDirectories">
            <summary>
            Gets Wave16kDir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.SegmentDirectories">
            <summary>
            Gets SegmentDir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.WaveUnits">
            <summary>
            Gets WaveUnits.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.Utterances">
            <summary>
            Gets Utterance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.FileMap">
            <summary>
            Gets or sets File list map for this voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.ScriptFile">
            <summary>
            Gets or sets Script file for this voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.Segments">
            <summary>
            Gets Segmentation file path manager.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.Wave16ks">
            <summary>
            Gets 16k Hz waveform file path manager.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlVoiceFont.FontFileType">
            <summary>
            Font file type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlVoiceFont.FontFileType.None">
            <summary>
            Not font file type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlVoiceFont.FontFileType.Brk">
            <summary>
            Brk(Break model) file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlVoiceFont.FontFileType.Emp">
            <summary>
            Emp(Emphasis model) file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlVoiceFont.SegmentFilePaths">
            <summary>
            Segmentation file path manager.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlVoiceFont.SegmentFilePaths.outer">
            <summary>
            Voice font.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.SegmentFilePaths.#ctor(Microsoft.Tts.Offline.XmlVoiceFont)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.XmlVoiceFont.SegmentFilePaths"/> class.
            </summary>
            <param name="outer">Voice font instance.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.SegmentFilePaths.Item(System.String)">
            <summary>
            Gets segmentation file path with a given sentence id.
            </summary>
            <param name="index">Sentence id.</param>
            <returns>Segmentation file path.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlVoiceFont.Wave16kFilePaths">
            <summary>
            16k Hz waveform file path manager.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.XmlVoiceFont.Wave16kFilePaths.outer">
            <summary>
            Voice font.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlVoiceFont.Wave16kFilePaths.#ctor(Microsoft.Tts.Offline.XmlVoiceFont)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.XmlVoiceFont.Wave16kFilePaths"/> class.
            </summary>
            <param name="outer">Voice font instance.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlVoiceFont.Wave16kFilePaths.Item(System.String)">
            <summary>
            Gets 16k Hz waveform file path with a given sentence id.
            </summary>
            <param name="index">Sentence id.</param>
            <returns>16k Hz waveform file path.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.WaveUnit">
            <summary>
            Wave unit definition, which are represented for a wave segment
            In speech database.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WaveUnit.ReadAllData(System.Collections.Generic.Dictionary{System.Int64,Microsoft.Tts.Offline.WaveUnit},System.String,System.Int32)">
            <summary>
            Read all wave units from unit feature file, usual UnitFeature.xml.
            </summary>
            <param name="waveUnits">Wave unit dictionary.</param>
            <param name="featureFilePath">Unit feature file path.</param>
            <param name="samplesPerSecond">Samples per second.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WaveUnit.ParseUntFile(System.String)">
            <summary>
            Parse text line in wave segment sequence file, usual WaveSegSeq.vec
            <param />
            The definitions of each column are listed as following:
            <param />
            (sentence id) (unit index in sentence)
            (sample offset in sentence) (sample length)
            (epoch offset) (epoch length) (8K compressed epoch length) (16K compressed epoch length)
            (relative path) (unit name)
            <example>
            MNNO0001CD1   0    25998   1514    162   15   16   15 MNNO0001CD1       ax
            MNNO0001CD1   1    27512   3050    177   36   36   36 MNNO0001CD1     m+eh
            MNNO0001CD1   2    30562   1800    213   29   30   29 MNNO0001CD1     r+ax.
            </example>
            </summary>
            <param name="line">Line in wave segment sequence file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WaveUnit.IsBeNeighbor(Microsoft.Tts.Offline.WaveUnit)">
            <summary>
            Indicate weather a unit is neighboring with this unit.
            </summary>
            <param name="waveUnit">Wave unit instance.</param>
            <returns>0 if neighbor with, -1 false, or else the distance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WaveUnit.DoParseUntFile(System.String)">
            <summary>
            Parse text line in wave segment sequence file, usual WaveSegSeq.vec.
            </summary>
            <param name="line">Line of wave segment.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WaveUnit.LoadWui(Microsoft.Tts.Offline.UnitFeature,System.Int32)">
            <summary>
            Load wave unit information.
            </summary>
            <param name="unitFeature">Unit feature item.</param>
            <param name="samplesPerSecond">Sample rate.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.VoiceFont">
            <summary>
            Gets or sets Voice font, currently work on.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.NeighborPre">
            <summary>
            Gets or sets a value indicating whether this unit is neighbor to the previous unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.Key">
            <summary>
            Gets Wave unit key, "sentence id" + " " + "IndexInSentence".
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.Features">
            <summary>
            Gets or sets Tts unit feature.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.Name">
            <summary>
            Gets or sets Unit name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.RelativePath">
            <summary>
            Gets or sets Sentence relative path, the second part/column in the file-list map file
            <param />
            <example>
            20271 Alphabet/20271
            MNNO0001CD1 MNNO0001CD1.
            </example>
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.Epoch8KCompressLength">
            <summary>
            Gets or sets Length of the 8K Hz compressed epoch data of this unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.Epoch16KCompressLength">
            <summary>
            Gets or sets Length of the 16K Hz compressed epoch data of this unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.EpochOffset">
            <summary>
            Gets or sets Offset of epoch of this unit over the whole epoch file in voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.EpochLength">
            <summary>
            Gets or sets Length of the uncompressed epoch data of this unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.EpochOffsetInSentence">
            <summary>
            Gets or sets Offset of epoch of this unit over the epoch file in the sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.SampleOffsetInSentence">
            <summary>
            Gets or sets Sample offset of wave of this unit over the wave file in the sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.SampleLength">
            <summary>
            Gets or sets Sample length of wave of this unit .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.SampleOffset">
            <summary>
            Gets or sets Sample offset of this unit in whole speech database.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.IndexInSentence">
            <summary>
            Gets or sets Slice index number in the sentence starting from 0, excluding Phoneme.Silence slice.
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.Tts.Offline.WaveUnit.SentenceId">
            <summary>
            Gets or sets Sentence identity.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.WeightTableHeaderSerial">
            <summary>
            APL file header serialization data block.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTableHeaderSerial.Read(System.IO.BinaryReader)">
            <summary>
            Read a WeightTableHeaderSerial block from bindary stream.
            </summary>
            <param name="br">Binary reader to read data for weight table header.</param>
            <returns>Weight table header serial.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTableHeaderSerial.ToBytes">
            <summary>
            Converts this instance into byte array.
            </summary>
            <returns>Byte array presenting this instance.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.WeightTable">
            <summary>
            Weight table.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.#ctor(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.WeightTable"/> class.
            </summary>
            <param name="language">Language of the weight table.</param>
            <param name="engine">Engine type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.SaveAsApl(System.String,Microsoft.Tts.Offline.Config.FontBuildNumber)">
            <summary>
            Save weight table to apl file.
            </summary>
            <param name="filePath">Target file path to save weight table data.</param>
            <param name="buildNumber">Voice font build number.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.SaveAsApl(System.String)">
            <summary>
            Save weight table to apl file.
            </summary>
            <param name="filePath">The target location of the file to save into.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.Load(System.String)">
            <summary>
            Load text file of weight table configuration.
            </summary>
            <param name="filePath">Weight table file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCost(Microsoft.Tts.Offline.TtsUnitFeature,Microsoft.Tts.Offline.TtsUnitFeature)">
            <summary>
            Calculate the target cost.
            </summary>
            <param name="condidate">Feature of condidate unit.</param>
            <param name="target">Feature of target unit to find.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcNotContinuedSmoothCost(Microsoft.Tts.Offline.TtsBreak,System.Int32)">
            <summary>
            Calculate the smoothing cost of not continued for break.
            </summary>
            <param name="ttsBreak">Break level.</param>
            <param name="jointTypeIndex">Joint type index of this break instance.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.WriteFloatArrays(System.IO.BinaryWriter,System.Single[][])">
            <summary>
            Write float arrays to binary stream.
            </summary>
            <param name="bw">Binary writer to save data into.</param>
            <param name="arrays">Float arrays.</param>
            <returns>Total written bytes.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.ParseSection(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.DataSection},System.String)">
            <summary>
            Parse data section.
            </summary>
            <param name="sections">Sessions to get data from.</param>
            <param name="sectionName">Session name.</param>
            <returns>Float array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.ParseSection2(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.DataSection},System.String)">
            <summary>
            Parse session.
            </summary>
            <param name="sections">Sessions to get data from.</param>
            <param name="sectionName">Session name.</param>
            <returns>Float arrays.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.RemoveComment(System.String)">
            <summary>
            Remove comment from line.
            </summary>
            <param name="line">Line to remove comment.</param>
            <returns>Line with comment removed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.WriteWeightTable(System.IO.BinaryWriter,System.Single[][],System.Single)">
            <summary>
            Write weighted cost table to binary stream.
            </summary>
            <param name="bw">Binary writer to save data into.</param>
            <param name="table">Cost table.</param>
            <param name="weight">Weight.</param>
            <returns>Total written bytes.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.SaveSection(System.IO.BinaryWriter)">
            <summary>
            Write one section to binary stream.
            </summary>
            <param name="bw">Binary writer to save section into.</param>
            <returns>Total written bytes.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.LoadDataSections(System.IO.StreamReader)">
            <summary>
            Load all data section from stream.
            </summary>
            <param name="sr">Stream reader of weight table file to load data sessions.</param>
            <returns>Data sessions loaded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.LoadOneSection(System.IO.StreamReader,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.DataSection},System.String)">
            <summary>
            Load one data section from stream.
            </summary>
            <param name="sr">Stream reader of the weight table file.</param>
            <param name="sections">Session dictionary to save.</param>
            <param name="sectionName">Session name.</param>
            <returns>Next line not in current session.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.GetLastTtsPhoneId">
            <summary>
            Get the last phone id of phoneme for current language.
            </summary>
            <returns>Phone id.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCostTtsEmphasis(Microsoft.Tts.Offline.TtsEmphasis,Microsoft.Tts.Offline.TtsEmphasis)">
            <summary>
            Calculate the target cost for emphasis feature.
            </summary>
            <param name="src">Source TtsEmphasis feature.</param>
            <param name="target">Target TtsEmphasis feature.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCostTtsStress(Microsoft.Tts.Offline.TtsStress,Microsoft.Tts.Offline.TtsStress)">
            <summary>
            Calculate the target cost for stress feature.
            </summary>
            <param name="src">Source TtsStress feature.</param>
            <param name="target">Target TtsStress feature.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCostRightContextTone(System.Int32,System.Int32)">
            <summary>
            Calculate the target cost for right context tone feature.
            </summary>
            <param name="src">Source RightContextTone feature.</param>
            <param name="target">Target RightContextTone feature.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCostLeftContextTone(System.Int32,System.Int32)">
            <summary>
            Calculate the target cost for left context tone feature.
            </summary>
            <param name="src">Source CostLeftContextTone feature.</param>
            <param name="target">Target CostLeftContextTone feature.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCostRightContextPhone(System.Int32,System.Int32)">
            <summary>
            Calculate the target cost for right context phone feature.
            </summary>
            <param name="src">Source RightContextPhone feature.</param>
            <param name="target">Target RightContextPhone feature.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCostLeftContextPhone(System.Int32,System.Int32)">
            <summary>
            Calculate the target cost for left context phone feature.
            </summary>
            <param name="src">Source LeftContextPhone feature.</param>
            <param name="target">Target LeftContextPhone feature.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCostPosInSyl(Microsoft.Tts.Offline.PosInSyllable,Microsoft.Tts.Offline.PosInSyllable)">
            <summary>
            Calculate the target cost for position in syllable feature.
            </summary>
            <param name="src">Source PosInSyllable feature.</param>
            <param name="target">Target PosInSyllable feature.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCostPosInWord(Microsoft.Tts.Offline.PosInWord,Microsoft.Tts.Offline.PosInWord)">
            <summary>
            Calculate the target cost for position in word feature.
            </summary>
            <param name="src">Source PosInWord feature.</param>
            <param name="target">Target PosInWord feature.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCostPosInSentence(Microsoft.Tts.Offline.PosInSentence,Microsoft.Tts.Offline.PosInSentence)">
            <summary>
            Calculate the target cost for position in sentence feature.
            </summary>
            <param name="src">Source PosInSentence feature.</param>
            <param name="target">Target PosInSentence feature.</param>
            <returns>Cost.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.GetTargetCost(Microsoft.Tts.Offline.TtsFeature)">
            <summary>
            Get target cost table.
            </summary>
            <param name="featureId">Feature id.</param>
            <returns>Target cost table.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.SetTargetCost(Microsoft.Tts.Offline.TtsFeature,System.Single[][])">
            <summary>
            Set target cost table.
            </summary>
            <param name="featureId">Feature id.</param>
            <param name="costTable">Target cost table.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WeightTable.CalcTargetCost(Microsoft.Tts.Offline.TtsFeature,System.Int32,System.Int32)">
            <summary>
            Calculate the target cost.
            </summary>
            <param name="featureId">Feature id.</param>
            <param name="src">Source.</param>
            <param name="target">Target.</param>
            <returns>Cost.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.FilePath">
            <summary>
            Gets or sets FilePath.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.RightToneTargetCost">
            <summary>
            Gets or sets RightToneTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.LeftToneTargetCost">
            <summary>
            Gets or sets LeftToneTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.TotalConcateCostWeight">
            <summary>
            Gets or sets TotalConcateCostWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.TotalTargetCostWeight">
            <summary>
            Gets or sets TotalTargetCostWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.WeightConcateCost">
            <summary>
            Gets or sets WeightConcateCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.NotContinueConcateCost">
            <summary>
            Gets or sets NotContinueConcateCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.RightPhoneTargetCost">
            <summary>
            Gets or sets RightPhoneTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.LeftPhoneTargetCost">
            <summary>
            Gets or sets LeftPhoneTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.WeightTargetCost">
            <summary>
            Gets or sets WeightTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.PosInSentWeight">
            <summary>
            Gets PosInSentWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.PosInWordWeight">
            <summary>
            Gets PosInWordWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.PosInSyllWeight">
            <summary>
            Gets PosInSyllWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.LeftPhoneWeight">
            <summary>
            Gets LeftPhoneWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.RightPhoneWeight">
            <summary>
            Gets RightPhoneWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.LeftToneWeight">
            <summary>
            Gets LeftToneWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.RightToneWeight">
            <summary>
            Gets RightToneWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.StessWeight">
            <summary>
            Gets StessWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.EmphasisWeight">
            <summary>
            Gets EmphasisWeight.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.EmphasisTargetCost">
            <summary>
            Gets or sets EmphasisTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.StressTargetCost">
            <summary>
            Gets or sets StressTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.PosInSentTargetCost">
            <summary>
            Gets or sets PosInSentTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.PosInWordTargetCost">
            <summary>
            Gets or sets PosInWordTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.PosInSyllTargetCost">
            <summary>
            Gets or sets PosInSyllTargetCost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.ToneCount">
            <summary>
            Gets or sets ToneCount.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.PhoneCount">
            <summary>
            Gets or sets PhoneCount.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WeightTable.LangId">
            <summary>
            Gets or sets LangId.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.WordStatisticsFile">
            <summary>
            Word statistic file, which is generated by CorpusAnalyzer.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.WordStatisticsFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Override the PerformanceSave function.
            </summary>
            <param name="writer">Xml writer.</param>
            <param name="contentController">To control the saving content.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.PerformanceLoad(System.IO.StreamReader,System.Object)">
            <summary>
            Override the perfomanceLoad function
            It throws ArgumentException, FormatException.
            </summary>
            <param name="reader">Stream reader of the input file.</param>
            <param name="contentController">To control the loading content.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.PerformanceLoadWord(System.Xml.XmlTextReader)">
            <summary>
            Perfomance loading word information.
            </summary>
            <param name="xmlReader">Xml reader.</param>
            <returns>The word info.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.Schema">
            <summary>
            Gets Schema of script.xml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.Items">
            <summary>
            Gets Word list with their information.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.WordStatisticsFile.WordType">
            <summary>
            Word type or review status of the word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordStatisticsFile.WordType.NR">
            <summary>
            Current word is not reviewed, others are reviewed.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordStatisticsFile.WordType.Y">
            <summary>
            Current word meets the review requirement.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordStatisticsFile.WordType.N">
            <summary>
            Current word doesn't meet the review requirement.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordStatisticsFile.WordType.X">
            <summary>
            Current word is not a valid word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordStatisticsFile.WordType.ALL">
            <summary>
            Any word.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.WordStatisticsFile.WordInfo">
            <summary>
            Word information.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.WordInfo.FrequencyCoverageScale">
            <summary>
            Gets or sets Frequency coverage scale.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.WordInfo.Frequency">
            <summary>
            Gets or sets Frequency of the word in corpus.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.WordInfo.WordType">
            <summary>
            Gets or sets LE review status.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.WordInfo.Sample">
            <summary>
            Gets or sets Sample sentence of the word.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.WordStatisticsFile.ContentController">
            <summary>
            Content controller for loading and saving this file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.WordStatisticsFile.ContentController"/> class.
            </summary>
            <param name="startId">Start id of the word list.</param>
            <param name="endId">End id of the word list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.WordStatisticsFile.ContentController"/> class.
            </summary>
            <param name="startFcs">Frequency coverage scale of the start word.</param>
            <param name="endFcs">Frequency coverage scale of the end word.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.WordStatisticsFile.ContentController"/> class.
            </summary>
            <param name="startWord">Start word of the word list.</param>
            <param name="endWord">End word of the word list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.#ctor(System.Int32,System.Int32,Microsoft.Tts.Offline.WordStatisticsFile.WordType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.WordStatisticsFile.ContentController"/> class.
            </summary>
            <param name="startId">Start word id of the word list.</param>
            <param name="endId">End word id of the word list.</param>
            <param name="wordType">LE review status for filter.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.#ctor(System.String,System.String,Microsoft.Tts.Offline.WordStatisticsFile.WordType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.WordStatisticsFile.ContentController"/> class.
            </summary>
            <param name="startWord">Start word of the word list.</param>
            <param name="endWord">End word of the word list.</param>
            <param name="wordType">LE review status for filter.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.#ctor(System.Double,System.Double,Microsoft.Tts.Offline.WordStatisticsFile.WordType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.WordStatisticsFile.ContentController"/> class.
            </summary>
            <param name="startFcs">Frequency coverage scale of the start word.</param>
            <param name="endFcs">Frequency coverage scale of the end word.</param>
            <param name="wordType">LE review status for filter.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.CheckContentStart(System.Int32,System.String,System.Double)">
            <summary>
            Check if the word is in the start of content range.
            </summary>
            <param name="id">Id of the word.</param>
            <param name="word">Word text.</param>
            <param name="fcs">Frequency coverage scale.</param>
            <returns>True for started.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.CheckContentEnd(System.Int32,System.String,System.Double)">
            <summary>
            Check if the word is in the end of content range.
            </summary>
            <param name="id">Id of the word.</param>
            <param name="word">Word text.</param>
            <param name="fcs">Frequency coverage scale.</param>
            <returns>True for end.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.WordTypeMatches(Microsoft.Tts.Offline.WordStatisticsFile.WordType)">
            <summary>
            Check if the word type matches this controller.
            </summary>
            <param name="wordType">Word type.</param>
            <returns>True if matches.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.StartId">
            <summary>
            Gets or sets Start word id of the word list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.EndId">
            <summary>
            Gets or sets End word id of the word list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.StartWord">
            <summary>
            Gets or sets Start word of the word list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.EndWord">
            <summary>
            Gets or sets End word of the word list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.StartFcs">
            <summary>
            Gets or sets Frequency coverage scale of the start word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.EndFcs">
            <summary>
            Gets or sets Frequency coverage scale of the end word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.WordStatusType">
            <summary>
            Gets or sets LE review status for filter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.ControllType">
            <summary>
            Gets or sets Controller type.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.ControllerType">
            <summary>
            Controller type enumarion.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.ControllerType.Word">
            <summary>
            Controll by word text.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.ControllerType.ID">
            <summary>
            Controll by word id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.ControllerType.Fcs">
            <summary>
            Controll by word frequency coverage scale.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordStatisticsFile.ContentController.ControllerType.None">
            <summary>
            Controll only by word type.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Device.DeviceDetector">
            <summary>
            Device detector.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Device.DeviceDetector.IsInstalled(Microsoft.Tts.Offline.Device.DeviceDetector.DeviceType)">
            <summary>
            Check whether is installed.
            </summary>
            <param name="deviceType">Device type.</param>
            <returns>Whether is installed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Device.DeviceDetector.IsAudioInstalled">
            <summary>
            Check whether audio is installed.
            </summary>
            <returns>Whether audio is installed.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Device.DeviceDetector.DeviceType">
            <summary>
            Device type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Device.DeviceDetector.DeviceType.Audio">
            <summary>
            Audio device type.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Device.NativeMethods.WaveOutGetNumDevs">
            <summary>
            Get wave out device number.
            </summary>
            <returns>Wave out device number.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Device.NativeMethods.MidiOutGetNumDevs">
            <summary>
            Get midi out device number.
            </summary>
            <returns>Midi out device number.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.Logic">
            <summary>
            Logical operation type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.Logic.End">
            <summary>
            End of the logic.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.Logic.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.Logic.Bracket">
            <summary>
            Bracket.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.Logic.Or">
            <summary>
            Or operator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.Logic.And">
            <summary>
            And operator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.Logic.Not">
            <summary>
            Not operator.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.OperatorSerial">
            <summary>
            Operator data structure for serialization.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.OperatorSerial.Code">
            <summary>
            Operation code.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.OperatorSerial.Flag">
            <summary>
            Bit0 for l_op, bit1 for r_op.
            </summary>  
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.OperatorSerial.LeftOp">
            <summary>
            Left operand.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.OperatorSerial.RightOp">
            <summary>
            Right operand.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.ToString(System.Int32,Microsoft.Tts.Offline.Cart.OperatorSerial[])">
            <summary>
            Convert expresses as logical string, for example:
            <![CDATA[ 10|~20&30 ]]>.
            </summary>
            <param name="startPosition">First logical operator to take.</param>
            <param name="express">Express list.</param>
            <returns>Logic string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.Parse(System.String)">
            <summary>
            Parse logical string to operators.
            </summary>
            <param name="logic">Logic string.</param>
            <returns>Operators.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.Read(System.IO.BinaryReader)">
            <summary>
            Read a OperatorSerial block from binary stream.
            </summary>
            <param name="br">Binary reader to read Operator.</param>
            <returns>Operator.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.op_Equality(Microsoft.Tts.Offline.Cart.OperatorSerial,Microsoft.Tts.Offline.Cart.OperatorSerial)">
            <summary>
            Operator ==.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.op_Inequality(Microsoft.Tts.Offline.Cart.OperatorSerial,Microsoft.Tts.Offline.Cart.OperatorSerial)">
            <summary>
            Operator !=.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if not equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.GetHashCode">
            <summary>
            Get hash code for this object.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.Equals(System.Object)">
            <summary>
            Equal.
            </summary>
            <param name="obj">Other object to compare with.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.Equals(Microsoft.Tts.Offline.Cart.OperatorSerial)">
            <summary>
            Equal.
            </summary>
            <param name="other">Other object to compare with.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.ToBytes">
            <summary>
            Serialize this instance into binary data.
            </summary>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.ParseInt(System.String,System.Int32@)">
            <summary>
            Parse a int from the string, update the index to 
            The end of the string.
            </summary>
            <param name="str">String to parse.</param>
            <param name="index">Offset in the string.</param>
            <returns>Int parsed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.DoBracketOperation(System.Collections.Generic.Stack{Microsoft.Tts.Offline.Cart.OperatorSerial},System.Collections.Generic.Stack{Microsoft.Tts.Offline.Cart.OperatorSerial},System.Collections.Generic.List{Microsoft.Tts.Offline.Cart.OperatorSerial})">
            <summary>
            Execute the bracket operations on the operator stack.
            </summary>
            <param name="operators">Operator stack.</param>
            <param name="values">Value stack.</param>
            <param name="express">Express list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.DoHighPriorOperation(System.Collections.Generic.Stack{Microsoft.Tts.Offline.Cart.OperatorSerial},System.Collections.Generic.Stack{Microsoft.Tts.Offline.Cart.OperatorSerial},System.Int32,System.Collections.Generic.List{Microsoft.Tts.Offline.Cart.OperatorSerial})">
            <summary>
            Execute higher priority operation then threshold.
            </summary>
            <param name="operators">Operator stack.</param>
            <param name="values">Value stack.</param>
            <param name="threshold">Threshold of operator priority.</param>
            <param name="express">Express list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.OperatorSerial.Operate(System.Collections.Generic.Stack{Microsoft.Tts.Offline.Cart.OperatorSerial},System.Collections.Generic.Stack{Microsoft.Tts.Offline.Cart.OperatorSerial},System.Collections.Generic.List{Microsoft.Tts.Offline.Cart.OperatorSerial})">
            <summary>
            Do operation on operator and value stacks.
            </summary>
            <param name="operators">Operator stack.</param>
            <param name="values">Value stack.</param>
            <param name="express">Express list.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.CartNode">
            <summary>
            Cart node in cart tree.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartNode.#ctor(Microsoft.Tts.Offline.Cart.MetaCart)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Cart.CartNode"/> class.
            </summary>
            <param name="metaCart">Meta CART data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartNode.Test(Microsoft.Tts.Offline.TtsUnitFeature)">
            <summary>
            Find a node, under and including this node, statisfy special feature.
            </summary>
            <param name="feature">Unit feature.</param>
            <returns>Cart node most closing to the feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartNode.JoinSubTree(System.Boolean,System.Int32@,Microsoft.Tts.Offline.Cart.CartNode)">
            <summary>
            Join an sub-CART tree this .
            </summary>
            <param name="isLeft">Is a left child .</param>
            <param name="idx">Node index .</param>
            <param name="subRoot">New child node .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartNode.ReverseBuildUnitSet">
            <summary>
            Reversing build unit set from the leaf nodes up to root node.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartNode.RemappingUnitSet(System.Collections.ObjectModel.Collection{System.Int32},System.Int32)">
            <summary>
            Traverse node and refresh unit set of leaf node.
            </summary>
            <param name="positions">Position collection.</param>
            <param name="length">New unit set length.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartNode.Save(System.IO.BinaryWriter)">
            <summary>
            Save this CART tree node instance in the binary format.
            </summary>
            <param name="bw">Binary writer to save CART node.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartNode.Load(System.IO.BinaryReader)">
            <summary>
            Load a Cart Node from bindary stream, which is Mulan CRT compatible.
            </summary>
            <param name="br">Binary reader to load CART node.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.Index">
            <summary>
            Gets or sets Index in tree first-order vister.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.ParentIndex">
            <summary>
            Gets or sets Parent node index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.Parent">
            <summary>
            Gets or sets Parent node. null if this is root node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.LeftChild">
            <summary>
            Gets or sets Left child node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.RightChild">
            <summary>
            Gets or sets Right child node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.Question">
            <summary>
            Gets or sets Question used by this node to split units into sub nodes.
            Null if this node is leaf node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.QuestionLogic">
            <summary>
            Gets or sets Question logic express.
            This is question in string presentation. '*' for null question.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.SetPresent">
            <summary>
            Gets or sets Set/unit collection presentation in string line.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.UnitSet">
            <summary>
            Gets Units, including in this node and it's subnodes.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartNode.UnitCount">
            <summary>
            Gets Unit count of UnitSet, set bit count.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.CartNode.NodeType">
            <summary>
            Cart node type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.CartNode.NodeType.Leaf">
            <summary>
            Leaf node.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Cart.CartNode.NodeType.NotLeaf">
            <summary>
            Not leaf node.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.CartTree">
            <summary>
            CART tree.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTree.#ctor(Microsoft.Tts.Offline.Cart.MetaCart)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Cart.CartTree"/> class.
            </summary>
            <param name="metaCart">Metadata of CART tree.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTree.ParseSetPresentation(System.String,System.Collections.BitArray)">
            <summary>
            Parse set string presentation to BitArray.
            </summary>
            <param name="setPresent">Set present in string.</param>
            <param name="unitSet">Unit set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTree.ComposeSetPresent(System.Collections.BitArray)">
            <summary>
            Present BitArray into string line.
            </summary>
            <param name="unitSet">Unit set.</param>
            <returns>Set present.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTree.Test(Microsoft.Tts.Offline.TtsUnitFeature)">
            <summary>
            Search all node in this tree for which node that satisfies the special feature.
            </summary>
            <param name="feature">Unit feature.</param>
            <returns>Cart node most closing to the feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTree.Load(System.IO.BinaryReader)">
            <summary>
            Load CART tree from binary stream.
            </summary>
            <param name="br">Binary reader to load CART tree from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTree.Save(System.IO.BinaryWriter)">
            <summary>
            Save CART tree into binary format.
            </summary>
            <param name="bw">Binary reader to save CART tree.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTree.Load(System.String)">
            <summary>
            Load CART tree from text file.
            </summary>
            <param name="filePath">Text CART file to load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTree.Save(System.String)">
            <summary>
            Save CART tree to text file.
            </summary>
            <param name="filePath">Text CART file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTree.PostLoad">
            <summary>
            Run post-load.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartTree.MetaCart">
            <summary>
            Gets MetaCart.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartTree.Nodes">
            <summary>
            Gets All nodes in this tree.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartTree.Root">
            <summary>
            Gets or sets The root nod of this tree.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.Feature">
            <summary>
            Feature.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.Feature.#ctor(Microsoft.Tts.Offline.Cart.MetaCart)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Cart.Feature"/> class.
            </summary>
            <param name="metaCart">CART metadata.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.Feature.Test(Microsoft.Tts.Offline.TtsUnitFeature)">
            <summary>
            Evaluate whether a feature is satisfied with this feature.
            </summary>
            <param name="feature">Feature.</param>
            <returns>True if feature is satisfied with this instance, otherwise false.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.Feature.MetaCart">
            <summary>
            Gets MetaCart.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.Feature.Index">
            <summary>
            Gets or sets Index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.Feature.MetaFeatureIndex">
            <summary>
            Gets or sets Index in metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.Feature.Values">
            <summary>
            Gets Values or scope.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.Feature.Description">
            <summary>
            Gets description.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.MetaCart">
            <summary>
            MetaCart, manage data for CART.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.MetaCart.#ctor(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Cart.MetaCart"/> class.
            </summary>
            <param name="language">Language.</param>
            <param name="engineType">Engine type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.MetaCart.ToBytes">
            <summary>
            Convert to byte array.
            </summary>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.MetaCart.Initialize(System.IO.BinaryReader)">
            <summary>
            Initialize MetaCart question data from CRT file, which is 
            Compitiable with Mulan.
            <param />
            Data format:
            NumberOfFeature
            NumberCount FeatureId MetaFeatureId (FeatureValueId)+.
            </summary>
            <param name="br">Binary sream to load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.MetaCart.Initialize(System.String)">
            <summary>
            Initialize questions in feature set
            <param />
            Load questions/features from file, question string file is 
            In string format, not in phoneId/indexing format.
            </summary>
            <param name="questionFilePath">Question file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.MetaCart.Save(System.String)">
            <summary>
            Save meta cart data into string question file.
            </summary>
            <param name="questionFilePath">Target question file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.MetaCart.SaveValues(System.IO.StreamWriter,Microsoft.Tts.Offline.Cart.Feature,System.Type)">
            <summary>
            Save values.
            </summary>
            <param name="sw">Stream writer to save.</param>
            <param name="quest">Question.</param>
            <param name="enumType">Type of the values in the question.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.MetaCart.IdIndexedPhones(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            Get id indexed phone array.
            </summary>
            <param name="language">Language.</param>
            <param name="engineType">Engine type.</param>
            <returns>Id indexed phone array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.MetaCart.InitializeFeatureMeta">
            <summary>
            Initalize questions/features metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.MetaCart.EngineType">
            <summary>
            Gets EngineType.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.MetaCart.Language">
            <summary>
            Gets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.MetaCart.NamedMetaFeatures">
            <summary>
            Gets Features indexed by name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.MetaCart.IndexedMetaFeatures">
            <summary>
            Gets Features indexed by Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.MetaCart.Features">
            <summary>
            Gets All features.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.MetaFeature">
            <summary>
            Feature metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.MetaFeature.Name">
            <summary>
            Gets or sets Feature name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.MetaFeature.Values">
            <summary>
            Gets Feature values or scope.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.NotOperator">
            <summary>
            Not, '~' operation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.NotOperator.#ctor(Microsoft.Tts.Offline.Cart.MetaCart,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Cart.NotOperator"/> class.
            </summary>
            <param name="metaCart">CART metadata.</param>
            <param name="not">Is not operator.</param>
            <param name="id">Feature id.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.NotOperator.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>String presentation.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.NotOperator.MetaCart">
            <summary>
            Gets MetaCart.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.NotOperator.IsNot">
            <summary>
            Gets or sets a value indicating whether this is a NOT operation.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.NotOperator.FeatureId">
            <summary>
            Gets or sets Feature Identify, indicate which feature to test for this question.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.NotOperator.Description">
            <summary>
            Gets Descript this operator in meta feature data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.AndOperator">
            <summary>
            AND operation.
            <![CDATA['&']]>
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.AndOperator.#ctor(Microsoft.Tts.Offline.Cart.MetaCart)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Cart.AndOperator"/> class.
            </summary>
            <param name="metaCart">CART metadata.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.AndOperator.Parse(System.String)">
            <summary>
            Pare OR string.
            </summary>
            <param name="or">OR string to parse.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.AndOperator.Test(Microsoft.Tts.Offline.TtsUnitFeature)">
            <summary>
            Verify whether feature is satisfy with this question.
            </summary>
            <param name="feature">Feature.</param>
            <returns>True if the feature satisfies this logic, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.AndOperator.TestFeature(System.Int32,Microsoft.Tts.Offline.TtsUnitFeature)">
            <summary>
            Verify on a special feature whether feature is satisfy with this question.
            </summary>
            <param name="featureId">Feature id.</param>
            <param name="feature">Feature.</param>
            <returns>True if this logic satisfies the feature, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.AndOperator.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>String presentation.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.AndOperator.MetaCart">
            <summary>
            Gets MetaCart.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.AndOperator.NotOperators">
            <summary>
            Gets on these NotOps.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.AndOperator.Description">
            <summary>
            Gets Descript this operator in meta feature data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.Question">
            <summary>
            CART question.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.Question.#ctor(Microsoft.Tts.Offline.Cart.MetaCart)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Cart.Question"/> class.
            </summary>
            <param name="metaCart">CART metadata.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.Question.String2IdConvert(System.String,System.String,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            This will convert the cart question file from description strings
            Into binary id data
            For example, convert:
                0 PosInSyllable Onset
            To:
                0   2 0.
            </summary>
            <param name="sourceFile">Source CART question file in naming.</param>
            <param name="targetFile">Target CART question file in ids.</param>
            <param name="language">Which language the CART question is for.</param>
            <param name="engine">Which engine the CART question is for.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.Question.Id2StringConvert(System.String,System.String,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            This will convert the cart question file from binary id data into
            Description strings
            For example, convert:
                0   2 0
            To:
                0 PosInSyllable Onset.
            </summary>
            <param name="sourceFile">Source CART question file in ids.</param>
            <param name="targetFile">Target CART question file in naming.</param>
            <param name="language">Which language the CART question is for.</param>
            <param name="engine">Which engine the CART question is for.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.Question.FilterQuestion(System.String,System.String,Microsoft.Tts.Offline.TtsFeature)">
            <summary>
            Filter the Ids question file into a feature-specified question file.
            </summary>
            <param name="sourceFile">Source file.</param>
            <param name="targetFile">Target file after filtered.</param>
            <param name="feature">Feature used to filter.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.Question.Parse(System.String)">
            <summary>
            Parsing question logic.
            </summary>
            <param name="logic">Logic string to parse.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.Question.Test(Microsoft.Tts.Offline.TtsUnitFeature)">
            <summary>
            Verify whether feature is satisfy with this question.
            </summary>
            <param name="feature">Feature.</param>
            <returns>True if the feature satisfies this question , otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.Question.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>String presentation.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.Question.MetaCart">
            <summary>
            Gets MetaCart.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.Question.AndOperators">
            <summary>
            Gets '|' execute OR operation on all these _andOperators.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.Question.Description">
            <summary>
            Gets Decription.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.CartTreeManager">
            <summary>
            CartTree Manager.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTreeManager.ComposeCrtFile(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType,System.String,System.String,System.String,System.String)">
            <summary>
            Compose CRT file.
            </summary>
            <param name="language">Language.</param>
            <param name="engine">Engine type.</param>
            <param name="unitListFile">Unit list file path.</param>
            <param name="cartQuestionFile">CART question file path.</param>
            <param name="binTreeDir">Binary CART tree directory.</param>
            <param name="crtFile">File list path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTreeManager.Initialize(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType,System.String)">
            <summary>
            Initialize the instance of CART tree manager
            1) load and parse the CART question file
            2) initialize unit description table data from the phoneme of the 
               specified language and engine type.
            </summary>
            <param name="language">Language.</param>
            <param name="engine">Engine type.</param>
            <param name="cartQuestionFilePath">CART question file path.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartTreeManager.CartTrees">
            <summary>
            Gets CART tree dictionary, indexed by unit id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartTreeManager.UnitDescriptFile">
            <summary>
            Gets or sets Unit description file path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartTreeManager.MetaCart">
            <summary>
            Gets or sets Meta CART information.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartTreeManager.CartTreeDir">
            <summary>
            Gets or sets CART tree directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Cart.CartTreeManager.CartQuestionFile">
            <summary>
            Gets or sets CART question file path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.CartTreeManager.CartHeaderSerial">
            <summary>
            CART header.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTreeManager.CartHeaderSerial.Read(System.IO.BinaryReader)">
            <summary>
            Read a CartHeaderSerial block from binary stream.
            </summary>
            <param name="br">Binary stream to read.</param>
            <returns>CartHeaderSerial.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTreeManager.CartHeaderSerial.ToBytes">
            <summary>
            Convert to byte array.
            </summary>
            <returns>Byte array.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Cart.CartTreeManager.CartIndexingSerial">
            <summary>
            CART indexing.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTreeManager.CartIndexingSerial.Read(System.IO.BinaryReader)">
            <summary>
            Read a CartIndexingSerial block from binary stream.
            </summary>
            <param name="br">Binary stream to read CART indexing.</param>
            <returns>CartIndexingSerial.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Cart.CartTreeManager.CartIndexingSerial.ToBytes">
            <summary>
            Convert to byte array.
            </summary>
            <returns>Byte array.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.ISampleStrategy">
            <summary>
            Calculates sample distance and center.
            Each derived sample class should have its own strategy class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ISampleStrategy.Diff(Microsoft.Tts.Offline.Sample,Microsoft.Tts.Offline.Sample)">
            <summary>
            Calculates the distance between two samples.
            </summary>
            <param name="left">Left sample.</param>
            <param name="right">Righ sample.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ISampleStrategy.GetCenter(System.Collections.Generic.IList{Microsoft.Tts.Offline.Sample})">
            <summary>
            Calculates the center of a sample collection.
            </summary>
            <param name="samples">Sample collection.</param>
            <returns>Center of the samples.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Sample">
            <summary>
            Base sample class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Sample.Centroid">
            <summary>
            Gets or sets centroid this sample associated with.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Kmeans">
            <summary>
            Implements k-means clustering algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.#ctor(Microsoft.Tts.Offline.ISampleStrategy,System.Int32)">
            <summary>
            Initializes a new instance of the Kmeans class.
            </summary>
            <param name="sampleStrategy">Sample strategy object.</param>
            <param name="clusterCount">Target cluster count.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.Cluster(System.Collections.Generic.IList{Microsoft.Tts.Offline.Sample})">
            <summary>
            Cluster the samples into groups.
            </summary>
            <param name="samples">Samples to be clustered.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.BuildMapForCentroids">
            <summary>
            Build centroid cluster map.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.Assign(System.Collections.Generic.IList{Microsoft.Tts.Offline.Sample})">
            <summary>
            Re-assign each sample to its nearest cluster center.
            </summary>
            <param name="samples">Samples to be clustered.</param>
            <returns>The total inner cluster distance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.Initialize(System.Collections.Generic.IList{Microsoft.Tts.Offline.Sample})">
            <summary>
            Initializes the centers.
            </summary>
            <param name="samples">All samples.</param>
            <returns>The centers to start cluster with.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.SearchCentroids(Microsoft.Tts.Offline.Sample)">
            <summary>
            Look for the similar centroids by representative centroids.
            </summary>
            <param name="sample">Sample.</param>
            <returns>Similar centroids.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.Assign(Microsoft.Tts.Offline.Sample,System.Collections.Generic.IList{Microsoft.Tts.Offline.Sample})">
            <summary>
            Re-assign sample to its nearest cluster center.
            </summary>
            <param name="sample">Sample to be clustered.</param>
            <param name="centroids">Centroids to be assigned.</param>
            <returns>The inner cluster distance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.Update(System.Collections.Generic.IList{Microsoft.Tts.Offline.Sample})">
            <summary>
            Update the center of each cluster.
            </summary>
            <param name="samples">Samples to be clustered.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.ProcessEmptyCluster(System.Collections.Generic.IList{Microsoft.Tts.Offline.Sample})">
            <summary>
            Process empty clusters according to empty action.
            </summary>
            <param name="samples">Samples after reassignment.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.FindFurthest(Microsoft.Tts.Offline.Sample,System.Collections.Generic.IList{Microsoft.Tts.Offline.Sample})">
            <summary>
            Find the furthest sample to reference.
            </summary>
            <param name="reference">Reference sample.</param>
            <param name="samples">Sample list.</param>
            <returns>The furthest sample to reference.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Kmeans.Log(System.String,System.Object[])">
            <summary>
            Log messages.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">Argument list.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Kmeans.Centroids">
            <summary>
            Gets the cluster result centroids.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Kmeans.MaxIteration">
            <summary>
            Gets or sets the maximum iteration number to stop.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Kmeans.ClusterCount">
            <summary>
            Gets the target cluster number.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Kmeans.Logger">
            <summary>
            Gets or sets the logger object.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.FormatVersion">
            <summary>
            Format version of voice font.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FormatVersion.Undefined">
            <summary>
            Version undefined.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FormatVersion.Tts30">
            <summary>
            Version 3.0.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.FontSectionTag">
            <summary>
            Voice font file tag.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FontSectionTag.Unknown">
            <summary>
            Unknown section tag.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FontSectionTag.WeightTable">
            <summary>
            Weight Table File Tag:= "APL ",
            Its ASCII code: 0x41 0x50 0x4C 0x20.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FontSectionTag.UnitInfo">
            <summary>
            UNT File Tag:= "UNT ",
            Its ASCII code: 0x55, 0x4E, 0x54, 0x20.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FontSectionTag.NameDomain">
            <summary>
            NAM File Tag:="NAM ",
            Its ASCII code: 0x4E, 0x41,0x4D, 0x20.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FontSectionTag.NumberDomain">
            <summary>
            NUM File Tag:="NUM ",
            Its ASCII code: 0x4E, 0x55, 0x4D, 0x20.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FontSectionTag.LetterDomain">
            <summary>
            LET File Tag:="LET ",
            Its ASCII code: 0x4C, 0x45, 0x54, 0x20.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FontSectionTag.AcronymDomain">
            <summary>
            LET File Tag:="ACR ",
            Its ASCII code: 0x41, 0x43, 0x52, 0x20.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FontSectionTag.AnyPromptHelper">
            <summary>
            APH File Tag :="APH ",
            Its ASCII code: 0x41 0x50 0x48 0x20.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.WaveCompressCatalog">
            <summary>
            Wave compress catalog.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.WaveCompressCatalog.Unc">
            <summary>
            Uncompressed.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.WaveCompressCatalog.Dmo">
            <summary>
            DirectX Model Object.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.WaveCompressCatalog.MSRTA">
            <summary>
            Microsoft RTA codec.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.WaveCompressCatalog.SILK">
            <summary>
            SILK codec.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.WaveCompressCatalog.OpusSILK">
            <summary>
            OpusSILK codec.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.FontBuildNumber">
            <summary>
            Font build number.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontBuildNumber.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Config.FontBuildNumber"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontBuildNumber.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Config.FontBuildNumber"/> class.
            </summary>
            <param name="voicePath">Voice font path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontBuildNumber.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Config.FontBuildNumber"/> class.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontBuildNumber.GetCurrentBuildNumber">
            <summary>
            Gets the current build number.
            </summary>
            <returns>The current build number.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontBuildNumber.Parse(System.String)">
            <summary>
            Parse build number string to set build number information.
            </summary>
            <param name="buildNumber">Build number string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontBuildNumber.ToInt32">
            <summary>
            Convert to 32-bit integer number.
            </summary>
            <returns>Build number integer.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontBuildNumber.ToString">
            <summary>
            Convert to string presentation.
            </summary>
            <returns>Build number string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontBuildNumber.GetBuildNumber(System.String)">
            <summary>
            Get build number from voice font.
            </summary>
            <param name="voicePath">Voice path.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontBuildNumber.MajorBuildNumber">
            <summary>
            Gets or sets Major build number.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontBuildNumber.MinorBuildNumber">
            <summary>
            Gets or sets Minor build number.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.FontVersion">
            <summary>
            Font version.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontVersion.#ctor">
            <summary>
            Initializes a new instance of the FontVersion class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontVersion.#ctor(System.String,Microsoft.Tts.Offline.Config.WaveCompressCatalog,Microsoft.Tts.Offline.Waveform.WaveFormatTag,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the FontVersion class.
            </summary>
            <param name="name">Voice font name.</param>
            <param name="compress">Compress mode.</param>
            <param name="encoding">Encoding.</param>
            <param name="samplesPerSecond">Samples per second.</param>
            <param name="bytesPerSample">Bytes per second.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontVersion.Validate">
            <summary>
            Validate whether the config is supported or not.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontVersion.FontVersionType">
            <summary>
            Gets the font version type of voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontVersion.CompressCatalog">
            <summary>
            Gets or sets the CompressCatalog.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontVersion.PcmCategory">
            <summary>
            Gets or sets the FormatCategory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontVersion.BytesPerSample">
            <summary>
            Gets or sets the BytesPerSecond.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontVersion.SamplesPerSecond">
            <summary>
            Gets or sets the SamplesPerSecond.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontVersion.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.MergeItem">
            <summary>
            Voice font merge items.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.MergeItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Config.MergeItem"/> class.
            </summary>
            <param name="dir">Merge item directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.MergeItem.ValidateFeatureData(System.String,System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            Validation data alignment between feature file and script file.
            </summary>
            <param name="featureFile">Feature file.</param>
            <param name="scriptFile">Script file.</param>
            <param name="language">Language.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.MergeItem.FindUnmatchedSentences(System.String,Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Find unmatching sentences between filemap file and script file
            <param />
            This function should be merged with that in forcedalignment into common library.
            </summary>
            <param name="scriptFilePath">The location of script file.</param>
            <param name="language">Language of the script file.</param>
            <param name="mapFilePath">The location of file fist map path.</param>
            <returns>Unmatching sentence ids.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.MergeItem.Validate(Microsoft.Tts.Offline.Language)">
            <summary>
            Data validation.
            </summary>
            <param name="language">Language.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.MergeItem.ScriptFilePath">
            <summary>
            Gets ScriptFile.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.MergeItem.FileMapFilePath">
            <summary>
            Gets Filemap.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.MergeItem.UnitFeatureFilePath">
            <summary>
            Gets Unit feature file path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.MergeItem.Dir">
            <summary>
            Gets or sets DirPath.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.FontCompilerConfig">
            <summary>
            VoiceFontConfig.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.FontCompilerConfig._language">
            <summary>
            Tool work site folder, from where some dependent tools could be found.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.CreateVersionsXmlElement(System.Xml.XmlDocument,System.String,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Config.FontVersion})">
            <summary>
            Create versions xml element node .
            </summary>
            <param name="dom">Xml document.</param>
            <param name="xmlNamespace">Xml namespace.</param>
            <param name="versions">Versions collection to create Xml node.</param>
            <returns>Created versions xml element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseVersions(System.Xml.XmlNodeList,System.Xml.XmlNamespaceManager,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Config.FontVersion})">
            <summary>
            Parse version node list.
            </summary>
            <param name="versionsNodeList">Versions node list.</param>
            <param name="nsmgr">Xml namespace manager.</param>
            <param name="versions">Version collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.Save(System.String)">
            <summary>
            Save FontCompiler's config data into XML file.
            </summary>
            <param name="filePath">Target file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.Load(System.String)">
            <summary>
            Load configuration from file.
            </summary>
            <param name="filePath">XML configuration file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.Load(System.String,System.Boolean)">
            <summary>
            Load configuration from file, for the import files allow relative path,
            And the relative path has dependency of FontCompiler assembly, so when
            Other program load config files using this method, should not check
            Import files.
            </summary>
            <param name="filePath">XML configuration file path.</param>
            <param name="checkImportFiles">Wheher check import files.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.Load(System.String,System.Boolean,System.Boolean)">
            <summary>
            Load configuration from file, for the import files allow relative path,
            And the relative path has dependency of FontCompiler assembly, so when
            Other program load config files using this method, should not check
            Import files.
            </summary>
            <param name="filePath">XML configuration file path.</param>
            <param name="checkImportFiles">Wheher check import files.</param>
            <param name="updateScriptPath">Whether update script path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.CheckPath(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Check the directory specified in config file.
            </summary>
            <param name="path">Directory to check.</param>
            <param name="existing">If the directory is existing.</param>
            <param name="configPath">Config file.</param>
            <param name="pathName">Path name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.SaveSpeechData(System.Xml.XmlDocument,System.Xml.Schema.XmlSchema,System.Xml.XmlElement)">
            <summary>
            Save speech data locations.
            </summary>
            <param name="dom">XML document to save into.</param>
            <param name="schema">Schema of the configuration XML file.</param>
            <param name="ele">Element to append.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseOutputDir(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for output directory.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="filePath">XML configuration file path.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseCartTrain(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for CART train configuration.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseFilelist(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for file list path.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="filePath">XML configuration file path.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseScriptFile(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager,System.Boolean)">
            <summary>
            Parse XML document for script file path.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="filePath">XML configuration file path.</param>
            <param name="nsmgr">Namespace.</param>
            <param name="updateScriptPath">Whether update script path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseDropSentenceList(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for drop sentence list.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="filePath">XML configuration file path.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseDomainList(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for domain list.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="filePath">XML configuration file path.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseUnitList(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for unit list.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="filePath">XML configuration file path.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseSpeechData(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for Speech Data.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="filePath">XML configuration file path.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseWaveformData(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for waveform data.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="filePath">XML configuration file path.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseVersions(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for Font Versions.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseImports(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Boolean)">
            <summary>
            Parse XML document for Import files.
            </summary>
            <param name="dom">XmlDocument to be parsed.</param>
            <param name="nsmgr">XmlNameSpace.</param>
            <param name="checkImportFiles">Whether check import files.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontCompilerConfig.ParseMergeItems(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for MergeItems.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="filePath">XML configuration file path.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.ConfigSchema">
            <summary>
            Gets Configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.LanguageData">
            <summary>
            Gets Language data being used.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.MergeItems">
            <summary>
            Gets Merge items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.OutputDir">
            <summary>
            Gets or sets Output directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.HoldUnitList">
            <summary>
            Gets or sets Hold unit list file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.DropUnitList">
            <summary>
            Gets or sets Drop unit list file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.DomainListFilePath">
            <summary>
            Gets or sets Domain list file path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.DomainConfig">
            <summary>
            Gets Domain config.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.Versions">
            <summary>
            Gets Font versions.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.AlignmentDir">
            <summary>
            Gets or sets Alignment directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.EpochDir">
            <summary>
            Gets or sets Epoch directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.Wave16kFilteredDir">
            <summary>
            Gets or sets Filtered 16k Hz waveform directory, filtered into 8k Hz.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.Wave16kDir">
            <summary>
            Gets or sets 16k Hz waveform directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.FilelistPath">
            <summary>
            Gets or sets File list path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.DropFileListPath">
            <summary>
            Gets or sets Drop sentences file list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.ScriptPath">
            <summary>
            Gets or sets Script path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.Language">
            <summary>
            Gets or sets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.Import">
            <summary>
            Gets Import files.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.WeightTable">
            <summary>
            Gets or sets Weight table for phones, could be voice dependent.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.CartQuestions">
            <summary>
            Gets Cart questions file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.CartMinCandidates">
            <summary>
            Gets or sets Cart Minimial candidates in the leaf node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.CartSplitLevel">
            <summary>
            Gets or sets Cart node split level.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.VoiceDataDir">
            <summary>
            Gets or sets Voice data directiory (weighttable etc).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontCompilerConfig.WorksiteDir">
            <summary>
            Gets or sets Work site dir.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.FontsCombinerConfig">
            <summary>
            FontsCombinerConfig.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.#ctor">
            <summary>
            Initializes a new instance of the FontsCombinerConfig class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.Save(System.String)">
            <summary>
            Save FontsCombiner's config data into XML file.
            </summary>
            <param name="filePath">Target file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.Load(System.String)">
            <summary>
            Load configuration from file.
            </summary>
            <param name="filePath">XML configuration file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.AddFilePathItem(System.Xml.XmlDocument,System.Xml.Schema.XmlSchema,System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Add File Path Item to config file.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="schema">Schema.</param>
            <param name="ele">Root element.</param>
            <param name="elementName">The element need to add.</param>
            <param name="filePath">The file path need to add.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.ParseTargetFontFile(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for Target Font File.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.ParseLanguage(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for language.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.ParsePhoneSet(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for Phone Set File path.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.ParseLexiconSchema(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XML document for Lexicon Schema File path.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="nsmgr">Namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.ParsePhoneDurationMbePath(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.String)">
            <summary>
            Parse XML document for PhoneDuration and Mbe file path.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="nsmgr">Namespace.</param>
            <param name="elementName">The element name need to parse.</param>
            <returns>The file name.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.FontsCombinerConfig.ParseFilePath(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.String)">
            <summary>
            Parse XML document for file path.
            </summary>
            <param name="dom">XML configuration document.</param>
            <param name="nsmgr">Namespace.</param>
            <param name="elementName">The element name need to parse.</param>
            <returns>The file name.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.ConfigSchema">
            <summary>
            Gets configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.PhoneSet">
            <summary>
            Gets the phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.PosSet">
            <summary>
            Gets the lexicon schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.FontLanguage">
            <summary>
            Gets the language for fonts combiner.
            For example, the value can be "en-US", "zh-CN" etc.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.Language">
            <summary>
            Gets or sets language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.PhoneSetFile">
            <summary>
            Gets or sets phoneset file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.LexiconSchemaFile">
            <summary>
            Gets or sets lexicon schema file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.FontFileForF0">
            <summary>
            Gets or sets font file for f0.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.FontFileForLsp">
            <summary>
            Gets or sets font file for lsp.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.FontFileForStateDuration">
            <summary>
            Gets or sets font file for state duration.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.FontFileForPhoneDuration">
            <summary>
            Gets or sets font file for phone duration, optional.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.FontFileForMbe">
            <summary>
            Gets or sets font file for mbe, optional.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.InputFontFiles">
            <summary>
            Gets all the input voice font files.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.FontsCombinerConfig.TargetFontFile">
            <summary>
            Gets or sets target font file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.SentenceItem">
            <summary>
            Drop sentence item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.SentenceItem.Parse(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XmlNode to SentenceItem.
            </summary>
            <param name="node">XmlNode to be parsed.</param>
            <param name="nsmgr">Namespace manager of the node.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.SentenceItem.CreateXmlElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Create XmlNode for SentenceItem.
            </summary>
            <param name="dom">XmlDocument to which to create XmlNode.</param>
            <param name="xmlNamespace">Name space of the XmlElement.</param>
            <returns>Created SentenceItem XmlElement.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.SentenceItem.SentenceId">
            <summary>
            Gets or sets Sentence Id of the sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.SentenceItem.Error">
            <summary>
            Gets or sets Error type of the sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.SentenceItem.Description">
            <summary>
            Gets or sets Description of the drop sentence.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.SentenceList">
            <summary>
            Sentence list in this class will be dropped.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.SentenceList.Save(System.String)">
            <summary>
            Save to XML format file.
            </summary>
            <param name="filePath">File path to save to.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.SentenceList.Load(System.String)">
            <summary>
            Load from XML file.
            </summary>
            <param name="filePath">File path to be load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.SentenceList.Parse(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XmlNode to SentenceItem.
            </summary>
            <param name="node">XmlNode to be parsed.</param>
            <param name="nsmgr">Namespace manager of the node.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.SentenceList.CreateXmlElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Create XmlElement for the sentences.
            </summary>
            <param name="dom">XmlDocument on which to create XmlElement.</param>
            <param name="xmlNamespace">Name space of the XmlElement.</param>
            <returns>Created dropSentences XmlElement.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.SentenceList.KeepSentence(System.String)">
            <summary>
            Whether drop the whole sentence.
            </summary>
            <param name="sentenceId">Sentence ID to be checked.</param>
            <returns>Whether the sentence should be kept.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.SentenceList.ConfigSchema">
            <summary>
            Gets UnitListDictionary schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.SentenceList.SentencesDictionary">
            <summary>
            Gets Sentence directory.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.UnitItem">
            <summary>
            Drop/Hold unit item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitItem.GetKey(System.String,System.Int32)">
            <summary>
            Get key of the unit in UnitList.
            </summary>
            <param name="sentenceId">Sentence ID of the unit.</param>
            <param name="indexInSentence">Unit index in the sentence..</param>
            <returns>Generated UnitItem key.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitItem.CreateXmlElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Create XmlNode for UnitItem.
            </summary>
            <param name="dom">XmlDocument to which to create XmlNode.</param>
            <param name="xmlNamespace">Name space of the XmlElement.</param>
            <returns>Created UnitItem XmlElement.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitItem.Parse(System.Xml.XmlNode)">
            <summary>
            Parse XmlNode to UnitItem.
            </summary>
            <param name="node">XmlNode to be parsed.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitItem.Id">
            <summary>
            Gets Id of the UnitItem.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitItem.SentenceId">
            <summary>
            Gets or sets Sentence Id of the unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitItem.IndexInSentence">
            <summary>
            Gets or sets Unit index in sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitItem.Name">
            <summary>
            Gets or sets Unit name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitItem.Error">
            <summary>
            Gets or sets Unit item error type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitItem.Description">
            <summary>
            Gets or sets Unit list item description.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.UnitList">
            <summary>
            UnitList class, currently has two types: Hold, Drop.
            One UnitList have could contains some UnitItems,
            Each UnitItem presents one unit in sentence.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitList.GetKey(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.Config.UnitList.UnitListType)">
            <summary>
            Get key of the UnitList.
            </summary>
            <param name="language">Language of the UnitList.</param>
            <param name="type">Type of the UnitList.</param>
            <returns>Key of the UnitList.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitList.AddUnit(Microsoft.Tts.Offline.Config.UnitItem)">
            <summary>
            Add Unit to UnitList.
            </summary>
            <param name="unitItem">UnitItem to be added.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitList.RemoveUnit(System.String,System.Int32)">
            <summary>
            Remove unit from UnitList.
            </summary>
            <param name="sentenceId">Sentence ID of the unit to be remove.</param>
            <param name="indexInSentence">Unit index in sentence.</param>
            <returns>Removed unit.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitList.Append(Microsoft.Tts.Offline.Config.UnitList)">
            <summary>
            Append UnitList to an existing UnitList.
            </summary>
            <param name="unitList">UnitList to be appended.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitList.CreateXmlElement(System.Xml.XmlDocument,System.String)">
            <summary>
            Create XmlElement for the UnitList.
            </summary>
            <param name="dom">XmlDocument on which to create XmlElement.</param>
            <param name="xmlNamespace">Name space of the XmlElement.</param>
            <returns>Created UnitList XmlElement.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitList.Parse(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse XmlNode to UnitList.
            </summary>
            <param name="node">XmlNode to be parsed.</param>
            <param name="nsmgr">XmlNamespaceManager.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitList.Id">
            <summary>
            Gets UnitList Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitList.UnitType">
            <summary>
            Gets or sets UnitList type: Drop/Hold.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitList.Language">
            <summary>
            Gets or sets Unit list language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitList.Units">
            <summary>
            Gets Unit list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.UnitList.UnitListType">
            <summary>
            Unit list type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.UnitList.UnitListType.None">
            <summary>
            None of the following types.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.UnitList.UnitListType.Drop">
            <summary>
            Drop unit list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.UnitList.UnitListType.Hold">
            <summary>
            Hold unit list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.UnitListDictionary">
            <summary>
            Unit list dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitListDictionary.Save(System.String)">
            <summary>
            Save unit list data into XML file.
            </summary>
            <param name="filePath">Target file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitListDictionary.Load(System.String)">
            <summary>
            Load configuration from file.
            </summary>
            <param name="filePath">XML configuration file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitListDictionary.Merge(System.String[])">
            <summary>
            Merge all unit list files.
            </summary>
            <param name="filePaths">File path array to be merged.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitListDictionary.KeepUnit(Microsoft.Tts.Offline.Language,System.String,System.Int32)">
            <summary>
            Check whether the unit should be kept.
            </summary>
            <param name="language">Language of the unit to be checked.</param>
            <param name="sentenceId">Sentence ID of the unit to be checked.</param>
            <param name="indexInSentence">Unit index in sentence to be checked.</param>
            <returns>Whether the unit should be kept.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitListDictionary.Append(Microsoft.Tts.Offline.Config.UnitListDictionary)">
            <summary>
            Append unit in one UnitListDictionary to an existing one.
            </summary>
            <param name="unitListDic">UnitListDictionary to be added.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitListDictionary.ContainsKey(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.Config.UnitList.UnitListType,System.String)">
            <summary>
            Whether unit list map contains the unit list with the specified language and type.
            </summary>
            <param name="language">Language of the UnitList.</param>
            <param name="type">Type of the UnitList.</param>
            <param name="unitKey">UnitKey of the UnitItem.</param>
            <returns>Whether contains the specified unit.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitListDictionary.AddUnit(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.Config.UnitList.UnitListType,Microsoft.Tts.Offline.Config.UnitItem)">
            <summary>
            Add unit to unit list map.
            </summary>
            <param name="language">Language of the unit.</param>
            <param name="type">Type of the unit.</param>
            <param name="unit">Unit to be added.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.UnitListDictionary.RemoveUnit(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.Config.UnitList.UnitListType,System.String,System.Int32)">
            <summary>
            Remove unit from unit list map.
            </summary>
            <param name="language">Language of the unit.</param>
            <param name="type">Type of the unit.</param>
            <param name="sentenceId">Sentence ID of the unit.</param>
            <param name="indexInSentence">Unit index in sentence.</param>
            <returns>Removed UnitItem.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitListDictionary.ConfigSchema">
            <summary>
            Gets UnitListDictionary schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitListDictionary.UnitListMap">
            <summary>
            Gets Unit list map, using combination of language and type as key,
            For example : en-US_Hold.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.UnitListDictionary.DropSentenceList">
            <summary>
            Gets Drop sentence list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.ScriptDomain">
            <summary>
            Definition of tts domain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.ScriptDomain.Normal">
            <summary>
            Normal tts domain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.ScriptDomain.Number">
            <summary>
            Number domain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.ScriptDomain.PersonName">
            <summary>
            PersonName domain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.ScriptDomain.Letter">
            <summary>
            Letter domain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.ScriptDomain.Acronym">
            <summary>
            Acronym domain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.ScriptDomain.All">
            <summary>
            All above.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.ScriptRangeItem">
            <summary>
            Script range item.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.ScriptRangeItem.StartSentenceId">
            <summary>
            StartSentenceId;.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.ScriptRangeItem.EndSentenceId">
            <summary>
            EndSentenceId;.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.ScriptRangeItem.Domain">
            <summary>
            Domain;.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.DomainConfigList">
            <summary>
            Domain config list.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfigList.Contains(System.String)">
            <summary>
            Is given sentenceId in the domain list.
            </summary>
            <param name="sentenceId">Given sentence Id.</param>
            <returns>Bool.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DomainConfigList.Items">
            <summary>
            Gets Script range items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DomainConfigList.Domain">
            <summary>
            Gets or sets Domain Type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DomainConfigList.FontExtName">
            <summary>
            Gets or sets Font extension name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DomainConfigList.FontTag">
            <summary>
            Gets or sets Font tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DomainConfigList.SharedWithNormalDomain">
            <summary>
            Gets or sets a value indicating whether could be shared with Normal Domain.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.DigitalWordItem">
            <summary>
            Digital word.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DigitalWordItem.GetKey(System.String,System.Int32)">
            <summary>
            Compile unit feature key.
            </summary>
            <param name="sentenceId">Sentence id.</param>
            <param name="index">Word index in the sentece.</param>
            <returns>Key of digital word item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DigitalWordItem.ToString">
            <summary>
            Implements ToString() method used for debugging and logging.
            </summary>
            <returns>String value of the object.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DigitalWordItem.Id">
            <summary>
            Gets SentenceId + wordIndex.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DigitalWordItem.Word">
            <summary>
            Gets or sets Word text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DigitalWordItem.Group">
            <summary>
            Gets or sets Group index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DigitalWordItem.SentenceId">
            <summary>
            Gets or sets Setnece Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DigitalWordItem.WordIndex">
            <summary>
            Gets or sets Word index.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.NumberDomainConfigList">
            <summary>
            Domain config list for number domain.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.NumberDomainConfigList.Digitals">
            <summary>
            Gets Digital words.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.AcronymWordItem">
            <summary>
            Acronym word.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.AcronymWordItem.GetKey(System.String,System.Int32)">
            <summary>
            Compile unit feature key.
            </summary>
            <param name="sentenceId">Sentence id.</param>
            <param name="index">Word index in the sentece.</param>
            <returns>Key of acronym word item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.AcronymWordItem.ToString">
            <summary>
            Implements ToString() method used for debugging and logging.
            </summary>
            <returns>String value of the object.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.AcronymWordItem.Id">
            <summary>
            Gets SentenceId + wordIndex.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.AcronymWordItem.Word">
            <summary>
            Gets or sets Word text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.AcronymWordItem.Group">
            <summary>
            Gets or sets Group index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.AcronymWordItem.SentenceId">
            <summary>
            Gets or sets Setnece Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.AcronymWordItem.WordIndex">
            <summary>
            Gets or sets Word index.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.AcronymDomainConfigList">
            <summary>
            Domain config list for acronym domain.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.AcronymDomainConfigList.Acronyms">
            <summary>
            Gets Acronym words.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.DomainConfig">
            <summary>
            Domain config class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.Tts.Offline.Config.DomainConfig"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.Load(System.String)">
            <summary>
            Load from XML file.
            </summary>
            <param name="filePath">File path to be load.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.Save(System.String)">
            <summary>
            Save as xml file.
            </summary>
            <param name="filePath">File path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.ParseNumberDomain(System.Xml.XmlElement,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse number domain.
            </summary>
            <param name="domainEle">Domain element.</param>
            <param name="nsmgr">Xml name space manager.</param>
            <returns>Domain list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.ParseAcronymDomain(System.Xml.XmlElement,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse acronym domain.
            </summary>
            <param name="domainEle">Domain element.</param>
            <param name="nsmgr">Xml name space manager.</param>
            <returns>Domain list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.ParseDomain(System.Xml.XmlElement,Microsoft.Tts.Offline.Config.ScriptDomain,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse domain element.
            </summary>
            <param name="domainEle">Domain element.</param>
            <param name="domainType">Domain type.</param>
            <param name="nsmgr">Xml name space manager.</param>
            <returns>Domain list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.ParseScriptSection(System.Xml.XmlNode,Microsoft.Tts.Offline.Config.ScriptDomain,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Config.ScriptRangeItem})">
            <summary>
            Parse scripts element.
            </summary>
            <param name="scriptsNode">Xml node.</param>
            <param name="domainType">Domain type.</param>
            <param name="items">Script range items.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.ParseDigitalSection(System.Xml.XmlNode,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Config.DigitalWordItem})">
            <summary>
            Parse digitals element.
            </summary>
            <param name="digitalsNode">Xml node.</param>
            <param name="items">Digital Word items.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.ParseAcronymSection(System.Xml.XmlNode,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Config.AcronymWordItem})">
            <summary>
            Parse acronyms element.
            </summary>
            <param name="acronymsNode">Xml node.</param>
            <param name="items">Acronym Word items.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.GetScriptSection(System.Xml.XmlDocument,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Config.ScriptRangeItem})">
            <summary>
            Get scripts xml element.
            </summary>
            <param name="dom">Xml document.</param>
            <param name="items">Script range items.</param>
            <returns>Scripts xml element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.GetDigitalSection(System.Xml.XmlDocument,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Config.DigitalWordItem})">
            <summary>
            Create digitals xml element.
            </summary>
            <param name="dom">Xml document.</param>
            <param name="items">Digital word items.</param>
            <returns>Digitals xml element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.DomainConfig.GetAcronymSection(System.Xml.XmlDocument,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Config.AcronymWordItem})">
            <summary>
            Create acronyms xml element.
            </summary>
            <param name="dom">Xml document.</param>
            <param name="items">Acronym word items.</param>
            <returns>Acronyms xml element.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DomainConfig.Schema">
            <summary>
            Gets Domain config schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DomainConfig.FilePath">
            <summary>
            Gets Domain config file path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.DomainConfig.DomainLists">
            <summary>
            Gets Domain lists.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.WaveNormConfig">
            <summary>
            Load Configures form xml.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.WaveNormConfig.Save(System.String)">
            <summary>
            Save wavenorm config data into XML file.
            </summary>
            <param name="filePath">Target file path to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.WaveNormConfig.Load(System.String)">
            <summary>
            Load wavenorm config from XML config file.
            </summary>
            <param name="filePath">Config filepath.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.ConfigSchema">
            <summary>
            Gets Configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.LanguageData">
            <summary>
            Gets Language data being used.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.OverflowAllowed">
            <summary>
            Gets or sets If the overflow is allowed in wave normalization.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.FileListMap">
            <summary>
            Gets or sets Process file list file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.ScriptPath">
            <summary>
            Gets or sets Process file list file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.EpochDir">
            <summary>
            Gets or sets Epoch data dir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.SegmentDir">
            <summary>
            Gets or sets Segment mark dir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.WaveDir">
            <summary>
            Gets or sets Original wave dir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.Language">
            <summary>
            Gets or sets Language type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.LanguageName">
            <summary>
            Gets or sets Language type name for serialize.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.LogFilePath">
            <summary>
            Gets Process log file, null -> log to console.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.WaveNormDir">
            <summary>
            Gets or sets Output dir, normalization final result dir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.WaveNormConfig.MidtermDir">
            <summary>
            Gets or sets Save all midterm result dir.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.ForcedAlignConfig">
            <summary>
            Class presents forced alignment configuration for end user.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.Save(System.String)">
            <summary>
            Save forced align config data into XML file.
            </summary>
            <param name="filePath">Target file path to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.Load(System.String)">
            <summary>
            Load Forced Align config from XML config file.
            </summary>
            <param name="filePath">Config filepath.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ParseSDParameters(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse HVite.exe -t parameter level.
            </summary>
            <param name="dom">Configuration XML document.</param>
            <param name="nmgr">XML namespace manager.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ParseTraceLevel(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse trace level.
            </summary>
            <param name="dom">Configuration XML document.</param>
            <param name="nmgr">XML namespace manager.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ParseModelDir(System.String,System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Forced alignment model path and control (rebuild).
            </summary>
            <param name="configFile">Configuration file path.</param>
            <param name="dom">Configuration XML document.</param>
            <param name="nmgr">XML namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ParseOutputDir(System.String,System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse output file path.
            </summary>
            <param name="configFile">Configuration file path.</param>
            <param name="dom">Configuration XML document.</param>
            <param name="nmgr">XML namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ParseAdvancedConfigure(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse advanced configure.
            </summary>
            <param name="dom">Configuration XML document.</param>
            <param name="nmgr">XML namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ParseWave16kDir(System.String,System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse waveform 16k hz files directory.
            </summary>
            <param name="configFile">Configuration file path.</param>
            <param name="dom">Configuration XML document.</param>
            <param name="nmgr">XML namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ParseFileList(System.String,System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse filelist file path.
            </summary>
            <param name="configFile">Configuration file path.</param>
            <param name="dom">Configuration XML document.</param>
            <param name="nmgr">XML namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ParseScriptDir(System.String,System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse sub-script files directory.
            </summary>
            <param name="configFile">Configuration file path.</param>
            <param name="dom">Configuration XML document.</param>
            <param name="nmgr">XML namespace.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ParseWorkSiteDir(System.String,System.Xml.XmlDocument)">
            <summary>
            Work site path parsing and verification.
            <param />
            The forced alignment tool depends this path to reach some extern 
            Tools and data, including:
                1. Datafiles, for each language, with AM (acoustic model) files
                2. Extern depend on extern tools, HTK.
            </summary>
            <param name="configFile">Configuration file path.</param>
            <param name="dom">Configuration XML document.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ConfigSchema">
            <summary>
            Gets Configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.TraceLevel">
            <summary>
            Gets or sets Value to indicate trace level of the HTK tools.
            <param />
            It is 0 by default.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.PruneLevel">
            <summary>
            Gets or sets Value to indicate -t level of the HVite.exe
            <param />
            It is 0 by default.
            <param />
            This property will define "-t" parameter for triphone HVite:
            Level -1 and 0: 400; level 1: 800; level 2: 1200
            In SD approach, this affects monophone HVite, too:
            Level -1: 1000; level 0: 2000; level 1 and 2: no -t.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.MinUttNumber">
            <summary>
            Gets or sets The minimal utterances number required for SD model.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.WorksiteDir">
            <summary>
            Gets or sets The forced alignment tool depends this path to reach some extern 
            Tools and data, including:
                1. Datafiles, for each language, with AM (acoustic model) files
                2. Extern depend on extern tools, HTK.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.Speaker">
            <summary>
            Gets or sets Speaker metadata of the data to align.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.LanguageData">
            <summary>
            Gets Language data being used.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.FileList">
            <summary>
            Gets or sets A filelist file path. (with externsion .txt).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ScriptDir">
            <summary>
            Gets or sets A directory path, containing script files (with externsion .xml).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.Wave16KDir">
            <summary>
            Gets or sets Waveform 16khz files directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.ModelDir">
            <summary>
            Gets or sets Speaker dependent acoustic model directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.RebuildModel">
            <summary>
            Gets or sets a value indicating whether or not rebuild the speaker 
            Dependent acoustic model.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.IgnoreTone">
            <summary>
            Gets or sets a value indicating whether ignore tone in output.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.KeepSRPhones">
            <summary>
            Gets or sets a value indicating whether keep SR phones in output.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.SilenceDurationThresh">
            <summary>
            Gets or sets The silence duration threshold below which to be filtered.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.AdaptModel">
            <summary>
            Gets or sets a value indicating whether adapts from speaker independent acoustic model 
            Or re-train the new acoustic model from scratch
            <param />
            It is true by default.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.HybridSDModel">
            <summary>
            Gets or sets a value indicating whether using SR-SD combine model in speaker dependent acoustic model
            <param />
            It is false by default.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.ForcedAlignConfig.OutputDir">
            <summary>
            Gets or sets Output directory path, there will be some kind of output data generated.
            1. Filemap.exe, this file list map is generated from the waveform 16k dir
            2. Script.xml, this script file is generated from the script dir
            3. SliceSegment directory, this directory contains the phonetic alignment result
            4. Intermediate directory, this directory contains some internal data.
            </summary>
        </member>
        <member name="T:ScriptReviewer.XmlScriptReviewerDocumentError">
            <summary>
            Script file collection operation error.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptReviewerDocumentError.EmptyNormalWordPronunciation">
            <summary>
            Empty normal word pronunciation:
            {0} : Word text.
            {1} : Item ID.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptReviewerDocumentError.EmptyNormalWordOriginalPronunciation">
            <summary>
            Empty normal word's original pronunciation:
            {0} : Word text.
            {1} : Item ID.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptReviewerDocumentError.InvalidNormalWordPronunciation">
            <summary>
            Invalid normal word's pronunciation:
            {0} : Word text.
            {1} : Item ID.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptReviewerDocumentError.InvalidNormalWordOriginalPronunciation">
            <summary>
            Invalid normal word's original pronunciation:
            {0} : Word text.
            {1} : Item ID.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XmlScriptReviewerDocumentError.SentenceNotInScriptError">
            <summary>
            Sentence not in script error.
            {0} : item ID.
            </summary>
        </member>
        <member name="T:ScriptReviewer.EventArgs`1">
            <summary>
            Event arguments.
            </summary>
            <typeparam name="T">Type of the event argument.</typeparam>
        </member>
        <member name="M:ScriptReviewer.EventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.EventArgs`1"/> class.
            </summary>
            <param name="item">Data item of type T.</param>
        </member>
        <member name="P:ScriptReviewer.EventArgs`1.Item">
            <summary>
            Gets Item value.
            </summary>
        </member>
        <member name="T:ScriptReviewer.XMLScriptReviewDocument">
            <summary>
            ReviewDocument class manages actions on script file.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XMLScriptReviewDocument._needSave">
            <summary>
            Flag whether need further saving.
            </summary>
        </member>
        <member name="F:ScriptReviewer.XMLScriptReviewDocument._mappedSegment">
            <summary>
            Whether need map segment file's pronunciation.
            </summary>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ScriptReviewer.XMLScriptReviewDocument"/> class.
            </summary>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.ValidatePronunciation(System.String,Microsoft.Tts.Offline.Language[])">
            <summary>
            Validate specified wordPron with multi-language.
            </summary>
            <param name="pronunciation">A word pronunciation to be validate.</param>
            <param name="languages">Phone map array.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.ValidatePronunciation(System.String,Microsoft.Tts.Offline.PhoneMap,Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Validate pronunciation.
            </summary>
            <param name="pronunciation">Pronunciation to be validate.</param>
            <param name="phoneMap">Phone map.</param>
            <param name="phoneSet">Phone set.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.Validate(System.String)">
            <summary>
            Validate config file schema.
            </summary>
            <param name="filePath">Xml file to be validate.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.ValidatePronunciation(System.String,System.Boolean)">
            <summary>
            Validate pronunciation.
            </summary>
            <param name="pronunciation">Pronunciation to be validate.</param>
            <param name="isUIPronunciation">Whether is UI pronuncion.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.Validate">
            <summary>
            Validate script script reviewer's config data.
            </summary>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.Load(System.String)">
            <summary>
            Load settings form config.xml.
            </summary>
            <param name="filePath">String type.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.ScriptItems">
            <summary>
            Get script items the tool loaded.
            </summary>
            <returns>Enumerator of the lines in the given file.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.ScriptSentences">
            <summary>
            Get script items the tool loaded.
            </summary>
            <returns>Enumerator of the lines in the given file.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.LoadConfigData(System.String)">
            <summary>
            Load config data: language data, filelist and script.
            </summary>
            <param name="recoverDir">If not string.Empty, recover the scritp from this dir.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.SyncWordChangesToItem(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Sync item text from word text.
            </summary>
            <param name="scriptWord">Script word to be synced.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.SyncItemTextFromWordList(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Sync item text from word text.
            </summary>
            <param name="scriptItem">Script word to be synced.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.Save(System.String)">
            <summary>
            Save comments into the given location in a XML file type.
            </summary>
            <param name="filePath">The location of the comment file to save.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.RemoveComment(ScriptReviewer.ScriptWordComment)">
            <summary>
            Remove comment.
            </summary>
            <returns>Can not reverted comments.</returns>
            <param name="comment">The comment.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.RemoveComments(System.Collections.ObjectModel.Collection{ScriptReviewer.ScriptWordComment})">
            <summary>
            Remove comment.
            </summary>
            <param name="comments">Comment to remove.</param>
            <returns>Can not reverted comments.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.GetWaveFilePath(System.String)">
            <summary>
            Get wave file path via sentence id.
            </summary>
            <param name="sid">Sentence id.</param>
            <returns>Path of the wave file.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.GetSegmentFilePath(System.String)">
            <summary>
            Get wave segment path via sentence id.
            </summary>
            <param name="sid">Sentence id.</param>
            <returns>Path of the segment file.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.FindWord(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord})">
            <summary>
            Find words.
            </summary>
            <param name="searchWordText">Word text to be found.</param>
            <param name="searchWordPron">Word pronunciation to be found.</param>
            <param name="startId">Start sentence Id.</param>
            <param name="endId">End sentence Id.</param>
            <param name="matchCase">Whether matching case when searching word.</param>
            <param name="matchWholeWord">Whether matching whole words.</param>
            <param name="findWords">Found words.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.ReplaceWord(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.ScriptWord})">
            <summary>
            Replace words.
            </summary>
            <param name="searchWordText">Word to be replaced.</param>
            <param name="searchWordPron">Pronunciation to be repalced.</param>
            <param name="fixedWordText">Word replaced with.</param>
            <param name="fixedWordPron">Pronunciation repalced with.</param>
            <param name="startId">Start sentence Id.</param>
            <param name="endId">End sentence Id.</param>
            <param name="matchCase">Whether matching case when searching word.</param>
            <param name="matchWholeWord">Whether matching whole words.</param>
            <param name="replacedWords">Replaced words.</param>
            <returns>Error message.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.AddComment(ScriptReviewer.ScriptWordComment,System.Boolean)">
            <summary>
            Add new comment to the document.
            </summary>
            <param name="comment">Comment to add.</param>
            <param name="raiseEvent">Falg to indicate whether or not to raise CommentAdded event.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.OverwriteComment(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Overwrite word comment.
            </summary>
            <param name="scriptItem">Script word whose comment to be updated.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.OverwriteComment(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Overwrite word comment.
            </summary>
            <param name="scriptWord">Script word whose comment to be updated.</param>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.IsMatchValue(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Check whether the value match search value.
            </summary>
            <param name="textValue">Text value to be check.</param>
            <param name="searchValue">Search value.</param>
            <param name="matchCase">Whether match case.</param>
            <param name="matchWholeWord">Whether match whole word.</param>
            <returns>Whether the value matched.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.RemoveErrorMapPronunciationItems">
            <summary>
            Remove error mapped pronunciation items.
            </summary>
            <returns>The errorset.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.RemoveEmptyPronunciationItems">
            <summary>
            Remove empty pronunciation items.
            </summary>
            <returns>The errorset.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.LoadPhoneMap">
            <summary>
            Load phoen map.
            </summary>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.PrepareFilteredItemId">
            <summary>
            Prepare filtered item id.
            </summary>
            <returns>Error set.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.LoadScriptCollection(System.String)">
            <summary>
            Load script collection.
            </summary>
            <param name="recoverDir">Recover dir.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.IsMatchWord(Microsoft.Tts.Offline.ScriptWord,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Check whether the script word match the search condition.
            </summary>
            <param name="scriptWord">Script word.</param>
            <param name="searchWordText">Search word text.</param>
            <param name="searchWordPron">Search word pron.</param>
            <param name="matchCase">If match case.</param>
            <param name="matchWholeWord">If match whole word.</param>
            <returns>If it is match word.</returns>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.LoadScriptComments">
            <summary>
            Load word comments.
            </summary>
        </member>
        <member name="M:ScriptReviewer.XMLScriptReviewDocument.ParseLanguageFiles(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse language files.
            </summary>
            <param name="dom">Config document.</param>
            <param name="nm">Namespace.</param>
        </member>
        <member name="E:ScriptReviewer.XMLScriptReviewDocument.CommentAdded">
            <summary>
            Event while a new comment is added.
            </summary>
        </member>
        <member name="E:ScriptReviewer.XMLScriptReviewDocument.CommentUpdated">
            <summary>
            Event while a new comment is updated.
            </summary>
        </member>
        <member name="E:ScriptReviewer.XMLScriptReviewDocument.CommentRemoved">
            <summary>
            Event while a new comment is removed.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.ConfigSchema">
            <summary>
            Gets UnitListDictionary schema.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.LanguageDataCollection">
            <summary>
            Gets LanguageData collection.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.UpdateSentence">
            <summary>
            Gets or sets a value indicating whether update sentence.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.MappedSegment">
            <summary>
            Gets or sets a value indicating whether map segment using the phonemap.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.ModelToUiPhoneMap">
            <summary>
            Gets Script path.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.UiToModelPhoneMap">
            <summary>
            Gets Script path.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.ScriptPath">
            <summary>
            Gets or sets Script path.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.Language">
            <summary>
            Gets or sets Language of the config file.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.NeedSave">
            <summary>
            Gets or sets a value indicating whether File list of this review document.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.FilteredItemIds">
            <summary>
            Gets Filtered item id list.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.DomainNames">
            <summary>
            Gets Domain names.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.SegmentFileList">
            <summary>
            Gets segment file list.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.WaveFileList">
            <summary>
            Gets Wave file list.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.WaveDir">
            <summary>
            Gets or sets Wave file path.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.SegmentDir">
            <summary>
            Gets or sets Segment file path.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.SidCommentMap">
            <summary>
            Gets Create the List of ScriptItemComments 
            And get the list by the string of sentence id.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.ItemCommentMap">
            <summary>
            Gets Create the List of comments of one ScriptItem 
            And get it by the ScriptItem.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.WordCommentMap">
            <summary>
            Gets Create the List of comments of one ScriptWord 
            And get it by the ScriptWord.
            </summary>
        </member>
        <member name="P:ScriptReviewer.XMLScriptReviewDocument.ScriptFileCollection">
            <summary>
            Gets Tts.Offline class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.PosModelTrainerConfig">
            <summary>
            PosModelTrainerConfig.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.PosModelTrainerConfig.Validate(Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Validate the config.
            </summary>
            <param name="attrSchema">LexicalAttributeSchema.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.PosModelTrainerConfig.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load XML file.
            </summary>
            <param name="xmlDoc">XmlDoc.</param>
            <param name="nsmgr">Nsmgr.</param>
            <param name="contentController">Content controler.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.PosModelTrainerConfig.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Save Pos model trainer config file into Xml writer.
            </summary>
            <param name="writer">Writer file to save into.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.PosModelTrainerConfig.Schema">
            <summary>
            Gets Schema of LangDataCompiler.xml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.PosModelTrainerConfig.DefaultPos">
            <summary>
            Gets or sets Default pos of the word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.PosModelTrainerConfig.CharFirstRules">
            <summary>
            Gets Char first rules.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.PosModelTrainerConfig.CharFirstRuleConfig">
            <summary>
            CharFirstRuleConfig.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.PosModelTrainerConfig.CharFirstRuleConfig.FirstCharList">
            <summary>
            Gets or sets First char list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.PosModelTrainerConfig.CharFirstRuleConfig.TargetPos">
            <summary>
            Gets or sets Target pos.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Config.IniFile">
            <summary>
            Load from ini file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Config.IniFile._sections">
            <summary>
            IDictionary[section, IList[key, value]].
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.IniFile.Load(System.String)">
            <summary>
            Load *.ini File.
            </summary>
            <param name="filePath">Ini file path.</param>
            <exception cref="T:System.IO.FileLoadException">Load file exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Config.IniFile.CreateException(System.String,System.String,System.Int32)">
            <summary>
            Create a FileLoadException.
            </summary>
            <param name="msg">Show message.</param>
            <param name="file">File path.</param>
            <param name="line">Line num.</param>
            <returns>A new instance of FileLoadException.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Config.IniFile.Sections">
            <summary>
            Gets All section members.
            IDictionary[section, IList[KeyValuePair[key, value]]].
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.ZipItemType">
            <summary>
            Zip item type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ZipItemType.None">
            <summary>
            None type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ZipItemType.File">
            <summary>
            The zip item value is a file location.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ZipItemType.Directory">
            <summary>
            The zip item value is a directory location.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ZipItemType.FileListDirectory">
            <summary>
            The zip item value is a directory with file list folder structure.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ZipItemType.Path">
            <summary>
            The zip item value is a file/directory location.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ZipItemType.DirectoryWithMD5">
            <summary>
            The zip item value is a directory location, don't zip files under the directory,
            Only save md5 of the file in that directory.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.ZipItemType.FileListDirectoryWithMD5">
            <summary>
            The zip item value is a directory location, don't zip files under the directory,
            Only save md5 of the file in that directory.
            The directory with file list folder structure.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile">
            <summary>
            Training meta file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.ToolVersionKeyName">
            <summary>
            Training tool version.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.TrainingMachineKeyName">
            <summary>
            Training machine name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.LanguageInputName">
            <summary>
            Language input name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.VoiceTrainingMetaFileName">
            <summary>
            Default training metafile name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.VoiceModelTrainerConfigFileName">
            <summary>
            Default training configuration file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile._schema">
            <summary>
            Training meta file schema.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.GetParameter(System.String)">
            <summary>
            Get parameter from the training meta file.
            </summary>
            <param name="keyName">The key name.</param>
            <returns>The parameter.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.Reset">
            <summary>
            Reset the training meta file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.Save(System.String)">
            <summary>
            Save to file.
            </summary>
            <param name="filePath">File path to be saved to.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.Load(System.String)">
            <summary>
            Load from file.
            </summary>
            <param name="filePath">File path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.LoadXml(System.String)">
            <summary>
            Parse from xml inside CDATA section.
            </summary>
            <param name="xmlContent">Inputed Xml content string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.ParseVoiceTrainingMetaFile(System.Xml.XmlNamespaceManager,System.Xml.XmlNode)">
            <summary>
            Parse training meta file.
            </summary>
            <param name="nsmgr">Namespace manager.</param>
            <param name="configNode">Xml node containing the config.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.ParseZipItemsNode(System.Xml.XmlNamespaceManager,System.Xml.XmlNode)">
            <summary>
            Load zip items from xml snippet.
            </summary>
            <param name="nsmgr">Namespace manager.</param>
            <param name="configNode">Xml node containing the config.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.VoiceTrainingMetaFileUri">
            <summary>
            Gets voice training meta file URI.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.VoiceModelTrainerConfigFileUri">
            <summary>
            Gets voice model trainer configuration file URI.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.Schema">
            <summary>
            Gets configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.SchemaInclude">
            <summary>
            Gets sonfiguration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.Parameters">
            <summary>
            Gets parameters directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.VoiceTrainingMetaFile.ZipItems">
            <summary>
            Gets zip items.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.TrainMetaParameter">
            <summary>
            Training meta file parameter.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.TrainMetaParameter.Parse(System.Xml.XmlNamespaceManager,System.Xml.XmlNode)">
            <summary>
            Load zip items from xml snippet.
            </summary>
            <param name="nsmgr">Namespace manager.</param>
            <param name="node">Xml node containing the config.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainMetaParameter.Name">
            <summary>
            Gets or sets name of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainMetaParameter.Value">
            <summary>
            Gets or sets value of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainMetaParameter.IsReused">
            <summary>
            Gets or sets a value indicating whether the parameter is reused.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.TrainModelZipItem">
            <summary>
            Train model ZIP item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.TrainModelZipItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Schema.TrainModelZipItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.TrainModelZipItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Schema.TrainModelZipItem"/> class.
            </summary>
            <param name="moduleName">Module name.</param>
            <param name="parameterName">Parameter name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.TrainModelZipItem.Parse(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse ZipItem node.
            </summary>
            <param name="node">Xml document.</param>
            <param name="nsmgr">Namespace manager.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.TrainModelZipItem.CreateXmlNode(System.Xml.XmlDocument,System.String)">
            <summary>
            Create Zip item node.
            </summary>
            <param name="dom">Xml document.</param>
            <param name="xmlNamespace">Xml namespace.</param>
            <returns>Created XML node.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainModelZipItem.Reference">
            <summary>
            Gets reference of the zip item parameter name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainModelZipItem.Type">
            <summary>
            Gets or sets zip type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainModelZipItem.IsReused">
            <summary>
            Gets or sets a value indicating whether the zip item is reused.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainModelZipItem.FileExtension">
            <summary>
            Gets or sets file extension of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainModelZipItem.Source">
            <summary>
            Gets or sets source of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainModelZipItem.RelativeLocalPathWithoutFileExtension">
            <summary>
            Gets relative local path with out file extension.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainModelZipItem.RelativeLocalPath">
            <summary>
            Gets relative local path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainModelZipItem.RelativeZipUriWithoutFileExtension">
            <summary>
            Gets relative zip uri path with out file extension.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.TrainModelZipItem.RelativeZipUri">
            <summary>
            Gets relative zip uri.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.LinguisticFeatureInfo">
            <summary>
            Represents linguistic feature definition.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureInfo.Name">
            <summary>
            Gets or sets name of this linguistic feature.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureInfo.ExtendedProperty">
            <summary>
            Gets or sets a value indicating whether this feature uses extended property.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureInfo.QuestionCategory">
            <summary>
            Gets or sets the custom question category associate with this feature.
            Null or empty if no custom question used.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureInfo.ValueType">
            <summary>
            Gets or sets the linguistic feature type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureInfo.MinValue">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureInfo.MaxValue">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureInfo.QuestionMode">
            <summary>
            Gets or sets the question mode.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureInfo.Group">
            <summary>
            Gets or sets the name of the group to which this feature belongs.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig">
            <summary>
            The class to extract linguistic features.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig._schema">
            <summary>
            The schema.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Load linguistic feature file from assembly resource.
            </summary>
            <param name="assembly">Assembly contains the linguistic feature configuration file.</param>
            <param name="resourcePath">Resource relative path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.Load(System.String)">
            <summary>
            Loads the config file.
            </summary>
            <param name="filePath">
            Config file path.
            </param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.ParseFeatures(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse features elements in XML file.
            </summary>
            <param name="dom">Xml document.</param>
            <param name="nsmgr">Xml namespace manager.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.ParseFeatureInfo(System.Xml.XmlElement)">
            <summary>
            Parses LinguisticFeatureInfo from xml element.
            </summary>
            <param name="ele">The xml element.</param>
            <returns>LinguisticFeatureInfo object.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.Schema">
            <summary>
            Gets configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.TargetFeatureName">
            <summary>
            Gets or sets the TargetFeatureName.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.TargetFeatureValue">
            <summary>
            Gets or sets the TargetFeatureValue.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.LingFeaList">
            <summary>
            Gets linguistic feature list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.LinguisticFeatureConfig.FeatureGroups">
            <summary>
            Gets the grouped feature list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel">
            <summary>
            Feature test case label class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.#ctor(Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel"/> class.
            </summary>
            <param name="lab">FeatureTestCaseLabel.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.Parse(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse test case label element.
            </summary>
            <param name="labelNode">XML test case label node.</param>
            <param name="nsmgr">Xml namespace manager.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.PerformanceSave(System.Xml.XmlWriter,System.String)">
            <summary>
            Save test case label.
            </summary>
            <param name="writer">Writer file to save into.</param>
            <param name="nameSpace">Name space.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.Text">
            <summary>
            Gets or sets text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.PredictFeatureName">
            <summary>
            Gets or sets predict feature name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.PredictFeatureValue">
            <summary>
            Gets or sets predict feature value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.ExpectedFeatureValue">
            <summary>
            Gets or sets expected feature value.
            Can be default value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.DefaultFeatureValue">
            <summary>
            Gets or sets default feature.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.Probability">
            <summary>
            Gets or sets probability.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.Source">
            <summary>
            Gets or sets the source of the prediction is made.
            Probably from a prediction model, or combined model.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.Confidence">
            <summary>
            Gets or sets the confidence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.Difference">
            <summary>
            Gets or sets the difference.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.Features">
            <summary>
            Gets the feature dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCaseLabel.WordType">
            <summary>
            Gets or sets the word type.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.FeatureTestCase">
            <summary>
            Feature test case class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureTestCase.#ctor">
            <summary>
            Initializes a new instance of the FeatureTestCase class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureTestCase.Parse(System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Parse test case element.
            </summary>
            <param name="caseNode">XML test case node.</param>
            <param name="nsmgr">Xml namespace manager.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureTestCase.PerformanceSave(System.Xml.XmlWriter,System.String)">
            <summary>
            Save test case to target file.
            </summary>
            <param name="writer">Writer file to save into.</param>
            <param name="nameSpace">Name space.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCase.Id">
            <summary>
            Gets or sets test case Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCase.Text">
            <summary>
            Gets or sets test case text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureTestCase.Labels">
            <summary>
            Gets test case labels.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Schema.FeatureDocument">
            <summary>
            FeatureDocument class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureDocument.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the FeatureDocument class.
            </summary>
            <param name="language">Language of this feature document.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureDocument.#ctor">
            <summary>
            Initializes a new instance of the FeatureDocument class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureDocument.BuildFeatureValueSet">
            <summary>
            Build feature value set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureDocument.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load FeatureDocument instance from stream reader.
            </summary>
            <param name="xmlDoc">Document to load phone set from.</param>
            <param name="nsmgr">Xml namespace manager.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Schema.FeatureDocument.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Save FeatureDocument to target file.
            </summary>
            <param name="writer">Writer file to save into.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureDocument.TestCases">
            <summary>
            Gets the feature test cases.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureDocument.FeatureValueSet">
            <summary>
            Gets the feature value set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Schema.FeatureDocument.Schema">
            <summary>
            Configuration schema.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.MulanLogger">
            <summary>
            Mulan logger for handle Mulan TTS engine tracing log.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.ReadAllData(System.IO.TextReader,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            Read utterance instance from text reader.
            </summary>
            <param name="tr">Text reader to read from.</param>
            <param name="language">Language of the utterance.</param>
            <param name="engine">Engine of the utterance.</param>
            <returns>Utterance instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.ReadAllData(System.String,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType)">
            <summary>
            Load Tts utterance from Mulan TTS engine trace log.
            </summary>
            <param name="filePath">Log file path.</param>
            <param name="language">Language of the utterance.</param>
            <param name="engine">Engine type of the utterance.</param>
            <returns>TtsUtterance object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.Save(System.String,Microsoft.Tts.Offline.TtsUtterance)">
            <summary>
            Save the utterance in Mulan TTS log formated text file.
            </summary>
            <param name="filePath">Target file path to save utterance.</param>
            <param name="utterance">Utterance instance to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.Save(System.String,Microsoft.Tts.Offline.TtsUtterance,System.Int32,System.Int32)">
            <summary>
            Save the utterance in Mulan TTS log formated text file.
            </summary>
            <param name="filePath">Target file path to save utterance.</param>
            <param name="utterance">Utterance instance to save.</param>
            <param name="minUnitIndex">Minimum unit index to start to save.</param>
            <param name="maxUnitIndex">Maximum unit index to stop from saving.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.PostRead(Microsoft.Tts.Offline.TtsUtterance)">
            <summary>
            Post read processing.
            </summary>
            <param name="utterance">Utterance to handle.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.SaveUnit(System.IO.StreamWriter,System.Int32,Microsoft.Tts.Offline.TtsUnit,Microsoft.Tts.Offline.Viterbi.CostNode)">
            <summary>
            Save information of one unit into log file.
            </summary>
            <param name="writer">Stream writer to save the information.</param>
            <param name="index">Index of the unit to save.</param>
            <param name="expectedUnit">Expected unit from front-end.</param>
            <param name="selectedNode">Selected node through unit selection.</param>
            <returns>Next unit index.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.IsTag(System.String)">
            <summary>
            Tell whether this line start a new tag section.
            Tag format:
                <![CDATA[ <TagName> ]]>.
            </summary>
            <param name="line">Line to test.</param>
            <returns>Boolean.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.MoveToNextTag(System.IO.TextReader)">
            <summary>
            Move and find the next tag section.
            </summary>
            <param name="tr">Text reader to read line from.</param>
            <returns>Not null, a new tag found; else end.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.HandleTagNormText(Microsoft.Tts.Offline.TtsUtterance,System.String,System.IO.TextReader)">
            <summary>
            Handle Tag.NormText.
            </summary>
            <param name="utterance">Utterance to fill in.</param>
            <param name="line">Section starting line.</param>
            <param name="tr">Text data.</param>
            <returns>Next tag, or null for end.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.HandleTagBreakAndEmph(Microsoft.Tts.Offline.TtsUtterance,System.String,System.IO.TextReader)">
            <summary>
            Handle Tag.BreakAndEmph.
            </summary>
            <param name="utterance">Utterance to fill in.</param>
            <param name="line">Section starting line.</param>
            <param name="tr">Text data.</param>
            <returns>Next tag, or null for end.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.HandleTagPronun(Microsoft.Tts.Offline.TtsUtterance,System.String,System.IO.TextReader)">
            <summary>
            Handle Tag.Pronun.
            </summary>
            <param name="utterance">Utterance to fill in.</param>
            <param name="line">Section starting line.</param>
            <param name="tr">Text data.</param>
            <returns>Next tag, or null for end.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.HandleTagUnitVector(Microsoft.Tts.Offline.TtsUtterance,System.String,System.IO.TextReader)">
            <summary>
            Handle Tag.UnitVector.
            </summary>
            <param name="utterance">Utterance to fill in.</param>
            <param name="line">Section starting line.</param>
            <param name="tr">Text data.</param>
            <returns>Next tag, or null for end.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.HandleTagCandidateDump(Microsoft.Tts.Offline.TtsUtterance,System.String,System.IO.TextReader)">
            <summary>
            Handle Tag.CandidateDump.
            </summary>
            <param name="utterance">Utterance to fill in.</param>
            <param name="line">Section starting line.</param>
            <param name="tr">Text data.</param>
            <returns>Next tag, or null for end.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.HandleTagRouteDump(Microsoft.Tts.Offline.TtsUtterance,System.String,System.IO.TextReader)">
            <summary>
            Handle Tag.RouteDump.
            </summary>
            <param name="utterance">Utterance to fill in.</param>
            <param name="line">Section starting line.</param>
            <param name="tr">Text data.</param>
            <returns>Next tag, or null for end.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.HandleTagWaveUnitSel(Microsoft.Tts.Offline.TtsUtterance,System.String,System.IO.TextReader)">
            <summary>
            Handle Tag.WaveUnitSel.
            </summary>
            <param name="utterance">Utterance to fill in.</param>
            <param name="line">Section starting line.</param>
            <param name="tr">Text data.</param>
            <returns>Next tag, or null for end.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.ParseTag(System.String)">
            <summary>
            Parse for tag type from line.
            </summary>
            <param name="line">Line to parse.</param>
            <returns>Tag type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.ParseCostNode(System.String)">
            <summary>
            Parse cost node string.
            </summary>
            <example>
                Unit 3 1201786:1259 0 3 2 27 19 0 0 1 0 1.388950 5.729300.
            </example>
            <param name="line">Line to parse.</param>
            <returns>CostNode.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.ParseWaveUnitForWaveUnitSel(System.String)">
            <summary>
            Parse WaveUnit for WaveUnitSel section data.
            </summary>
            <example>
               0    0         -1 80
               1  217   33113977 3934 10/ 3 0/0 2/2 17/ 0 38/38 0/0 0/0 1/1 0/0
               2    0         -1 12000.
            </example>
            <param name="line">Line to parse.</param>
            <returns>Wave unit.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.ParseWaveUnitForViterbi(System.String[])">
            <summary>
            Parse WaveUnit for Viterbi.
            </summary>
            <example>
            Unit 0 1633894:3966 0 3 2 31 1 0 0 1 0 1.636750 1.636750
            Or
            Unit 0 1633894:3966 1.636750 1.636750.
            </example>
            <param name="items">Data to parse.</param>
            <returns>WaveUnit.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.ParseTtsUnit(System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            Parse TtsUnit .
            </summary>
            <example>
            10  0  2 17 38  0  0  1  0  1  1 1033  217 33554870      438  3 100  0  0  0  0 w+eh+l
            10  2  0 21  8  0  0  0  0  0  1 1033   10  8412674  8412674  0 100  0  0  0  0 k
            10  2  2 38 17  0  0  0  0  5  1 1033   79       61  8423798  0 100  0  0  0  0 ax+m
            0  0  0  0  0  0  0  0  0  5  0    0    0        0        0  0 100  0  0  0 750 _sil_.
            </example>
            <param name="line">Line to parse.</param>
            <param name="language">Language of the unit to build.</param>
            <returns>TtsUnit.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.MulanLogger.ParseMetaUnitForViterbi(System.String)">
            <summary>
            Parse MetaUnit for Viterbi.
            </summary>
            <example>
            10  0  2 17 38  0  0  1  0  1  1 1033  217 33554870      438  3 100  0  0  0  0 w+eh+l.
            </example>
            <param name="line">Unit feature string line.</param>
            <returns>TtsMetaUnit.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.MulanLogger.Tag">
            <summary>
            Tag types.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.NormText">
            <summary>
            Normalizaed text.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.BreakAndEmph">
            <summary>
            Annotated text, with break level and emphasis marks.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.Pitch">
            <summary>
            Pitch annotation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.Pronun">
            <summary>
            Pronunciation string of text.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.UnitVector">
            <summary>
            Unit specification for searching and selection.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.UnitControl">
            <summary>
            Unit control list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.CandidateDump">
            <summary>
            Viterbi searching space dumping.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.RouteDump">
            <summary>
            Selected all route dump .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.AverageConcateCost">
            <summary>
            Average concatecost.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.Index">
            <summary>
            Index of each units in this utterance.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.TargetCost">
            <summary>
            Target cost for corresponding unit.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.ConcateCost">
            <summary>
            Concatenate cost for corresponding unit.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.WaveUnitSel">
            <summary>
            Finally selected wave unit vector.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.MulanLogger.Tag.Unknown">
            <summary>
            Loader will ignore the unknown tagger.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.SsftData">
            <summary>
            SSFT data file manager.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.SsftData.ReadLexicon(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Read lexicon data from file.
            </summary>
            <param name="language">Language of the lexicon to read.</param>
            <param name="filePath">Lexicon data file path.</param>
            <returns>Lexicon instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.SsftData.ReadAllEnUSLexicon(System.String)">
            <summary>
            Load SSFT format english lexicon from text file.
            <example>
            Word abstract
            Pronunciation0 ae 1 b - s t r ae k t
            POS0 adj
            POS1 noun
            Pronunciation1 ax b - s t r ae 1 k t
            POS0 verb.
            </example>
            </summary>
            <param name="filePath">Text file to load.</param>
            <returns>Lexicon.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.BitStream">
            <summary>
            Bit stream operations.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.BitStream._bitMasks">
            <summary>
            Bit mask for shifting 32-bit data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.BitStream._buffer">
            <summary>
            Store bitstream data for writting or reading.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.BitStream._index">
            <summary>
            Current offset in _buffer when writting or reading.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.BitStream._cache">
            <summary>
            1. For writting data, firstly bits will be put into _cache till
               the _cache is fullfilled, at that time, current 32-bit data in
               _cache will be written to _buffer.
            2. For reading data, firstly bits will be get from _cache till
               the _cache is empty, at that time, next 32-bit data from _buffer
               will be read into _cache.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.BitStream._leftBits">
            <summary>
            1. For writting data, _leftBits means how many bits can be written into _cache.
            2. For reading data, _leftBits means how many bits can be read from _cache.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.BitStream"/> class.
            </summary>
            <param name="size">Bit stream buffer size.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.BitStream"/> class.
            </summary>
            <param name="buffer">BitStram buffer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.WriteBits(System.Int32,System.Int32)">
            <summary>
            Write bits into buffer: firstly bits will be put into _cache till
            The _cache is fullfilled, at that time, current 32-bit data in _cache
            Will be written to _buffer.
            </summary>
            <param name="bitValue">Bit value.</param>
            <param name="bitWidth">Bit width.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.WriteInt32(System.Int32)">
            <summary>
            Write 32-bit data.
            </summary>
            <param name="bitValue">Bit value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.WriteInt16(System.Int32)">
            <summary>
            Write 16-bit data.
            </summary>
            <param name="bitValue">Bit value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.ReadBits(System.Int32)">
            <summary>
            Read bits from buffer: firstly bits will be get from _cache till
            The _cache is empty, at that time, next 32-bit data from _buffer
            Will be read into _cache.
            </summary>
            <param name="bitWidth">Bit width.</param>
            <returns>Read bit value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.ReadInt32">
            <summary>
            Read 32-bit data.
            </summary>
            <returns>32-bit value read.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.ReadInt16">
            <summary>
            Read 16-bit data.
            </summary>
            <returns>16-bit result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.ToBytes">
            <summary>
            Return bits buffer.
            </summary>
            <returns>Bits buffer result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.WriteToBuffer(System.Byte[],System.Int32)">
            <summary>
            Write data into internal buffer.
            </summary>
            <param name="data">Input data.</param>
            <param name="size">Data size.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.BitStream.ReadUInt32FromBuffer">
            <summary>
            Read 32-bit data from _buffer.
            </summary>
            <returns>32-bit data.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.BitStream.Size">
            <summary>
            Gets Buffer size.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.UnitFeatureFile">
            <summary>
            Unit feature file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.UnitFeatureFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.UnitFeatureFile"/> class.
            </summary>
            <param name="filePath">Unit feature file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractFeature(Microsoft.Tts.Offline.ScriptFile,System.String,System.String,System.String,System.String,Microsoft.Tts.Offline.UnitFeatureFile)">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMapFilePath">File list map path.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractFeature(Microsoft.Tts.Offline.ScriptFile,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="units">Unit feature collection.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractFeature(Microsoft.Tts.Offline.ScriptFile,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,Microsoft.Tts.Offline.UnitFeatureFile)">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractFeature(System.String,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType,System.String,System.String,System.String,System.String,Microsoft.Tts.Offline.UnitFeatureFile)">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="scriptFilePath">Script file path.</param>
            <param name="language">Language.</param>
            <param name="engine">Engine type.</param>
            <param name="fileMapFilePath">File list map path.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractFeature(System.String,Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.EngineType,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="scriptFilePath">Script file path.</param>
            <param name="language">Language.</param>
            <param name="engine">Engine type.</param>
            <param name="fileMapFilePath">File list map path.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="unitFeatureFilePath">Unit feature file path.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractLinguistic(Microsoft.Tts.Offline.ScriptFile,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract linguistic feature.
            </summary>
            <param name="script">Script file.</param>
            <param name="units">Unit feature collection.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractLinguistic(Microsoft.Tts.Offline.ScriptFile,Microsoft.Tts.Offline.UnitFeatureFile)">
            <summary>
            Extract linguistic feature and save to unit feature file.
            </summary>
            <param name="script">Script file.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractAcoustic(Microsoft.Tts.Offline.ScriptFile,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract acoustic feature.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="units">Unit feature collections.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractAcoustic(Microsoft.Tts.Offline.ScriptFile,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,Microsoft.Tts.Offline.UnitFeatureFile)">
            <summary>
            Extract acoustic feature.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.BuildDomainInfo(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},Microsoft.Tts.Offline.Config.DomainConfig,Microsoft.Tts.Offline.Language)">
            <summary>
            Build domain info into unit feature.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="domainConfig">Domain config.</param>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.GetDomainUnits(System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},System.Int32)">
            <summary>
            Get units in given domain.
            </summary>
            <param name="units">Given unit collection.</param>
            <param name="domain">Given domain.</param>
            <returns>Units in given domain.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.BuildWaveUnitInfo(Microsoft.Tts.Offline.UnitFeatureFile,System.String)">
            <summary>
            Build wave unit info feature file.
            </summary>
            <param name="featureFile">Unit feature file.</param>
            <param name="waveUnitInfoFilePath">Wave unit info file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.BuildWaveSegmentSequence(Microsoft.Tts.Offline.UnitFeatureFile,System.String,System.String)">
            <summary>
            Build wave segment sequence file.
            </summary>
            <param name="featureFile">Unit feature file.</param>
            <param name="mapFilePath">File list file path.</param>
            <param name="waveSegmentSequenceFilePath">Wave segment file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.FilterFeatureData(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},Microsoft.Tts.Offline.Language,System.String,Microsoft.Tts.Offline.Config.UnitList.UnitListType)">
            <summary>
            Filter vector data according to units file.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="language">Language.</param>
            <param name="filteringUnitsFile">Filtering unit file path.</param>
            <param name="unitListType">
                UnitList.UnitListType.Hold: only units in the filteringUnitsFile will be kept
                UnitList.UnitListType.Drop: only units in the filteringUnitsFile will be removed.
            </param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.FilterFeatureData(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.Config.UnitList)">
            <summary>
            Filter unit feature data according to given filtering units.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="language">Language.</param>
            <param name="filteringUnitList">Give filtering unit collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.Merge(Microsoft.Tts.Offline.UnitFeatureFile,Microsoft.Tts.Offline.UnitFeatureFile)">
            <summary>
            Merge two unit feature file.
            </summary>
            <param name="sourceFile">Source unit feature file.</param>
            <param name="targetFile">Target unit feature file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.CalculateEnergyFeature(System.Collections.Generic.ICollection{Microsoft.Tts.Offline.TtsAcousticFeature})">
            <summary>
            Calculate energy fature for a group of units.
            </summary>
            <param name="units">Given unit list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.CalculateEpochFeature(System.Collections.Generic.ICollection{Microsoft.Tts.Offline.TtsAcousticFeature})">
            <summary>
            Calculate epoch feature for a group of units.
            </summary>
            <param name="units">Ginven unit list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.CalculateEnergyFeature(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},System.Int32)">
            <summary>
            Calculate energy feature.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="domain">Given script domain type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.CalculateEpochFeature(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},System.Int32)">
            <summary>
            Calculate epoch feature.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="domain">Given script domain type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.Load(System.String)">
            <summary>
            Load unit feature file.
            </summary>
            <param name="filePath">Unit feature file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.Save">
            <summary>
            Save as unit feature file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.Save(System.String)">
            <summary>
            Save as unit feature file.
            </summary>
            <param name="filePath">Unit feature file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.Save(System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            Save as unit feature file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ToIndexed``2(System.Collections.Generic.ICollection{``0},Microsoft.Tts.Offline.UnitFeatureFile.GetKey{``0},Microsoft.Tts.Offline.UnitFeatureFile.GetValue{``0,``1})">
            <summary>
            Create dictionary from given collection.
            </summary>
            <typeparam name="T1">Type used by given collection.</typeparam>
            <typeparam name="T2">Type used by dictionary value.</typeparam>
            <param name="units">Given collection.</param>
            <param name="getKey">Given dictionary key.</param>
            <param name="getValue">Given dictionary value.</param>
            <returns>Created Dictionary.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.CalculateNormalizedFeature``1(System.Collections.Generic.ICollection{``0},Microsoft.Tts.Offline.UnitFeatureFile.GetValue{``0,System.Single},Microsoft.Tts.Offline.UnitFeatureFile.SetValue{``0,System.Single})">
            <summary>
            Calculate normalized feature (suce as energy feature).
            </summary>
            <typeparam name="T1">Type of items.</typeparam>
            <param name="items">Item collection.</param>
            <param name="getValue">Given source feature.</param>
            <param name="setValue">Given target feature.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.LoadFile(System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Load unit feature file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="units">Unit feature collection.</param>
            <returns>Lanuage used by unit features.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.LoadUnit(System.Xml.XmlTextReader)">
            <summary>
            Load one unit feature item from unit feature file.
            </summary>
            <param name="reader">Xml text reader.</param>
            <returns>Unit feature item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.LoadLinguisticFeature(System.Xml.XmlTextReader,Microsoft.Tts.Offline.UnitFeature)">
            <summary>
            Load linguistic features.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="unit">Unit feature item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.LoadAcousticFeature(System.Xml.XmlTextReader,Microsoft.Tts.Offline.UnitFeature)">
            <summary>
            Load acoustic features.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="unit">Unit feature item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.GetAttribute(System.Xml.XmlTextReader,System.String)">
            <summary>
            Get attribute of xml element.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="attrib">Attribute name string.</param>
            <returns>Attribute value string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.GetIntegerAttribute(System.Xml.XmlTextReader,System.String)">
            <summary>
            Get integer attribute value of xml element.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="attribName">Attribute name.</param>
            <returns>Attribute value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.GetFloatAttribute(System.Xml.XmlTextReader,System.String)">
            <summary>
            Get float attribute value of xml reader.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="attribName">Attribute name.</param>
            <returns>Attribute value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractLinguistic(Microsoft.Tts.Offline.ScriptItem,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract linguistic feature for one script item.
            </summary>
            <param name="scriptItem">Script item.</param>
            <param name="units">Unit feature collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractAcoustic(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract acoustic feature for one script item.
            </summary>
            <param name="scriptItem">Script item.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segment directory.</param>
            <param name="wave16kDir">16 Khz Waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="units">Unit feature collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.ExtractAcoustic(Microsoft.Tts.Offline.Waveform.WaveAcousticFeature,Microsoft.Tts.Offline.Waveform.EggAcousticFeature,Microsoft.Tts.Offline.WaveSegment)">
            <summary>
            Extract acoustic feature for one unit.
            </summary>
            <param name="waveFile">Waveform file.</param>
            <param name="eggFile">Epoch file.</param>
            <param name="segment">Wave segment.</param>
            <returns>Acoustic feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.GetUnitFeature(System.String,System.Int32,System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Add a new unit feature into unit feature collection.
            If exited same on in the collection, return it .
            </summary>
            <param name="sid">Sentence Id.</param>
            <param name="index">Unit Index.</param>
            <param name="name">Unit name.</param>
            <param name="units">Unit feature collection.</param>
            <returns>Unit feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.CalculateEnergyFeature(Microsoft.Tts.Offline.Language,System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Calculate energy feature.
            </summary>
            <param name="lang">Language.</param>
            <param name="units">Unit feature collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeatureFile.CalculateEpochFeature(Microsoft.Tts.Offline.Language,System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Try to calculate epoch feature.
            </summary>
            <param name="lang">Language.</param>
            <param name="units">Unit feature collection.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeatureFile.Schema">
            <summary>
            Gets Unit feature schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeatureFile.FilePath">
            <summary>
            Gets or sets Unit feature file path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeatureFile.Language">
            <summary>
            Gets or sets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeatureFile.Units">
            <summary>
            Gets Unit feature collection.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeatureFile.SentIndexedUnits">
            <summary>
            Gets Unit feature collection indexed by sentence id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeatureFile.NameIndexedUnits">
            <summary>
            Gets Unit feature collection indexed by unit name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.UnitFeatureFile.GetKey`1">
            <summary>
            Dictionary key.
            </summary>
            <typeparam name="T1">Type used by dictionary.</typeparam>
            <param name="t">Dictionary.</param>
            <returns>Key string.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.UnitFeatureFile.GetValue`2">
            <summary>
            Dictionary value.
            </summary>
            <typeparam name="T1">Type used by dictionary.</typeparam>
            <typeparam name="T2">Tyep used by dictionary value.</typeparam>
            <param name="t">Dictionary.</param>
            <returns>Value.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.UnitFeatureFile.SetValue`2">
            <summary>
            Set value.
            </summary>
            <typeparam name="T1">Type for target variable.</typeparam>
            <typeparam name="T2">Type for input variable.</typeparam>
            <param name="t1">Target variable.</param>
            <param name="t2">Input variable.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.UnitFeature">
            <summary>
            Unit feature item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeature.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.UnitFeature"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeature.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.UnitFeature"/> class.
            </summary>
            <param name="sentenceId">Sentence id.</param>
            <param name="index">Unit index.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeature.GetKey(System.String,System.Int32)">
            <summary>
            Compile unit feature key.
            </summary>
            <param name="sentenceId">Sentence id.</param>
            <param name="index">Unit index in the sentece.</param>
            <returns>Unit feature key.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitFeature.ToXml(System.Xml.XmlWriter)">
            <summary>
            Write as xml element.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeature.Id">
            <summary>
            Gets Key: sentence Id + unit index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeature.SentenceId">
            <summary>
            Gets or sets Sentence id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeature.Index">
            <summary>
            Gets or sets Unit index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeature.Name">
            <summary>
            Gets or sets Unit full name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeature.LingusitcFeature">
            <summary>
            Gets or sets Linguistic features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeature.Break">
            <summary>
            Gets or sets Break level.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeature.WordType">
            <summary>
            Gets or sets Word type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeature.Domain">
            <summary>
            Gets or sets Domain category.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitFeature.AcousticFeature">
            <summary>
            Gets or sets Acoustic features.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlUnitFeatureFile">
            <summary>
            Unit feature file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.XmlUnitFeatureFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.XmlUnitFeatureFile"/> class.
            </summary>
            <param name="filePath">Unit feature file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractFeature(Microsoft.Tts.Offline.XmlScriptFile,System.String,System.String,System.String,System.String,Microsoft.Tts.Offline.XmlUnitFeatureFile)">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMapFilePath">File list map path.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractFeature(Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="units">Unit feature collection.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractFeature(Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,Microsoft.Tts.Offline.XmlUnitFeatureFile)">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractFeature(System.String,Microsoft.Tts.Offline.Language,System.String,System.String,System.String,System.String,Microsoft.Tts.Offline.XmlUnitFeatureFile)">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="scriptFilePath">Script file path.</param>
            <param name="language">Language.</param>
            <param name="fileMapFilePath">File list map path.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractFeature(System.String,Microsoft.Tts.Offline.Language,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Extract all linguistic and acoustic features.
            </summary>
            <param name="scriptFilePath">Script file path.</param>
            <param name="language">Language.</param>
            <param name="fileMapFilePath">File list map path.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="unitFeatureFilePath">Unit feature file path.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractLinguistic(Microsoft.Tts.Offline.XmlScriptFile,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract linguistic feature.
            </summary>
            <param name="script">Script file.</param>
            <param name="units">Unit feature collection.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractLinguistic(Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.XmlUnitFeatureFile)">
            <summary>
            Extract linguistic feature and save to unit feature file.
            </summary>
            <param name="script">Script file.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractAcoustic(Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract acoustic feature.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="units">Unit feature collections.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractAcoustic(Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,Microsoft.Tts.Offline.XmlUnitFeatureFile)">
            <summary>
            Extract acoustic feature.
            </summary>
            <param name="script">Script file.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Alignment directory.</param>
            <param name="wave16kDir">16 kHz waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="featureFile">Unit feature file.</param>
            <returns>Error information set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.BuildDomainInfo(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},Microsoft.Tts.Offline.Config.DomainConfig,Microsoft.Tts.Offline.Language)">
            <summary>
            Build domain info into unit feature.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="domainConfig">Domain config.</param>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.GetDomainUnits(System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},System.Int32)">
            <summary>
            Get units in given domain.
            </summary>
            <param name="units">Given unit collection.</param>
            <param name="domain">Given domain.</param>
            <returns>Units in given domain.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.BuildWaveUnitInfo(Microsoft.Tts.Offline.XmlUnitFeatureFile,System.String)">
            <summary>
            Build wave unit info feature file.
            </summary>
            <param name="featureFile">Unit feature file.</param>
            <param name="waveUnitInfoFilePath">Wave unit info file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.BuildWaveSegmentSequence(Microsoft.Tts.Offline.XmlUnitFeatureFile,System.String,System.String)">
            <summary>
            Build wave segment sequence file.
            </summary>
            <param name="featureFile">Unit feature file.</param>
            <param name="mapFilePath">File list file path.</param>
            <param name="waveSegmentSequenceFilePath">Wave segment file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.FilterFeatureData(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},Microsoft.Tts.Offline.Language,System.String,Microsoft.Tts.Offline.Config.UnitList.UnitListType)">
            <summary>
            Filter vector data according to units file.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="language">Language.</param>
            <param name="filteringUnitsFile">Filtering unit file path.</param>
            <param name="unitListType">
                UnitList.UnitListType.Hold: only units in the filteringUnitsFile will be kept
                UnitList.UnitListType.Drop: only units in the filteringUnitsFile will be removed.
            </param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.FilterFeatureData(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.Config.UnitList)">
            <summary>
            Filter unit feature data according to given filtering units.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="language">Language.</param>
            <param name="filteringUnitList">Give filtering unit collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.Merge(Microsoft.Tts.Offline.XmlUnitFeatureFile,Microsoft.Tts.Offline.XmlUnitFeatureFile)">
            <summary>
            Merge two unit feature file.
            </summary>
            <param name="sourceFile">Source unit feature file.</param>
            <param name="targetFile">Target unit feature file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.CalculateEnergyFeature(System.Collections.Generic.ICollection{Microsoft.Tts.Offline.TtsAcousticFeature})">
            <summary>
            Calculate energy fature for a group of units.
            </summary>
            <param name="units">Given unit list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.CalculateEpochFeature(System.Collections.Generic.ICollection{Microsoft.Tts.Offline.TtsAcousticFeature})">
            <summary>
            Calculate epoch feature for a group of units.
            </summary>
            <param name="units">Ginven unit list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.CalculateEnergyFeature(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},System.Int32)">
            <summary>
            Calculate energy feature.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="domain">Given script domain type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.CalculateEpochFeature(System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature},System.Int32)">
            <summary>
            Calculate epoch feature.
            </summary>
            <param name="units">Unit feature collection.</param>
            <param name="domain">Given script domain type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.Load(System.String)">
            <summary>
            Load unit feature file.
            </summary>
            <param name="filePath">Unit feature file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.Save">
            <summary>
            Save as unit feature file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.Save(System.String)">
            <summary>
            Save as unit feature file.
            </summary>
            <param name="filePath">Unit feature file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.Save(System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            Save as unit feature file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ToIndexed``2(System.Collections.Generic.ICollection{``0},Microsoft.Tts.Offline.XmlUnitFeatureFile.GetKey{``0},Microsoft.Tts.Offline.XmlUnitFeatureFile.GetValue{``0,``1})">
            <summary>
            Create dictionary from given collection.
            </summary>
            <typeparam name="T1">Type used by given collection.</typeparam>
            <typeparam name="T2">Type used by dictionary value.</typeparam>
            <param name="units">Given collection.</param>
            <param name="getKey">Given dictionary key.</param>
            <param name="getValue">Given dictionary value.</param>
            <returns>Created Dictionary.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.CalculateNormalizedFeature``1(System.Collections.Generic.ICollection{``0},Microsoft.Tts.Offline.XmlUnitFeatureFile.GetValue{``0,System.Single},Microsoft.Tts.Offline.XmlUnitFeatureFile.SetValue{``0,System.Single})">
            <summary>
            Calculate normalized feature (suce as energy feature).
            </summary>
            <typeparam name="T1">Type of items.</typeparam>
            <param name="items">Item collection.</param>
            <param name="getValue">Given source feature.</param>
            <param name="setValue">Given target feature.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.LoadFile(System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Load unit feature file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="units">Unit feature collection.</param>
            <returns>Lanuage used by unit features.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.LoadUnit(System.Xml.XmlTextReader)">
            <summary>
            Load one unit feature item from unit feature file.
            </summary>
            <param name="reader">Xml text reader.</param>
            <returns>Unit feature item.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.LoadLinguisticFeature(System.Xml.XmlTextReader,Microsoft.Tts.Offline.UnitFeature)">
            <summary>
            Load linguistic features.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="unit">Unit feature item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.LoadAcousticFeature(System.Xml.XmlTextReader,Microsoft.Tts.Offline.UnitFeature)">
            <summary>
            Load acoustic features.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="unit">Unit feature item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.GetAttribute(System.Xml.XmlTextReader,System.String)">
            <summary>
            Get attribute of xml element.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="attrib">Attribute name string.</param>
            <returns>Attribute value string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.GetIntegerAttribute(System.Xml.XmlTextReader,System.String)">
            <summary>
            Get integer attribute value of xml element.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="attribName">Attribute name.</param>
            <returns>Attribute value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.GetFloatAttribute(System.Xml.XmlTextReader,System.String)">
            <summary>
            Get float attribute value of xml reader.
            </summary>
            <param name="reader">Xml text reader.</param>
            <param name="attribName">Attribute name.</param>
            <returns>Attribute value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractLinguistic(Microsoft.Tts.Offline.ScriptItem,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract linguistic feature for one script item.
            </summary>
            <param name="scriptItem">Script item.</param>
            <param name="units">Unit feature collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractAcoustic(Microsoft.Tts.Offline.ScriptItem,Microsoft.Tts.Offline.FileListMap,System.String,System.String,System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Extract acoustic feature for one script item.
            </summary>
            <param name="scriptItem">Script item.</param>
            <param name="fileMap">File list map.</param>
            <param name="segmentDir">Segment directory.</param>
            <param name="wave16kDir">16 Khz Waveform directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="units">Unit feature collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.ExtractAcoustic(Microsoft.Tts.Offline.Waveform.WaveAcousticFeature,Microsoft.Tts.Offline.Waveform.EggAcousticFeature,Microsoft.Tts.Offline.WaveSegment)">
            <summary>
            Extract acoustic feature for one unit.
            </summary>
            <param name="waveFile">Waveform file.</param>
            <param name="eggFile">Epoch file.</param>
            <param name="segment">Wave segment.</param>
            <returns>Acoustic feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.GetUnitFeature(System.String,System.Int32,System.String,System.Collections.Generic.SortedDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Add a new unit feature into unit feature collection.
            If exited same on in the collection, return it .
            </summary>
            <param name="sid">Sentence Id.</param>
            <param name="index">Unit Index.</param>
            <param name="name">Unit name.</param>
            <param name="units">Unit feature collection.</param>
            <returns>Unit feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.CalculateEnergyFeature(Microsoft.Tts.Offline.Language,System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Calculate energy feature.
            </summary>
            <param name="lang">Language.</param>
            <param name="units">Unit feature collection.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.XmlUnitFeatureFile.CalculateEpochFeature(Microsoft.Tts.Offline.Language,System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.UnitFeature})">
            <summary>
            Try to calculate epoch feature.
            </summary>
            <param name="lang">Language.</param>
            <param name="units">Unit feature collection.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlUnitFeatureFile.Schema">
            <summary>
            Gets Unit feature schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlUnitFeatureFile.FilePath">
            <summary>
            Gets or sets Unit feature file path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlUnitFeatureFile.Language">
            <summary>
            Gets or sets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlUnitFeatureFile.Units">
            <summary>
            Gets Unit feature collection.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlUnitFeatureFile.SentIndexedUnits">
            <summary>
            Gets Unit feature collection indexed by sentence id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.XmlUnitFeatureFile.NameIndexedUnits">
            <summary>
            Gets Unit feature collection indexed by unit name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlUnitFeatureFile.GetKey`1">
            <summary>
            Dictionary key.
            </summary>
            <typeparam name="T1">Type used by dictionary.</typeparam>
            <param name="t">Dictionary.</param>
            <returns>Key string.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlUnitFeatureFile.GetValue`2">
            <summary>
            Dictionary value.
            </summary>
            <typeparam name="T1">Type used by dictionary.</typeparam>
            <typeparam name="T2">Tyep used by dictionary value.</typeparam>
            <param name="t">Dictionary.</param>
            <returns>Value.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.XmlUnitFeatureFile.SetValue`2">
            <summary>
            Set value.
            </summary>
            <typeparam name="T1">Type for target variable.</typeparam>
            <typeparam name="T2">Type for input variable.</typeparam>
            <param name="t1">Target variable.</param>
            <param name="t2">Input variable.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.DomainIndexFileHeaderSerial">
            <summary>
            Domain index file header serialization data block.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFileHeaderSerial.Read(System.IO.BinaryReader)">
            <summary>
            Read a DomainIndexFileHeaderSerial block from bindary stream.
            </summary>
            <param name="br">Binary reader to read data for domain index file.</param>
            <returns>Domain index file header serial.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFileHeaderSerial.ToBytes">
            <summary>
            Converts this instance into byte array.
            </summary>
            <returns>Byte array presenting this instance.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.FeatureDataItem">
            <summary>
            Feature data item in feature data chunck.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FeatureDataItem.UnitIndexes">
            <summary>
            Gets Unit index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FeatureDataItem.BinarySize">
            <summary>
            Gets Binary size.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.DomainIndexItem">
            <summary>
            Domain index item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexItem.WriteFeatureData(System.IO.BinaryWriter)">
            <summary>
            Write feature item into feature data chunck.
            </summary>
            <param name="bw">Binary writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexItem.WriteWordText(System.IO.BinaryWriter)">
            <summary>
            Write word text into string pool.
            </summary>
            <param name="bw">Binary writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexItem.WriteHashtable(System.IO.BinaryWriter)">
            <summary>
            Write hash table item.
            </summary>
            <param name="bw">Binary writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexItem.LoadHashtable(System.Byte[],System.Int32)">
            <summary>
            Load hash table.
            </summary>
            <param name="data">Hash table bytes.</param>
            <param name="offset">Start offset in hash table chunck.</param>
            <returns>Size of loaded data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexItem.LoadFeatureData(System.Byte[],System.Int32)">
            <summary>
            Load feature data.
            </summary>
            <param name="data">Feature data bytes.</param>
            <param name="offset">Start offset in feature data chunck.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexItem.LoadWordText(System.Byte[],System.Int32)">
            <summary>
            Load word text.
            </summary>
            <param name="data">String pool bytes.</param>
            <param name="offset">Start offset in string pool.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.DomainIndexItem.Word">
            <summary>
            Gets or sets Word text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DomainIndexItem.FeatureDataOffset">
            <summary>
            Gets or sets Offset in feature data chunck.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DomainIndexItem.StringPoolOffset">
            <summary>
            Gets or sets Offset in string pool.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DomainIndexItem.NextItemIndex">
            <summary>
            Gets or sets Next item index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DomainIndexItem.FeatureItems">
            <summary>
            Gets Feature data item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DomainIndexItem.FeatureItemBinarySize">
            <summary>
            Gets Size of feature data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DomainIndexItem.StringBinarySize">
            <summary>
            Gets Size of word in string pool.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.DomainIndexFile">
            <summary>
            Domain index file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFile.Load(System.String)">
            <summary>
            Load domain index file.
            </summary>
            <param name="filePath">File path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFile.Save(System.String,Microsoft.Tts.Offline.Config.FontBuildNumber)">
            <summary>
            Save domain index file.
            </summary>
            <param name="filePath">File path.</param>
            <param name="buildNumber">Build number.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFile.Create(Microsoft.Tts.Offline.XmlScriptFile,Microsoft.Tts.Offline.Config.DomainConfigList,Microsoft.Tts.Offline.Interop.UnitIndexingFile)">
            <summary>
            Create domain index file.
            </summary>
            <param name="scriptFile">Script file.</param>
            <param name="domainList">Domain list.</param>
            <param name="uif">Name indexed unit features.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFile.GetPhoneIds(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Get pronunciation id string for letter domain.
            </summary>
            <param name="word">Given ScriptWord.</param>
            <returns>Pronunciation id string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFile.GetNumberDomainWordText(Microsoft.Tts.Offline.ScriptWord,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Config.DigitalWordItem})">
            <summary>
            Get word text for number domain.
            </summary>
            <param name="word">Given ScriptWord.</param>
            <param name="sentenceId">Sentence Id.</param>
            <param name="wordIndex">Word index.</param>
            <param name="digitals">Digital words.</param>
            <returns>Word text.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFile.GetAcronymDomainWordText(Microsoft.Tts.Offline.ScriptWord,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Config.AcronymWordItem})">
            <summary>
            Get word text for acronym domain.
            </summary>
            <param name="word">Given ScriptWord.</param>
            <param name="sentenceId">Sentence Id.</param>
            <param name="wordIndex">Word index.</param>
            <param name="acronyms">Acronym words.</param>
            <returns>Word text.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFile.BuildHashTable(System.Collections.Generic.ICollection{Microsoft.Tts.Offline.DomainIndexItem})">
            <summary>
            Build hash table.
            </summary>
            <param name="items">Domain index items.</param>
            <returns>Hash table contains domain index items.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.DomainIndexFile.GetHashValue(System.String,System.Int32)">
            <summary>
            Get has code as position in hash table.
            </summary>
            <param name="text">Given word text.</param>
            <param name="length">Given hash table length.</param>
            <returns>Hash code.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.DomainIndexFile.Language">
            <summary>
            Gets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DomainIndexFile.Tag">
            <summary>
            Gets Font section tag.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PhoneStateDuration">
            <summary>
            State duration in a state of a phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneStateDuration.PhoneLabel">
            <summary>
            Phone label.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.PhoneStateDuration.FramesInState">
            <summary>
            Frame number (duration) in the five states.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.DurationFile">
            <summary>
            File with state durations of phones.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.DurationFile._durations">
            <summary>
            Duration collection.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DurationFile.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.DurationFile"/> class.
            </summary>
            <param name="stateCount">The number of states for each phone.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DurationFile.Save(System.String)">
            <summary>
            Write state durations to a file
            File line format: phonelabel + state order number (1-5) + frames in the state.
            </summary>
            <param name="filePath">Duration file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DurationFile.Save(System.String,System.Boolean)">
            <summary>
            Write state durations to a file
            File line format: phonelabel + state order number (1-5) + frames in the state.
            </summary>
            <param name="filePath">Duration file path.</param>
            <param name="append">Append or not.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DurationFile.Load(System.String)">
            <summary>
            Read state durations of phones from a state duration file.
            </summary>
            <param name="filePath">Duration file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.DurationFile.Reset">
            <summary>
            Remove all values.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.DurationFile.ToTwoDimensionArray">
            <summary>
            Convert from one dimension structure to TwoDimensionArray.
            </summary>
            <returns>Two-dimension array.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.DurationFile.StateCount">
            <summary>
            Gets the state count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DurationFile.Durations">
            <summary>
            Gets or sets Duration Collection.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FloatBinaryFile">
            <summary>
            Binary file with float values.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FloatBinaryFile._values">
            <summary>
            Float values collection.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FloatBinaryFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.FloatBinaryFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FloatBinaryFile.Save(System.String)">
            <summary>
            Save float values to a binary file.
            </summary>
            <param name="filePath">Float binary file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FloatBinaryFile.SaveAsTxt(System.String)">
            <summary>
            Save float values to a readable txt file.
            </summary>
            <param name="filePath">Txt file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FloatBinaryFile.Save(System.String,System.Boolean)">
            <summary>
            Save float values to a binary file.
            </summary>
            <param name="filePath">Float binary file path.</param>
            <param name="append">Append or not.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FloatBinaryFile.Load(System.String)">
            <summary>
            Load float values from a binary file.
            </summary>
            <param name="filePath">Float binary file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.FloatBinaryFile.Reset">
            <summary>
            Remove all values.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FloatBinaryFile.Values">
            <summary>
            Gets or sets Float values collection.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.IO.RewindableTextReader">
            <summary>
            The class to represent Rewindable TextReader.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.IO.RewindableTextReader._reader">
            <summary>
            The composited text reader instance.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.IO.RewindableTextReader._cachedLine">
            <summary>
            The cached line of string for next read line operation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.IO.RewindableTextReader._rewindable">
            <summary>
            Flag to indicate whether return cached data or not.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.RewindableTextReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the RewindableTextReader class.
            </summary>
            <param name="reader">The reader instance to use for reading.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.RewindableTextReader.Close">
            <summary>
            Closes the System.IO.TextReader and releases any system resources associated with the TextReader.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.RewindableTextReader.PeekLine">
            <summary>
            Peek a line of characters from the current stream and returns the data as a string.
            </summary>
            <returns>The next line from the input stream, or null if all characters have been read.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.RewindableTextReader.ReadLine">
            <summary>
            Reads a line of characters from the current stream and returns the data as a string.
            </summary>
            <returns>The next line from the input stream, or null if all characters have been read.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.RewindableTextReader.RewindLine">
            <summary>
            Rewinds a line of characters which will be re-return from ReadLine.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.RewindableTextReader.ReadLines(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Reads lines from the text reader and stop if the indicator is found.
            </summary>
            <param name="stoppers">The indicators to stop current read operation.</param>
            <param name="inclusive">Flag to indicate whether including the line of indicator.</param>
            <returns>Lines read from the stream.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.RewindableTextReader.Dispose">
            <summary>
            Disposes the resources used in this object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.RewindableTextReader.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the RewindableTextReader.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources;
            False to release only unmanaged resources.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.IO.ZipFile">
            <summary>
            Zip file operation class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.IO.ZipFile.UriPathDelimeter">
            <summary>
            URI path delimiter.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.IO.ZipFile.UriRoot">
            <summary>
            URI root.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.IO.ZipFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.CompareContent(System.String,System.String)">
            <summary>
            Compare content of the two zip file.
            </summary>
            <param name="sourceZipFilePath">Source zip file path.</param>
            <param name="targetZipFilePath">Target zip file path.</param>
            <returns>Compare content of the two zip files.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.CompareContent(System.String,System.String,System.Func{System.String,System.String,System.Boolean})">
            <summary>
            Compare content of the two zip file.
            </summary>
            <param name="sourceZipFilePath">Source zip file path.</param>
            <param name="targetZipFilePath">Target zip file path.</param>
            <param name="needCompareFile">Whether the file need compare.</param>
            <returns>Compare content of the two zip files.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.Create(System.String)">
            <summary>
            Create new zip file object.
            </summary>
            <param name="zipFilePath">Zip file path to be created to.</param>
            <returns>Created ZipFile object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.Open(System.String,System.IO.FileAccess)">
            <summary>
            Create new zip file object.
            </summary>
            <param name="zipFilePath">Zip file path to be created to.</param>
            <param name="fileAccess">File access.</param>
            <returns>Created ZipFile object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.CombineUri(System.String,System.String)">
            <summary>
            Combine root URI with relative URI.
            </summary>
            <param name="rootUri">Root URI.</param>
            <param name="relativeUri">Relative URI.</param>
            <returns>Combined URI.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.ConvertUriToPath(System.String)">
            <summary>
            Convert URI to path.
            </summary>
            <param name="uri">URI to be converted.</param>
            <returns>Converted path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.ConvertPathToUri(System.String)">
            <summary>
            Convert path to URI.
            </summary>
            <param name="path">Path to be converted.</param>
            <returns>Converted URI.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.AddDirPart(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Pack all files in one directory to a ZIP file.
            </summary>
            <param name="packUriPath">Target ZIP file location.</param>
            <param name="packDir">Source file directory.</param>
            <param name="filesNameWithoutExtension">Files name without extension to be zipped.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.AddDirPart(System.String)">
            <summary>
            Pack all files in one directory to a ZIP file.
            </summary>
            <param name="packDir">Source file directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.AddDirPart(System.String,System.String)">
            <summary>
            Pack all files in one directory to a ZIP file.
            </summary>
            <param name="packUriPath">Target ZIP file location.</param>
            <param name="packDir">Source file directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.AddPart(System.String,System.String)">
            <summary>
            Add one source file to the ZIP file.
            </summary>
            <param name="relativeUriPath">URI in the ZIP file.</param>
            <param name="filePath">Source file location to be zipped.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.AddPart(System.String,System.String,System.Boolean)">
            <summary>
            AddPart.
            </summary>
            <param name="relativeUriPath">Relative uri path.</param>
            <param name="filePath">File path.</param>
            <param name="needCompress">Need compress.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.AddPart(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Add one source file to the ZIP file.
            </summary>
            <param name="relativeUriPath">URI in the ZIP file.</param>
            <param name="filePath">Source file location to be zipped.</param>
            <param name="contentType">File content type.</param>
            <param name="overwrite">Whether overwrite existing part.</param>
            <param name="needCompress">Compress ratio.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.Extract(System.String)">
            <summary>
            Extract all files in one ZIP file to target directory.
            </summary>
            <param name="targetDir">Target directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.Extract(System.String,Microsoft.Tts.Offline.IO.ZipFile.ExtractProgressDelegate)">
            <summary>
            Extract all files in one ZIP file to target directory.
            </summary>
            <param name="targetDir">Target directory.</param>
            <param name="extractProgressDelegate">Extract progress delegate.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.Extract(System.String,System.String)">
            <summary>
            Extract file in ZIP file to target location.
            </summary>
            <param name="relativeUriPath">URI of the file to be extracted.</param>
            <param name="targetFilePath">Target file location.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.Dispose">
            <summary>
            Dispose the ZipFile.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing flag.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ZipFile.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copy bytes from source stream to target stream.
            </summary>
            <param name="target">Target stream to be copied to.</param>
            <param name="source">Source stream to be copied.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.IO.ZipFile.Package">
            <summary>
            Gets or sets the zip package.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.IO.ZipFile.FileCount">
            <summary>
            Gets the count of the files in the ZIP file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.IO.ZipFile.ExtractedFileSize">
            <summary>
            Gets the file total size in the ZIP file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.IO.ZipFile.ExtractProgressDelegate">
            <summary>
            Extract file progress delegate.
            </summary>
            <param name="relativeFilePath">Extract file path.</param>
            <param name="processedBytes">Processed bytes count.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.IO.StemmerFileError">
            <summary>
            Compile common phrase error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.IO.StemmerFileError.OneColumnLine">
            <summary>
            Duplicate item id.
            Parameters:
            {0}: One column line.
            {1}: Stemmer file path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.IO.StemmerFile">
            <summary>
            Stemmer file operation class, stemmer file contains information of different forms of words.
            This file is plain text file with unicode encoding.
            Each line contains different forms of the word in the first column.
            The column separated by "tab" char ('\t').
            For example:
                reach'\t'reaches'\t'reaching'\t'reached
                react'\t'reacted'\t'reacting'\t'reacts.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.StemmerFile.Read(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load stemmer file.
            </summary>
            <param name="stemmerFilePath">Stemmer file path.</param>
            <param name="errorSet">Error set.</param>
            <returns>Loaded stemmer items.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.IO.PhraseItem">
            <summary>
            Phrase information in the phrase file, each phrase item represent one line in the phrase file.
            The columns are separated by tab ('\t')
            For example:
                absence of menstruation'\t'noun
                absence of middle ear'\t'noun
                absence of mind'\t'noun,unknown.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.PhraseItem.#ctor">
            <summary>
            Initializes a new instance of the PhraseItem class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.IO.PhraseItem.Phrase">
            <summary>
            Gets or sets phrase text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.IO.PhraseItem.Poses">
            <summary>
            Gets POS list of the phrase.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.IO.PhraseFile">
            <summary>
            Phrase file operation class, phrase file contains information of phrases.
            This file is plain text file with unicode encoding.
            There are at least 2 columns in each line, the column separated by "tab" char ('\t').
            The first column is the phrase, the words of the phrase separated by blank space.
            The second column is the candidate POS information of the phrase, there may be multiple POS.
            The poses is combined with ",".
            For example:
                absence of menstruation'\t'noun
                absence of middle ear'\t'noun
                absence of mind'\t'noun,unknown.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.PhraseFile.Read(System.String[])">
            <summary>
            Load phrase from multi files.
            </summary>
            <param name="phraseFilePathes">Phrase files.</param>
            <returns>Loaded phrase list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.PhraseFile.Read(System.String)">
            <summary>
            Load phrase files.
            </summary>
            <param name="phraseFilePath">Phrase file path.</param>
            <returns>Loaded phrase pair.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.IO.ObjectSerializer">
            <summary>  
            The class of object serialzier.
            </summary> 
        </member>
        <member name="F:Microsoft.Tts.Offline.IO.ObjectSerializer.TempObjPath">
            <summary>  
            Temporary object folder.
            </summary> 
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ObjectSerializer.Serialize(System.Object,System.String,System.String)">
            <summary>
            Serialize the object to binary file.
            </summary>
            <param name="obj">The object.</param>
            <param name="path">The path to save the object.</param>
            <param name="objectName">The name of the object.</param>
            <returns name ="string">The final path.</returns>  
        </member>
        <member name="M:Microsoft.Tts.Offline.IO.ObjectSerializer.Deserialize(System.String)">
            <summary>  
            Deserialize the object from binary file.
            </summary>  
            <param name="path">The location of object.</param>  
            <returns name ="object">Object.</returns>  >
        </member>
        <member name="T:Microsoft.Tts.Offline.Interop.WaveInfoHeader">
            <summary>
            Class for WIH (Wave information Header) file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInfoHeader.WihFileTag">
            <summary>
            Wave info header file tag: "WIH ".
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInfoHeader.WihVersion">
            <summary>
            The version of this file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInfoHeader.WihBuild">
            <summary>
            The build number of this file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInfoHeader.WihFormatTag">
            <summary>
            The GUID of WIH file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInfoHeader.Save(System.String)">
            <summary>
            Saves the wave information header into given file.
            </summary>
            <param name="file">
            The file name of target file.
            </param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInfoHeader.Load(System.String)">
            <summary>
            Loads the wave information header from the given file.
            </summary>
            <param name="file">
            File to load the wave information header.
            </param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInfoHeader.Validate">
            <summary>
            Validates the wave information header and throw exception when it is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInfoHeader.GetFileDataSize">
            <summary>
            Gets voice font file data size.
            </summary>
            <returns>Voice font file data size.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveInfoHeader.Compression">
            <summary>
            Gets or sets the wave compress catalog.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveInfoHeader.SamplesPerSecond">
            <summary>
            Gets or sets the sample count per second of wave inventory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveInfoHeader.BytesPerSample">
            <summary>
            Gets or sets the byte count per sample of wave inventory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveInfoHeader.FormatCategory">
            <summary>
            Gets or sets the WaveFormatTag of wave inventory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveInfoHeader.CrossCorrelationMarginLength">
            <summary>
            Gets or sets the cross correlation margin length, in millisecond.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveInfoHeader.NeedObfuscation">
            <summary>
            Gets a value indicating whether need obfuscation.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Interop.WaveCandidateInfo">
            <summary>
            The wave candidate info will be writed into UnitIndexingFile.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.DataSize">
            <summary>
            The size in byte of this object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.Save(System.IO.BinaryWriter)">
            <summary>
            Saves the wave candidate info into binary writer.
            </summary>
            <param name="writer">The given binary writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.Load(System.IO.BinaryReader)">
            <summary>
            Loads the wave candidate info from binary reader.
            </summary>
            <param name="reader">The given binary reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.ToString">
            <summary>
            Save info into string.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.Name">
            <summary>
            Gets or sets the candidate name of this object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.Id">
            <summary>
            Gets or sets ID of this object, it is the candidate ID.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.GlobalId">
            <summary>
            Gets or sets Global ID of this object, it is the candidate global ID.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.FrameIndex">
            <summary>
            Gets or sets the frame offset in inventory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.FrameNumber">
            <summary>
            Gets or sets the frame number in inventory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.SentenceIdOffset">
            <summary>
            Gets or sets the sentence id offset in string pool.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.SentenceId">
            <summary>
            Gets or sets the sentence id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.IndexOfNonSilence">
            <summary>
            Gets or sets the index of non-silence unit in sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.FrameIndexInSentence">
            <summary>
            Gets or sets the frame index in sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.LeftMarginInFrame">
            <summary>
            Gets or sets the maximum frame number of extend to left side on frame shifting.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveCandidateInfo.RightMarginInFrame">
            <summary>
            Gets or sets the maximum frame number of extend to right side on frame shifting.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Interop.UnitIndexingFile">
            <summary>
            The class used to write/read UNT file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile.FileTag">
            <summary>
            The file tag of UNT file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile.Version">
            <summary>
            The current version number of this UNT file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile.FormatTag">
            <summary>
            The GUID of UNT file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile._namedUnitIndexId">
            <summary>
            The name indexed unit index id, which key is the unit name, and the value is the unit index id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile._waveCandidates">
            <summary>
            The wave candidates. The key is the unit index id, and the value is the IdKeyedWaveCandidateInfos.
            IdKeyedWaveCandidateInfos is a SortedDictionary with key is the candidate id and the value is the WaveCandidateInfo.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile._stringPool">
            <summary>
            The string pool.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile._unitNameStringPoolOffsets">
            <summary>
            Save the name offsets in string pool for each unit.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.#ctor(System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Initializes a new instance of the UnitIndexingFile class. Can be followed with Load() operation and Add() methods.
            </summary>
            <param name="namedUnitTypeId">The Dictionary which key is unit name and the value is unit index id.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.Compare(System.String,System.String)">
            <summary>
            Compares two UNT files by ignoring builder number.
            </summary>
            <param name="left">The left file name of UNT file.</param>
            <param name="right">The right file name of UNT file.</param>
            <returns>True if the two UNT file is equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.BuildPhoneNameIdMap(Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Builds a map between the phone name and its type id.
            </summary>
            <param name="phoneSet">The given phoneset.</param>
            <returns>The Dictionary which key is unit name and the value is unit index id.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.ValidateUnitNameIdMap(System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Validates the given map between the unit name and its type id.
            A valid mapping must be have continuous unit index id which starts from 0.
            </summary>
            <param name="namedUnitTypeId">The Dictionary which key is unit name and the value is unit index id.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.Add(Microsoft.Tts.Offline.Interop.WaveCandidateInfo)">
            <summary>
            Adds a wave candidate info into unit indexing file.
            </summary>
            <param name="candidateInfo">The candidate information will be wrote into unit indexing file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.Save(System.String)">
            <summary>
            Saves the unit indexing file.
            </summary>
            <param name="file">The given file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.Load(System.String)">
            <summary>
            Loads the unit indexing file.
            </summary>
            <param name="file">The given file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.SearchCandidateOffset(System.String,System.String,System.UInt32)">
            <summary>
            Search the offset of certain candidate in unt file .
            </summary>
            <param name="unitName">The given unit name.</param>
            <param name="sentenceId">The given sentence id name.</param>
            <param name="indexOfNonSilence">Index of non silence in the sentence.</param>
            <returns>The offset of candidate in UNT file, -1 means "no found".</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.SaveToText(System.String)">
            <summary>
            Save whole unit inventory to text file for log.
            </summary>
            <param name="file">Output file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.Dispose">
            <summary>
            Disposes the resources used in this object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the RewindableTextReader.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources;
            False to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.ValidateContinuousCandidateId">
            <summary>
            Validates the candidate Ids, which should be started with 0 and continuous.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.SaveHeader(System.IO.BinaryWriter)">
            <summary>
            Saves the header section to binary writer.
            </summary>
            <param name="writer">The given binary writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.SaveCandidates(System.IO.BinaryWriter)">
            <summary>
            Saves the unit index and candidate data section to binary writer.
            </summary>
            <param name="writer">The given binary writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.SaveStringPool(System.IO.BinaryWriter)">
            <summary>
            Saves the string pool section to binary writer.
            </summary>
            <param name="writer">The given binary writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.LoadHeader(System.IO.BinaryReader)">
            <summary>
            Loads the header section from binary reader.
            </summary>
            <param name="reader">The given binary reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.LoadCandidates(System.IO.BinaryReader)">
            <summary>
            Loads the unit index and candidate data section from binary reader.
            </summary>
            <param name="reader">The given binary reader.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.LoadStringPool(System.IO.BinaryReader)">
            <summary>
            Loads the string pool section from binary reader.
            </summary>
            <param name="reader">The given binary reader.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.DataSize">
            <summary>
            Gets the data size of this file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.BuildNumber">
            <summary>
            Gets or sets the build number of this file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.SamplePerFrame">
            <summary>
            Gets or sets the sample per Frame.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexOffset">
            <summary>
            Gets the unit index section offset.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexCount">
            <summary>
            Gets the unit index count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.CandidateDataOffset">
            <summary>
            Gets the candidate data section offset.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.CandidateCount">
            <summary>
            Gets the total candidate count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.StringPoolOffset">
            <summary>
            Gets the string pool section offset.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.StringPoolSize">
            <summary>
            Gets the string pool size.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.WaveCandidates">
            <summary>
            Gets the wave candiates.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexInfo">
            <summary>
            The class to hold the unit index information.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexInfo.DataSize">
            <summary>
            The data size of unit index information.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexInfo.InvalidOffset">
            <summary>
            The invalid offset.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexInfo.InvalidIndexInfo">
            <summary>
            The invalid UnitIndexInfo.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexInfo.Save(System.IO.BinaryWriter)">
            <summary>
            Saves the unit index info into binary writer.
            </summary>
            <param name="writer">The given binary writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexInfo.Load(System.IO.BinaryReader)">
            <summary>
            Loads the unit index info from binary reader.
            </summary>
            <param name="reader">The given binary reader.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexInfo.Offset">
            <summary>
            Gets or sets the offset of this unit.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.UnitIndexingFile.UnitIndexInfo.Count">
            <summary>
            Gets or sets the count of this unit.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Interop.WaveInventoryCreator">
            <summary>
            The class is used to write wave forms into a wave inventory, and builds the UNT, WIH accordingly.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.MaxMarginInFrame">
            <summary>
            The maximum margin in frame.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._fileName">
            <summary>
            The file name of result file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._fileStream">
            <summary>
            The file stream of wave inventory file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._header">
            <summary>
            The wave info header file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._indexingFile">
            <summary>
            The unit indexing file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._namedUnitTypeId">
            <summary>
            The mapping from unit string into id;.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._phoneIdMap">
            <summary>
            The mapping from phone name into id;.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._ccMarginLength">
            <summary>
            The margin length of data in sample count. for cross-correlation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._fsMarginLength">
            <summary>
            The margin length of data in sample count. for Frame Shifting.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._writer">
            <summary>
            The binary writer of the wave inventory file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._obfuscationMethod">
            <summary>
            The obfuscation method.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._voiceFontHeader">
            <summary>
            The common voice font header.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._dataOffset">
            <summary>
            The wave data offset from file start.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.WaveInventoryCreator._millisecondPerFrame">
            <summary>
            Millisecond per sps frame.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.#ctor(System.String,Microsoft.Tts.Offline.Interop.WaveInfoHeader,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the WaveInventoryCreator class.
            </summary>
            <param name="resultFile">The file name of the result files without extension name.</param>
            <param name="header">The wave info header.</param>
            <param name="namedUnitTypeId">The Dictionary which key is unit name and the value is index type id.</param>
            <param name="phoneIdMap">Phone id map .</param>
            <param name="millisecondPerFrame">Millisecond per frame.</param>
            <param name="keepLeftRightFrameMargin">Keep left right frame margin.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.#ctor(System.String,Microsoft.Tts.Offline.Interop.WaveInfoHeader,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32,System.Int32,Microsoft.Tts.Offline.Interop.WaveInventoryCreator.ObfuscationMethod)">
            <summary>
            Initializes a new instance of the WaveInventoryCreator class.
            </summary>
            <param name="resultFile">The file name of the result files without extension name.</param>
            <param name="header">The wave info header.</param>
            <param name="namedUnitTypeId">The Dictionary which key is unit name and the value is index type id.</param>
            <param name="phoneIdMap">Phone id map .</param>
            <param name="millisecondPerFrame">Millisecond per frame.</param>
            <param name="keepLeftRightFrameMargin">Keep left right frame margin.</param>
            <param name="obfuscationMethod">The given method to perform obfuscation for the wave data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.Dispose">
            <summary>
            The member of IDisposable interface.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.Save">
            <summary>
            Save info into the files.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.Add(Microsoft.Tts.Offline.Htk.Sentence,System.String)">
            <summary>
            Adds a sentence into wave inventory.
            </summary>
            <param name="sentence">The given sentence.</param>
            <param name="waveFileName">The corresponding wave form file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing flag.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.NullObsucator(System.Byte[],System.Int32)">
            <summary>
            A null obfuscator methods, nothing will be changed here.
            </summary>
            <param name="data">The input data want to be obfuscated.</param>
            <param name="key">The given key to obfuscate the data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.Add(Microsoft.Tts.Offline.Htk.Sentence,Microsoft.Tts.Offline.Waveform.WaveFile)">
            <summary>
            Adds a sentence into wave inventory.
            </summary>
            <param name="sentence">The given sentence.</param>
            <param name="waveFile">The corresponding wave form file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.WriteLeftMargin(Microsoft.Tts.Offline.Waveform.WaveFile,Microsoft.Tts.Offline.Htk.UnitCandidate,Microsoft.Tts.Offline.Interop.WaveCandidateInfo)">
            <summary>
            Writes the left margin if possible.
            </summary>
            <param name="waveFile">The given wave file where the current candidate belongs to.</param>
            <param name="candidate">The current candidate.</param>
            <param name="candidateInfo">The candidate information of the current candidate.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.WriteRightMargin(Microsoft.Tts.Offline.Waveform.WaveFile,Microsoft.Tts.Offline.Htk.UnitCandidate,Microsoft.Tts.Offline.Interop.WaveCandidateInfo)">
            <summary>
            Writes the right margin if possible.
            </summary>
            <param name="waveFile">The given wave file where the current candidate belongs to.</param>
            <param name="candidate">The current candidate.</param>
            <param name="candidateInfo">The candidate information of the current candidate.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.WriteZeroMargin(System.Int32)">
            <summary>
            Writes some zero data into inventory.
            </summary>
            <param name="count">The count in sample count of the data will be written.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.WriteIntoInventory(System.Byte[])">
            <summary>
            Writes the data into inventory.
            </summary>
            <param name="data">The given data to write.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.ConvertsWaveDataFormat(Microsoft.Tts.Offline.Waveform.WaveFile,System.Int32,System.Int32)">
            <summary>
            Converts the wave data into proper format.
            </summary>
            <param name="waveFile">The given WaveFile object in which the data will be converted.</param>
            <param name="offset">The offset in sample count of the data will be converted.</param>
            <param name="count">The count in sample count of the data will be converted.</param>
            <returns>Waveform data in supported format of voice font.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.LogFile">
            <summary>
            Gets or sets Log file name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Interop.WaveInventoryCreator.ObfuscationMethod">
            <summary>
            Delegate use to obfuscate the wave form.
            </summary>
            <param name="data">The input data want to be obfuscated.</param>
            <param name="key">The given key to obfuscate the data.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo">
            <summary>
            BadUnitCandiateSourceInfo store the bad unit candiate.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo.Size">
            <summary>
            Return the size of the instance saved in disk.
            </summary>
            <returns> The size of the instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo.Equals(Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo)">
            <summary>
            Implement the interface of Equals.
            </summary>
            <param name="other">The other instance to compare.</param>
            <returns>The bool to indicate if two instance are equal.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo.SentenceIdStringPoolOffset">
            <summary>
            Gets or sets the string pool offset of the sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo.RecordingIndexOfNonSilence">
            <summary>
            Gets or sets the recording index of non-silence.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Interop.BadUnitListFile">
            <summary>
            The class used to write/read TUN file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.BadUnitListFile.FileTag">
            <summary>
            The magic number in the file head.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Interop.BadUnitListFile.FormatGuid">
            <summary>
            GUID for tun file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.BadUnitListFile.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Interop.BadUnitListFile"/> class.
            </summary>
            <param name="version">The version of bad unit file.</param>
            <param name="buildVersion">The build versio of unit file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.BadUnitListFile.AppendFile(System.String,Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo)">
            <summary>
            Append bad unit information to the file.
            </summary>
            <param name="path">The path of the file to append.</param>
            <param name="badUnit">The bad unit information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Interop.BadUnitListFile.CreateFile(System.String,Microsoft.Tts.Offline.Interop.BadUnitCandiateSourceInfo)">
            <summary>
            Create the tun file from the scratch.
            </summary>
            <param name="path">The path of the file to append.</param>
            <param name="badUnit">The bad unit information.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CrfModelCompilerError">
            <summary>
            CRF model error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CrfModelCompilerError.DataFolderNotFound">
            <summary>
            Data Folder Not Found
            Parameters: 
            {0}: path of crf model data folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CrfModelCompilerError.InvalidCrfModel">
            <summary>
            Invalid Crf Model File.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CrfModelCompilerError.InvalidMappingFormat">
            <summary>
            Invalid Format About Crf Model Mapping File.
            {0}: path of crf model mapping file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CrfModelCompilerError.MappingFileNotFound">
            <summary>
            Mapping File Not Found
            Parameters: 
            {0}: path of crf model mapping file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.CrfModelCompilerError.MappingDataNotFound">
            <summary>
            Mapping Data Not Found
            Parameters: 
            {0}: path of crf model mapping file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CrfModelCompiler">
            <summary>
            Compile CRF model.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CrfModelCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.CrfModelCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CrfModelCompiler.Compile(System.String,System.IO.Stream,System.Collections.ObjectModel.Collection{System.String},Microsoft.Tts.Offline.Language)">
            <summary>
            Compile crf model files into binary file.
            </summary>
            <param name="crfModelDir">Directory of crf model files.</param>
            <param name="outputStream">Output Stream.</param>
            <param name="addedFileNames">Output parameter - crf model files added to binary.</param>
            <param name="lang">Language info.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CrfModelCompiler.LocalizeCRFModelName(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load CRF model name mapping(model name and localized name).
            </summary>
            <param name="mappingFile">Mapping File Path.</param>
            <param name="errorSet">Error set.</param>
            <returns>CRF name mapping set.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.RNNModelCompilerError">
            <summary>
            RNN model error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.RNNModelCompilerError.ModelDataNotFound">
            <summary>
            Model Data Not Found
            Parameters: 
            {0}: path of rnn model data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.RNNModelCompilerError.InvalidCharacterListFormat">
            <summary>
            Invalid Format About RNN Model Polyphonic Character List File.
            {0}: path of rnn model polyphonic charcter list file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.RNNModelCompilerError.PolyphonicCharFileNotFound">
            <summary>
            Polyphonic Character List File Not Found
            Parameters: 
            {0}: path of rnn model  polyphonic charcter list file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.RNNModelCompilerError.PolyphonicCharNotFound">
            <summary>
            Polyphonic Character Not Found
            Parameters: 
            {0}: path of rnn model polyphonic charcter list file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.RNNModelCompiler">
            <summary>
            Compile RNN model.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.RNNModelCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.RNNModelCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.RNNModelCompiler.Compile(System.String,System.IO.Stream,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Compile rnn model files into binary file.
            </summary>
            <param name="rnnModelPath">RNN model file path.</param>
            <param name="outputStream">Output Stream.</param>
            <param name="addedFileNames">Output parameter - rnn model files added to binary. now we have only one rnn model. keep this parameter is for future to maintain more than one rnn model.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.RNNModelCompiler.LoadPolyphonicInfo(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load Polyphonic Characters That Should Be Enabled in Product.
            </summary>
            <param name="listFile">List File Path.</param>
            <param name="errorSet">Error set.</param>
            <returns>Polyphonic characters set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.RNNModelCompiler.GetPolyphonicChars(System.Collections.Generic.Dictionary{System.String,System.Single})">
            <summary>
            Load Polyphonic Characters That Should Be Enabled in Product.
            </summary>
            <param name="polyCharactersInfo">PolyCharactersInfo.</param>
            <returns>Polyphonic characters set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.RNNModelCompiler.GetPolyphonicThreshold(System.Collections.Generic.Dictionary{System.String,System.Single})">
            <summary>
            Get Polyphonic Characters Threshold Which will Be Used in Product.
            </summary>
            <param name="polyCharactersInfo">PolyCharactersInfo.</param>
            <returns>Polyphonic characters  Threshold set.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhonemeMapCompiler">
            <summary>
            Phoneme Map Compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhonemeMapCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PhonemeMapCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhonemeMapCompiler.Compile(System.String,System.Boolean,System.IO.Stream)">
            <summary>
            Compiler.
            </summary>
            <param name="mapFileName">Path of phoneme mapping file.</param>
            <param name="sourceAsId">Whether source phone is phone id, to converted into int.</param>
            <param name="outputStream">Output Stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhonemeMapCompiler.ConvertSourcePhoneID(System.Collections.Generic.IList{Microsoft.Tts.Offline.Compiler.PhonemePair})">
            <summary>
            Convert source phone IDs (string) to int string.
            </summary>
            <param name="phonemePairArray">Array of phoneme pair.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhonemePair">
            <summary>
            Phoneme pair.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.PhonemePair.ThirdPartyPhoneme">
            <summary>
            Gets or sets The third party phoneme, such as IPA and SAPI.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.PhonemePair.EnginePhoneme">
            <summary>
            Gets or sets The engine phoneme.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhonemeMap">
            <summary>
            Phonemap mapping between sources, which could be cross language or type of phone set.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.PhonemeMap.StartCharacter">
            <summary>
            The start charcter of binary phoneme map.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.PhonemeMap.DelimiterCharacter">
            <summary>
             The delimiter character of binary phoneme map.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhonemeMap.Sort">
            <summary>
            Sort the PhonemePair by comparing the third party phoneme string.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhonemeMap.ToBytes">
            <summary>
            Serialize current instance into binary stream.
            </summary>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhonemeMap.LoadXml(System.String)">
            <summary>
            Read phoneme mapping file.
            </summary>
            <param name="mapFileName">Mapping file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhonemeMap.Compare(Microsoft.Tts.Offline.Compiler.PhonemePair,Microsoft.Tts.Offline.Compiler.PhonemePair)">
            <summary>
            Compare the PhonemePair, used by List.Sort() method.
            </summary>
            <param name="firstPair">Source PhonemePair.</param>
            <param name="secondPair">Destination PhonemPair.</param>
            <returns>Compare result.</returns>        
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.PhonemeMap.Pairs">
            <summary>
            Gets Phoneme mapping pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhoneData">
            <summary>
            Phone Data Structure.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhoneData.#ctor(System.String,System.UInt16,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PhoneData"/> struct.
            </summary>
            <param name="name">Phone name.</param>
            <param name="id">Phone id.</param>
            <param name="feature">Phone feature.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhoneSetCompiler">
            <summary>
            Phone Set Compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhoneSetCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PhoneSetCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhoneSetCompiler.Compile(Microsoft.Tts.Offline.TtsPhoneSet,System.IO.Stream)">
            <summary>
            Compiler.
            </summary>
            <param name="phoneSet">Phone Set.</param>
            <param name="outputStream">OutputStream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PosData">
            <summary>
            Pos Data Structure.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosData.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PosData"/> struct.
            </summary>
            <param name="name">POS name.</param>
            <param name="id">POS id.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PosSetCompiler">
            <summary>
            POS set compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosSetCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PosSetCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosSetCompiler.Compile(Microsoft.Tts.Offline.TtsPosSet,System.IO.Stream)">
            <summary>
            Compiler.
            </summary>
            <param name="posSet">POS set.</param>
            <param name="outputStream">Output Stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosSetCompiler.CompilePosTaggerPos(Microsoft.Tts.Offline.TtsPosSet,System.IO.Stream)">
            <summary>
            Compile the POS set into PosTaggerPos binary.
            </summary>
            <param name="posSet">POS set.</param>
            <param name="outputStream">Output stream.</param>
            <returns>Error set.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.SentenceSeparatorCompilerError">
            <summary>
            Sentence separator compiler error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.SentenceSeparatorCompilerError.NotFindSentenceSeparatorFile">
            <summary>
            Not found word breaker files
            Parameters: 
            {0}: path of word breaker data file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.SentenceSeparatorCompiler">
            <summary>
            Sentence Separator Compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SentenceSeparatorCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.SentenceSeparatorCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SentenceSeparatorCompiler.Compile(System.String,System.IO.Stream,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Compile the binary.
            </summary>
            <param name="sentSepDataDir">Directory of sentence separator data.</param>
            <param name="outputStream">OutputStream.</param>
            <param name="addedFileNames">Added sentence separator file names.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.SyllabifyRuleCompilerError">
            <summary>
            Syllabify Rule Compiler Error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.SyllabifyRuleCompilerError.RuleLengthExceeded">
            <summary>
            Rule Length Exceeded
            Parameters: 
            {0}: maximal rule length
            {1}: rule content.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.SyllabifyRuleCompilerError.InvalidPhone">
            <summary>
            Invalid Phone
            Parameters: 
            {0}: phone name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.SyllabifyRuleCompilerError.InvalidPhoneSet">
            <summary>
            Invalid Phone Set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.SyllabifyRuleCompiler">
            <summary>
            Syllabify Rule Compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SyllabifyRuleCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.SyllabifyRuleCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SyllabifyRuleCompiler.Compile(System.String,Microsoft.Tts.Offline.TtsPhoneSet,System.IO.Stream)">
            <summary>
            Compiler.
            </summary>
            <param name="syllabifyRuleFileName">Path of syllabify rule.</param>
            <param name="phoneSet">Phone set.</param>
            <param name="outputStream">Output Stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompilerError">
            <summary>
            Syllabify Rule Compiler Error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompilerError.WrongRuleSide">
            <summary>
            Wrong Rule Side
            {0}: side
            {1}: rule content.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompilerError.RuleLengthExceeded">
            <summary>
            Rule Length Exceeded
            {0}: maximal rule length
            {1}: rule content.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompilerError.InvalidPhone">
            <summary>
            Invalid Phone
            {0}: phone name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompilerError.UseDefaultPauseLength">
            <summary>
            Use Default Pause Length.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompilerError.InvalidPhoneSet">
            <summary>
            Invalid Phone Set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.TruncateNucleusRule">
            <summary>
            Truncate Nucleus Rule struct.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompiler">
            <summary>
            Unit Generator Data Compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompiler.Compile(System.String,Microsoft.Tts.Offline.TtsPhoneSet,System.IO.Stream)">
            <summary>
            Compiler.
            </summary>
            <param name="truncRuleFileName">File path of trunc rule.</param>
            <param name="phoneSet">Phone set.</param>
            <param name="outputStream">Output Stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.UnitGeneratorDataCompiler.CompTruncRuleData(System.String,Microsoft.Tts.Offline.TtsPhoneSet,System.IO.BinaryWriter)">
            <summary>
            Compile the trunc rule into binary writer.
            </summary>
            <param name="truncRuleFileName">File path of trunc rule.</param>
            <param name="phoneSet">Phone set.</param>
            <param name="bw">Binary writer.</param>
            <returns>Error.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.WordBreakerCompilerError">
            <summary>
            Word breaker error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.WordBreakerCompilerError.DataFolderNotFound">
            <summary>
            Data Folder Not Found
            Parameters: 
            {0}: path of word breaker data folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.WordBreakerCompilerError.InvalidLine">
            <summary>
            Invalid Line
            Parameters: 
            {0}: path of word breaker data file
            {1}: line number
            {2}: line content.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.WordBreakerCompilerError.BasicDataNotFound">
            <summary>
            Basic Data Not Found
            Parameters: 
            {0}: path of necessary word breaker data file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.WordBreakerCompilerError.NotFindWordBreakerFile">
            <summary>
            Not found word breaker files
            Parameters: 
            {0}: path of word breaker data file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.WordBreakerCompilerError.InvalidFormatGuid">
            <summary>
            Invalid format guid
            Parameters: 
            {0}: format guid of this word breaker.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.WordBreakerCompiler">
            <summary>
            Compile word breaker data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordBreakerCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.WordBreakerCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordBreakerCompiler.Compile(System.String,System.IO.Stream,System.Collections.ObjectModel.Collection{System.String},System.String)">
            <summary>
            Compile word breaker data table into binary file.
            </summary>
            <param name="wordBreakerDataDir">Directory of word breaker data.</param>
            <param name="outputStream">Output Stream.</param>
            <param name="addedFileNames">Word breaker files added to binary.</param>
            <param name="formatGuid">Format Guid.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordBreakerCompiler.WriteWordListIntoMemory(System.IO.MemoryStream,System.String,System.String[],System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Write the word break data into memory.
            </summary>
            <param name="wordListStream">A memory stream storing the word list.</param>
            <param name="wordBreakerDataDir">Directory of word breaker data.</param>
            <param name="fileNames">Files of word breaker data.</param>
            <param name="addedFileNames">Word breaker files added to binary.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordBreakerCompiler.WriteBreakingChar(System.IO.BinaryWriter,System.String)">
            <summary>
            Write the breaking char according to the file.
            </summary>
            <param name="bw">Binary writer.</param>
            <param name="filePath">File containing breaking characters.</param>
            <returns>Error Set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordBreakerCompiler.LoadHexWordFile(System.String,System.Collections.Generic.ICollection{System.Char})">
            <summary>
            Collect the words in a file with the following line format:
            0x0020,       // white space
            0x0040,       // @
            0x2022,       // � bullet.
            </summary>
            <param name="filePath">Path of char data.</param>
            <param name="charList">Char list.</param>
            <returns>Error Set.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.LengthComparer">
            <summary>
            Length comparer.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LengthComparer.Compare(System.String,System.String)">
            <summary>
            Compare function.
            </summary>
            <param name="x">Parameter x.</param>
            <param name="y">Y.</param>
            <returns>1 for the length of x less than the one of y.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PostWordBreakerCompilerError">
            <summary>
            Word breaker error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.PostWordBreakerCompilerError.DataFileNotFound">
            <summary>
            Data file Not Found
            Parameters: 
            {0}: path of post word breaker data file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.PostWordBreakerCompilerError.InvalidLine">
            <summary>
            Invalid Line
            Parameters: 
            {0}: path of post word breaker data file
            {1}: line number
            {2}: line content.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PostWordBreakerCompiler">
            <summary>
            Compile post word breaker data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PostWordBreakerCompiler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PostWordBreakerCompiler"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PostWordBreakerCompiler.Compile(System.String,System.IO.Stream)">
            <summary>
            Compile post word breaker data table into binary file.
            </summary>
            <param name="postWordBreakerDataFile">Path of post word breaker data file.</param>
            <param name="outputStream">Output Stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PostWordBreakerCompiler.WildCharToPlaceholder(System.String@)">
            <summary>
            Replace the wild characters (*, ?) in given string array to placeholders (/1, /2).
            </summary>
            <param name="word">Input string array, also the output string array.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PostWordBreakerCompiler.SortReplaceWordList(System.Collections.Generic.Dictionary{System.String,System.String},Microsoft.Tts.ServiceProvider.BaseUtils.TrieTree)">
            <summary>
            Sort the replace word list using Trie Tree id.
            </summary>
            <param name="pattern2Repalce">PatternWord:key, ReplaceWord:Value.</param>
            <param name="trieTree">Trie tree build by pattern word.</param>
            <returns>SortedReplaceWordList.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.ChineseToneCompilerError">
            <summary>
            Chinese tone error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.ChineseToneCompilerError.DataFileNotFound">
            <summary>
            Data file Not Found
            Parameters: 
            {0}: path of Chinese tone data file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.ChineseToneCompilerError.InvalidLine">
            <summary>
            Invalid Line
            Parameters: 
            {0}: path of Chinese tone data file
            {1}: line number
            {2}: line content.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.ChineseToneCompilerError.InvalidPatternFormData">
            <summary>
            Invalid Pattern From Data
            Parameters:
            None.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.ChineseToneCompiler">
            <summary>
            Compile Chinese tone data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.ChineseToneCompiler.Compile(System.String,System.IO.Stream)">
            <summary>
            Compile Chinese tone data table into binary file.
            </summary>
            <param name="chineseToneDataFile">Path of Chinese tone data file.</param>
            <param name="outputStream">Output Stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.WordFileError">
            <summary>
            WordFile Error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.WordFileError.ContainWhiteSpace">
            <summary>
            ContainWhiteSpace
            Parameters: 
            {0}: word
            {1}: path of word file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.WordFileError.DuplicateWord">
            <summary>
            DuplicateWord
            Parameters: 
            {0}: word
            {1}: path of word file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.WordFileError.DuplicateWordsInOneFile">
            <summary>
            DuplicateWordsInOneFile
            Parameters: 
            {0}: word
            {1}: path of word file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.WordFile">
            <summary>
            Word File,which is of the following line format
            L"Adj.",.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordFile.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.WordFile"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordFile.LoadWordsIntoWordList(System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Collect the words in a file, which is of the following line format
            L"Adj.",.
            </summary>
            <param name="file">File containing words.</param>
            <param name="words">Word list.</param>
            <param name="sort">Whether sort the word list.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordFile.LoadWordsIntoStringPool(System.String,Microsoft.Tts.Offline.Utility.StringPool,System.Collections.Generic.ICollection{System.Int32},System.Boolean,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Collect the words in the file and save them into string pool together with
            The offset list.
            </summary>
            <param name="filePath">File path containing words.</param>
            <param name="stringPool">String pool.</param>
            <param name="offsets">Offset list.</param>
            <param name="sort">Whether the word in the string pool are sorted.</param>
            <param name="errorSet">Error set.</param>
            <returns>Number of words.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName">
            <summary>
            Raw data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.Lexicon">
            <summary>
            Lexicon Name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.PhoneSet">
            <summary>
            PhoneSet.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.BackendPhoneSet">
            <summary>
            Backend PhoneSet.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.PosSet">
            <summary>
            PosSet.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.LexicalAttributeSchema">
            <summary>
            LexicalAttributeSchema.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.CharTable">
            <summary>
            CharTable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.SyllabifyRule">
            <summary>
            SyllabifyRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.PolyphoneRule">
            <summary>
            PolyphoneRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.SentenceDetectRule">
            <summary>
            SentenceDetectRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.QuotationMarkTable">
            <summary>
            QuotationMarkTable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.ParallelStructTable">
            <summary>
            ParallelStructTable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.WordFeatureSuffixTable">
            <summary>
            WordFeatureSuffixTable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.PhoneMappingRule">
            <summary>
            PhoneMappingRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.BackendPhoneMappingRule">
            <summary>
            Backend PhoneMappingRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.FrontendBackendPhoneMappingRule">
            <summary>
            Frontend-Backend PhoneMappingRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.MixLingualPOSConverterData">
            <summary>
            Mix lingual POS converter.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.TnRule">
            <summary>
            TnRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.FstNERule">
            <summary>
            FstNERule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.CompoundRule">
            <summary>
            CompoundRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.FrenchLiaisonRule">
            <summary>
            FrenchLiaisonRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.BoundaryPronChangeRule">
            <summary>
            BoundaryPronChangeRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.PosLexicalRule">
            <summary>
            PosLexicalRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.PosContextualRule">
            <summary>
            PosContextualRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.TruncateRule">
            <summary>
            TruncateRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.PauseLength">
            <summary>
            PauseLength.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.LtsRuleDataPath">
            <summary>
            LtsRuleDataPath.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.WordBreakerDataPath">
            <summary>
            WordBreakerDataPath.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.PostWordBreaker">
            <summary>
            PostWordBreaker.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.ChineseTone">
            <summary>
            ChineseTone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.SentenceSeparatorDataPath">
            <summary>
            SentenceSeparatorDataPath.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.LangIdentifierRule">
            <summary>
            LangIdentifierRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.ForeignLtsCollection">
            <summary>
            ForeignLtsCollection.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.WordFreqPath">
            <summary>
            Word Frequency Path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.DomainScriptFolder">
            <summary>
            Domain Script Folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.DomainListFile">
            <summary>
            Domain List File.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.ExtraDomainLexicon">
            <summary>
            Extra Domain Lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.NonPrunedWordListFile">
            <summary>
            Non Pruned Word List File.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.RegressionLexicon">
            <summary>
            Regression Lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.AcronymDisambiguation">
            <summary>
            AcronymDisambiguation rule Folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.NEDisambiguation">
            <summary>
            NEDisambiguation rule Folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.VoiceFont">
            <summary>
            Voice Font.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.ExtraDAT">
            <summary>
            Extra LangData.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.PolyphonyModel">
            <summary>
            Polyphony Disambiguation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.RNNPolyphonyModel">
            <summary>
            RNN Polyphony Disambiguation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.LanguageData.RawDataName"/> class from being created.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName">
            <summary>
            Module Data Name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.Lexicon">
            <summary>
            Lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.PhoneSet">
            <summary>
            PhoneSet.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.BackendPhoneSet">
            <summary>
            Backend PhoneSet.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.PosSet">
            <summary>
            PosSet.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.CharTable">
            <summary>
            CharTable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.SyllabifyRule">
            <summary>
            SyllabifyRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.PolyphoneRule">
            <summary>
            PolyphoneRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.SentenceDetector">
            <summary>
            SentenceDetector.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.RNNLts">
            <summary>
            Rnnlts model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.RNNPos">
            <summary>
            Rnn POS model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.QuotationMarkTable">
            <summary>
            QuotationMarkTable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.ParallelStructTable">
            <summary>
            ParallelStructTable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.WordFeatureSuffixTable">
            <summary>
            WordFeatureSuffixTable.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.FstNERule">
            <summary>
            FstNE Rule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.LtsRule">
            <summary>
            LtsRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.PhoneEventData">
            <summary>
            Phone Meta.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.PhoneMappingRule">
            <summary>
            PhoneMappingRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.BackendPhoneMappingRule">
            <summary>
            BackendPhoneMappingRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.FrontendBackendPhoneMappingRule">
            <summary>
            Frontend-BackendPhoneMappingRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.MixLingualPOSConverterData">
            <summary>
            Mix lingual POS converter.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.TnRule">
            <summary>
            TnRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.CompoundRule">
            <summary>
            CompoundRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.FrenchLiaisonRule">
            <summary>
            FrenchLiaisonRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.BoundaryPronChangeRule">
            <summary>
            BoundaryPronChangeRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.SentenceSeparator">
            <summary>
            SentenceSeparator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.WordBreaker">
            <summary>
            WordBreaker.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.PostWordBreaker">
            <summary>
            PostWordBreaker.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.CRFWordBreaker">
            <summary>
            PostWordBreaker.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.ChineseTone">
            <summary>
            ChineseTone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.PosRule">
            <summary>
            PosRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.UnitGenerator">
            <summary>
            UnitGenerator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.PosTaggerPos">
            <summary>
            PosTaggerPos.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.LangIdentifierRule">
            <summary>
            LangIdentifierRule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.ProsodyModelBR0">
            <summary>
            ProsodyModelBR0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.ProsodyModelBR2">
            <summary>
            ProsodyModelBR2.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.ProsodyModelACT">
            <summary>
            ProsodyModelACT.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.ForeignLtsCollection">
            <summary>
            ForeignLtsCollection.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.AcronymDisambiguation">
            <summary>
            ForeignLtsCollection.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.NEDisambiguation">
            <summary>
            NEDisambiguation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.PolyphonyModel">
            <summary>
            PolyphonyDisambiguation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.RNNPolyphonyModel">
            <summary>
            RNN PolyphonyDisambiguation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.CRFSentTypeDetectorModel">
            <summary>
            CRF Sentence type detector model.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.LanguageData.ModuleDataName"/> class from being created..
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.LanguageData.DataGuid">
            <summary>
            Data Guid.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LanguageData.DataGuid.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.LanguageData.DataGuid"/> class.
            </summary>
            <param name="name">Data name.</param>
            <param name="guid">Data guid.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LanguageData.DataGuid.Name">
            <summary>
            Gets or sets Name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LanguageData.DataGuid.Guid">
            <summary>
            Gets or sets Guid.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.LanguageData.LanguageDataHelper">
            <summary>
            Class of Each Language Data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.LanguageDataHelper.InternalDataGuid">
            <summary>
            Internal Data Guid information.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LanguageData.LanguageDataHelper.GetReservedGuid(System.String)">
            <summary>
            Get the reserved guid for data name.
            </summary>
            <param name="name">Data name.</param>
            <returns>Guid string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LanguageData.LanguageDataHelper.GetReservedDataName(System.String)">
            <summary>
            Get the reserved data name according to the guid.
            </summary>
            <param name="guidValue">Guid string.</param>
            <returns>Data name.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LanguageData.LanguageDataHelper.ReplaceBinaryFile(System.String,System.String,System.String)">
            <summary>
            Replace module binary in dat file.
            </summary>
            <param name="datPath">Dat file path.</param>
            <param name="binPath">Binary file path.</param>
            <param name="module">Module name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LanguageData.LanguageDataHelper.ReplaceBinaryFile(System.String,System.IO.MemoryStream,System.String)">
            <summary>
            Replace module binary in dat file.
            </summary>
            <param name="dataPath">Dat file path.</param>
            <param name="binStream">Binary file stream.</param>
            <param name="module">Module name defined in ModuleDataName class.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LanguageData.LanguageDataHelper.SortLangData(Microsoft.Tts.ServiceProvider.LangData.LangDataFile)">
            <summary>
            Sort Langugae data objects by module data name.
            </summary>
            <param name="langData">Language data file.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName">
            <summary>
            Tool Name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName.RuleCompiler">
            <summary>
            Ruler compiler.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName.BldVendor1">
            <summary>
            Overdue bldvendor.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName.BldVendor2">
            <summary>
            Bldvendor.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName.PosRuleCompiler">
            <summary>
            Pos Rule Compiler.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName.TnmlCompiler">
            <summary>
            TNML compiler.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName.FstNECompiler">
            <summary>
            FstNE compiler.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName.LtsCompiler">
            <summary>
            LTS Rule Compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.LanguageData.ToolName"/> class from being created.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.DataCompiler">
            <summary>
            Data Compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.LoadStream(System.String,System.IO.Stream)">
            <summary>
            Load Stream from file path.
            </summary>
            <param name="filePath">Path of file.</param>
            <param name="outputStream">OutputStream.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.SetLanguage(Microsoft.Tts.Offline.Language)">
            <summary>
            Set language.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.GetDataPath(System.String)">
            <summary>
            Get the Data Path according to the raw data name.
            </summary>
            <param name="name">Raw data name.</param>
            <returns>Data path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.Build(System.String,System.IO.Stream,System.Boolean,System.String)">
            <summary>
            Build the data.
            </summary>
            <param name="moduleDataName">Module data name.</param>
            <param name="outputStream">Output Stream.</param>
            <param name="isEnableValidate">Is enable data validate.</param>
            <param name="formatGuid">Format guid.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.ExistModuleData(System.String)">
            <summary>
            Whether existing the module data.
            </summary>
            <param name="moduleDataName">ModuleDataName.</param>
            <returns>True for existing.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.Compile(System.String)">
            <summary>
            Compile the module data by data name.
            </summary>
            <param name="moduleDataName">Module Data Name.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.Compile(System.String,System.String)">
            <summary>
            Compile the module data through data file path.
            </summary>
            <param name="moduleDataName">Module Data Name.</param>
            <param name="moduleDataPath">Module Data Path.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.Compile(System.String,System.String,System.String,System.String)">
            <summary>
            Compile the module data through data file path and with given guid string.
            </summary>
            <param name="moduleDataName">Module Data Name.</param>
            <param name="moduleDataPath">Module Data Path.</param>
            <param name="guidStr">Guid string.</param>
            <param name="formatGuidStr">Format guid string.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.Compile(System.String,System.IO.MemoryStream,System.String,System.String)">
            <summary>
            Compile the module data through memory stream and with given guid string.
            </summary>
            <param name="moduleDataName">Module Data Name.</param>
            <param name="memoryStream">Memory stream.</param>
            <param name="guidStr">Guid string.</param>
            <param name="formatGuidStr">Format guid string.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CombineDataFile(System.String)">
            <summary>
            Create language data file.
            </summary>
            <param name="fileName">Language data file name.</param>
            <returns>Errors.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CombineDataFile(System.String,System.String)">
            <summary>
            Create language data file.
            </summary>
            <param name="fileName">Language data file name.</param>
            <param name="domain">Domain.</param>
            <returns>Errors.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.SetObject(System.String,System.Object)">
            <summary>
            Set the object for internal usage.
            </summary>
            <param name="name">The name string.</param>
            <param name="obj">The obj objetc.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.GetObject(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the data object according to the name.
            </summary>
            <param name="name">Data name.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.ReportCompiledFiles(System.String,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            ReportComiledFiles.
            </summary>
            <param name="compileType">CompileType.</param>
            <param name="compiledFiles">CompiledFiles.</param>
            <returns>Error.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.MergeDependencyError(Microsoft.Tts.Offline.Common.ErrorSet,Microsoft.Tts.Offline.Common.ErrorSet,System.String)">
            <summary>
            Merge compiling error into main error set.
            </summary>
            <param name="mainErrorSet">Main error set.</param>
            <param name="subErrorSet">Sub error set.</param>
            <param name="dataName">Data name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.AddCompilingLog(Microsoft.Tts.Offline.Common.ErrorSet,System.String,System.String,System.Int32)">
            <summary>
            Add compiling log into error set.
            </summary>
            <param name="errorSet">Error set.</param>
            <param name="dataName">Data name.</param>
            <param name="message">Message.</param>
            <param name="exitCode">Exit code.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CheckRawDataExists(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check the file path of raw data whether existed.
            </summary>
            <param name="path">File path.</param>
            <param name="errorSet">Error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CheckToolExists(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Check the file path of tool whether existed.
            </summary>
            <param name="path">File path of tool.</param>
            <param name="errorSet">Error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.HandleCommandLine(System.String,System.String,System.String,System.String,System.IO.Stream,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Handle the command line and generate the output.
            </summary>
            <param name="processingName">Processing name.</param>
            <param name="command">Command.</param>
            <param name="arguments">Arguments.</param>
            <param name="outputPath">Output path.</param>
            <param name="outputStream">Output stream.</param>
            <param name="errorSet">Error set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.EnsureNecessaryData(System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.ServiceProvider.LangData.LangDataObject})">
            <summary>
            Ensure the necessary data is in the data objects.
            </summary>
            <param name="dataObjects">DataObjects.</param>
            <returns>Error Set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CompileForeignLtsCollection(System.String,System.IO.Stream)">
            <summary>
            Compile the foreign LTS collection.
            </summary>
            <param name="configuration">Foreign LTS configuration.</param>
            <param name="outputStream">Output steam.</param>
            <returns>Error set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CompileLexicon(System.IO.Stream)">
            <summary>
            Compile Lexicon.
            </summary>
            <param name="outputStream">Output Stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CompileLtsRule(System.String,System.IO.Stream)">
            <summary>
            Compile LTS rule.
            </summary>
            <param name="ltsDataDir">Directory of LTS data.</param>
            <param name="outputStream">Output stream.</param>
            <returns>Error Set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CompileTnml(System.String,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Tnml rule compiler.
            </summary>
            <param name="tnmlRuleFilePath">Path of Tnml rule.</param>
            <param name="schemaFilePath">Path of Lexical Attribute Schema.</param>
            <param name="outputStream">Output stream.</param>
            <param name="isTNRule">Whether it's TN rule.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CompileFstNE(System.String,System.IO.Stream)">
            <summary>
            FstNE rule compiler.
            </summary>
            <param name="fstNERuleFilePath">Path of FstNE rule.</param>
            <param name="outputStream">Output stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CompilePosRule(System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Handle the command line and generate the output.
            </summary>
            <param name="lexicalRuleFilePath">Path of POS Lexical rule.</param>
            <param name="contextualRuleFilePath">Path of POS Contectual Rule.</param>
            <param name="posSetFilePath">Path of POS set.</param>
            <param name="outputStream">Output stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CompileGeneralRule(System.String,System.IO.Stream)">
            <summary>
            General Rule Compiler.
            </summary>
            <param name="txtPath">Path of txt formatted general rule.</param>
            <param name="outputStream">Output stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataCompiler.CompileCharTable(System.IO.Stream)">
            <summary>
            Char table compiler.
            </summary>
            <param name="outputStream">Output Stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataCompiler.DataHandlerList">
            <summary>
            Gets or sets DataHandlerList.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataCompiler.ModuleDataSet">
            <summary>
            Gets ModuleDataSet contains the binary data which has been or will be generated.
            Value.Data == null means the binary data is under constructing, not available this moment.
            Value.Data != null means the binary data is built out and ready.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataCompiler.ToolDir">
            <summary>
            Gets or sets Tool Directory.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CompareLangDataObject">
            <summary>
            Use this class to sort the lang data object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CompareLangDataObject.Compare(System.Object,System.Object)">
            <summary>
            Compare the LangDataObject.
            </summary>
            <param name="x">DataObject to compare with.</param>
            <param name="y">Other dataObject to compare with.</param>
            <returns>Comparing result.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhoneConverterWrapper">
            <summary>
            A wrapper for the PhoneConverter.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.IPhoneConverter">
            <summary>
            Interface of PhoneConverter, Remove of dependency on the ServiceProvider.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.IPhoneConverter.TTS2SAPI(System.String)">
            <summary>
            Convert TTS into SAPI phones.
            </summary>
            <param name="ttsPhone">The tts phone id string.</param>
            <returns>The sapi phone id string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.IPhoneConverter.TTS2UPS(System.String)">
            <summary>
            Convert TTS into UPS phones.
            </summary>
            <param name="ttsPhone">The tts phone id string.</param>
            <returns>The ups phone id string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhoneConverterWrapper.Dispose">
            <summary>
            Disposes the resources used in this object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhoneConverterWrapper.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the RewindableTextReader.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources;
            False to release only unmanaged resources.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.DataCompilerError">
            <summary>
            FrontEndCompilerError.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.ToolNotFound">
            <summary>
            Tool not found
            Parameters: 
            {0}: tool name
            {1}: path of tool.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.RawDataNotFound">
            <summary>
            Raw data not found
            Parameters: 
            {0}: raw data name
            {1}: path of raw data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.AllDomainRawDataNotFound">
            <summary>
            All Domain Raw data not found
            Parameters: 
            {0}: raw data domain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.PathNotInitialized">
            <summary>
            Path is null or empty
            Parameters: 
            {0}: path of raw data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.InvalidModuleData">
            <summary>
            Invalid module data
            Parameters: 
            {0}: module data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.RawDataError">
            <summary>
            Raw Data Error
            Parameters: 
            {0}: raw data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.NoDomainDataInRawData">
            <summary>
            No domain data in unified raw data
            Parameters: 
            {0}: domain name
            {1}: raw data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.DependenciesNotValid">
            <summary>
            Compiling fail
            Parameters: 
            {0}: raw data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.SkipCombiningDataForGuid">
            <summary>
            Skip Combining Data For Guid
            Parameters: 
            {0}: data guid
            {1}: data path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.SkipCombiningData">
            <summary>
            Skip Combining Data
            Parameters: 
            {0}: data name
            {1}: data path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.ZeroModuleData">
            <summary>
            Zero Module Data
            Parameters: 
            {0}: data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.NecessaryDataMissing">
            <summary>
            Necessary Module Data missing
            Parameters: 
            {0}: data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.DomainDataMissing">
            <summary>
            Domain Data Missing.
            Parameters: 
            {0}: domain data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.CombinationHalt">
            <summary>
            Combination halt.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.InvalidRawData">
            <summary>
            Invalid raw data
            Parameters: 
            {0}: raw data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.DuplicateItemKey">
            <summary>
            Duplicate item key
            Parameters: 
            {0}: key name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.InvalidBinaryData">
            <summary>
            Invalid binary data.
            Parameters: 
            {0}: binary data name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.SaveBinaryFileFail">
            <summary>
            Save Binary File Fail
            {0}: data name
            {1}: reason.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.CompositeCompilingFail">
            <summary>
            Composite Compiling Fail
            {0}: data name
            {1}: reason.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.CompilingLogWithDataName">
            <summary>
            Compiling Log With Data Name
            Parameters: 
            {0}: data name
            {1}: detail log.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.CompilingLog">
            <summary>
            Compiling Log.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.CompilingLogWithError">
            <summary>
            Compiling Log with error
            Parameters: 
            {0}: data name
            {1}: detail log.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.CompilingLogWithWarning">
            <summary>
            Compiling Log with warning
            Parameters: 
            {0}: data name
            {1}: detail log.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataCompilerError.InvalidGuidString">
            <summary>
            Invalid Guid string
            Parameters: 
            {0}: data name
            {1}: Guid string
            {2}: detail error message.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment">
            <summary>
            LangDataCompiler Environment.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment"/> class.
            </summary>
            <param name="name">The name string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.ValidateArguments">
            <summary>
            The abstract method ValidateArguments() will be called to perform the validation
            For the inputs of this handler.
            This method won't be called if this handler is disabled.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.Execute">
            <summary>
            The abstract method Execute() will be called to perform the action of this handler.
            This method won't be called if this handler is disabled.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.ValidateResults(System.Boolean)">
            <summary>
            The abstract method ValidateResults() will be used to fill result generated by this handler
            After Execute().
            This method will be called whenever this handler is disabled or not.
            </summary>
            <param name="enable">Indicator to whether flow is enabled.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.InCompiler">
            <summary>
            Sets Compiler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.InSetCompilerLexicon">
            <summary>
            Gets or sets Compiler Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.InSetOutLexiconPath">
            <summary>
            Gets or sets Out Lexicon Path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutCompilerLexicon">
            <summary>
            Gets Output Compiler Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutCompiler">
            <summary>
            Gets Output Compiler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutLexicon">
            <summary>
            Gets Output Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutCaseInsensitiveLexicon">
            <summary>
            Gets Case insensitive lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutWordFreqPath">
            <summary>
            Gets Output Word Frequency File Path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutPhoneSet">
            <summary>
            Gets Output Phone Set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutAttribSchema">
            <summary>
            Gets Output Attrib Schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutDomainScriptFolder">
            <summary>
            Gets Output Domain Script Folder.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutDomainListFile">
            <summary>
            Gets Output Domain List File.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutExtraDomainLexicon">
            <summary>
            Gets Output Extra Domain Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutRegressionLexicon">
            <summary>
            Gets Output Regression Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutNotPrunedWordListFile">
            <summary>
            Gets Output Not Pruned Word List File.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutVoiceFont">
            <summary>
            Gets Output Voice Font Path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutExtraDAT">
            <summary>
            Gets Output Extra LangData path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutTnRuleFile">
            <summary>
            Gets Output Tn Rule File.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutCharTableFile">
            <summary>
            Gets Output Chartable File.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.LangDataCompilerEnvironment.OutWorkingDirectory">
            <summary>
            Gets Working Directory.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.LexiconData">
            <summary>
            Lexicon Data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.DataHandler">
            <summary>
            Data handler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.DataHandler"/> class.
            </summary>
            <param name="name">Name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandler.SetLanguage(Microsoft.Tts.Offline.Language)">
            <summary>
            Set the language.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandler.GetObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandler.SetObject(System.Object)">
            <summary>
            Set the object.
            </summary>
            <param name="obj">Object.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandler.LoadDataObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load data object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>Data object.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataHandler.Language">
            <summary>
            Gets Language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataHandler.Name">
            <summary>
            Gets Data Name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataHandler.Path">
            <summary>
            Gets or sets Raw Data Path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataHandler.RelativePath">
            <summary>
            Gets or sets Data relative path.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LexiconData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.LexiconData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LexiconData.LoadDataObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load Lexicon Data object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>Lexicon Data object.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.ExtraDomainLexiconData">
            <summary>
            Lexicon Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.ExtraDomainLexiconData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.ExtraDomainLexiconData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.ExtraDomainLexiconData.LoadDataObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load Lexicon Data object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>Lexicon Data object.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.RegressionLexiconData">
            <summary>
            Lexicon Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.RegressionLexiconData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.RegressionLexiconData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.RegressionLexiconData.LoadDataObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load Lexicon Data object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>Lexicon Data object.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.SchemaData">
            <summary>
            Lexical Attribute Schema Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SchemaData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.SchemaData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SchemaData.LoadDataObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load Lexicon Attribute Schema Data object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>Lexicon Attribute Schema Data object.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PosSetData">
            <summary>
            POS set Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosSetData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PosSetData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosSetData.LoadDataObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load POS Set Data object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>POS Set Data object.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhoneSetData">
            <summary>
            Phone set Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhoneSetData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PhoneSetData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhoneSetData.LoadDataObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load Phone set Data object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>Phone set Data object.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.BackendPhoneSetData">
            <summary>
            Backend Phone set Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.BackendPhoneSetData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.BackendPhoneSetData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.BackendPhoneSetData.LoadDataObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load Phone set Data object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>Phone set Data object.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CharTableData">
            <summary>
            Char table Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CharTableData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.CharTableData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CharTableData.LoadDataObject(Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Load Char table Data object.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <returns>Char table Data object.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.SyllabifyRuleData">
            <summary>
            Syllabify rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SyllabifyRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.SyllabifyRuleData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.TruncateRuleData">
            <summary>
            Truncate rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.TruncateRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.TruncateRuleData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PauseLengthData">
            <summary>
            Pause length Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PauseLengthData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PauseLengthData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PolyphoneRuleData">
            <summary>
            Polyphone rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PolyphoneRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PolyphoneRuleData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.BoundaryPronChangeRuleData">
            <summary>
            BoundaryPronChange Rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.BoundaryPronChangeRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.BoundaryPronChangeRuleData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.SentenceDetectData">
            <summary>
            Sentence detect rule data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SentenceDetectData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.SentenceDetectData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.QuotationDetectorData">
            <summary>
            Sentence detect rule data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.QuotationDetectorData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.QuotationDetectorData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.ParallelStructDetectorData">
            <summary>
            Sentence detect rule data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.ParallelStructDetectorData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.ParallelStructDetectorData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.TextRegularizerData">
            <summary>
            Sentence detect rule data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.TextRegularizerData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.TextRegularizerData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.LtsRuleDataPath">
            <summary>
            LTS rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.LtsRuleDataPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.LtsRuleDataPath"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhoneMappingRuleData">
            <summary>
            SSML phone mapping Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhoneMappingRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PhoneMappingRuleData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.BackendPhoneMappingRuleData">
            <summary>
            Backend SSML phone mapping Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.BackendPhoneMappingRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.BackendPhoneMappingRuleData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.FrontendBackendPhoneMappingRuleData">
            <summary>
            Froneend-Backend phone mapping Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.FrontendBackendPhoneMappingRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.FrontendBackendPhoneMappingRuleData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.MixLingualPOSConverterData">
            <summary>
            Mix lingual pos converer data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.MixLingualPOSConverterData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.MixLingualPOSConverterData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.WordBreakerDataPath">
            <summary>
            Word Breaker data Path.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordBreakerDataPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.WordBreakerDataPath"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PostWordBreakerData">
            <summary>
            Post Word Breaker data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PostWordBreakerData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PostWordBreakerData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.ChineseToneData">
            <summary>
            Neutral Pattern List Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.ChineseToneData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.ChineseToneData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.SentenceSeparatorDataPath">
            <summary>
            Sentence Separator data Path.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SentenceSeparatorDataPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.SentenceSeparatorDataPath"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PosLexicalRuleData">
            <summary>
            POS Lexical Rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosLexicalRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PosLexicalRuleData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosLexicalRuleData.SetLanguage(Microsoft.Tts.Offline.Language)">
            <summary>
            Set the language .
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PosContextualRuleData">
            <summary>
            POS Contectual Rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosContextualRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PosContextualRuleData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PosContextualRuleData.SetLanguage(Microsoft.Tts.Offline.Language)">
            <summary>
            Set the language .
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.TnRuleData">
            <summary>
            TN Rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.TnRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.TnRuleData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.TnRuleData.SetLanguage(Microsoft.Tts.Offline.Language)">
            <summary>
            Set the language .
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.FstNERuleData">
            <summary>
            FstNE Rule Data
            Currently it use the same raw data as TnRuleData.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.FstNERuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.FstNERuleData"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.FstNERuleData.SetLanguage(Microsoft.Tts.Offline.Language)">
            <summary>
            Set the language. 
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.CompoundRuleData">
            <summary>
            Compound Rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.CompoundRuleData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.CompoundRuleData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.ForeignLtsCollection">
            <summary>
            Compound Rule Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.ForeignLtsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.ForeignLtsCollection"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.WordFrequencyData">
            <summary>
            Word Frequency Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordFrequencyData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.WordFrequencyData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.DomainListFileData">
            <summary>
            Domain List File Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DomainListFileData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.DomainListFileData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.DomainScriptFolderData">
            <summary>
            Domain Script Folder Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DomainScriptFolderData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.DomainScriptFolderData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.NonPrunedWordListFileData">
            <summary>
            Non Pruned Word List File Data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.NonPrunedWordListFileData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.NonPrunedWordListFileData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.AcronymDisambiguationData">
            <summary>
            AcronymDisambiguation data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.AcronymDisambiguationData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.AcronymDisambiguationData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.NEDisambiguationData">
            <summary>
            NEDisambiguation data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.NEDisambiguationData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.NEDisambiguationData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.VoiceFontData">
            <summary>
            Voice Font.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.VoiceFontData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.VoiceFontData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.ExtraDATData">
            <summary>
            Extra LangData.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.ExtraDATData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.ExtraDATData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PolyphonyModelData">
            <summary>
            PolyphonyModelData.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PolyphonyModelData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.PolyphonyModelData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.RNNPolyphonyModelData">
            <summary>
            RNN PolyphonyModelData.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.RNNPolyphonyModelData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.RNNPolyphonyModelData"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.DataHandlerList">
            <summary>
            DataHandlerList class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandlerList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.DataHandlerList"/> class.
            </summary>
            <param name="domain">Domain.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandlerList.SetLanguage(Microsoft.Tts.Offline.Language)">
            <summary>
            Set language.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandlerList.PrepareDataPath(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Prepare all data path.
            </summary>
            <param name="rawRootDir">RawRootDir.</param>
            <param name="rawDataList">RawDataList.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandlerList.SetObject(System.String,System.Object)">
            <summary>
            Set the object for internal usage.
            </summary>
            <param name="name">The name string.</param>
            <param name="obj">The obj objetc.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandlerList.Initialize">
            <summary>
            Initialize all the data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandlerList.GetObject(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Get the data object according to the name.
            </summary>
            <param name="name">Data name.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>Error.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandlerList.SetDataDir(System.String)">
            <summary>
            Set the data directory and also set the data directory for all data.
            </summary>
            <param name="dataDir">Data directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataHandlerList.SetRawDataPath(System.String,System.String)">
            <summary>
            SetRawDataPath.
            </summary>
            <param name="rawDataName">RawDataName.</param>
            <param name="path">Path.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataHandlerList.Datas">
            <summary>
            Gets Datas.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataHandlerList.DataRoot">
            <summary>
            Gets or sets Data root dir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Compiler.DataHandlerList.Domain">
            <summary>
            Gets Domain of the handler list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.DataFileError">
            <summary>
            Word entry error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.DataFileError.InvalidPhoneInPron">
            <summary>
            Invalid pronunciation in compound rule file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.DataFileValidator">
            <summary>
            DataFileValidator.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataFileValidator.ValidateCompoundRule(System.String,Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Validate compound rule file.
            </summary>
            <param name="filePath">Compound rule file path.</param>
            <param name="phoneset">TTS phone set.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.DataFileValidator.ValidateCompoundRuleNodePron(System.String,Microsoft.Tts.Offline.TtsPhoneSet,System.Int32,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            Validate compound rule node pronunciation.
            </summary>
            <param name="outElementValue">OutElementValue.</param>
            <param name="phoneset">TtsPhoneSet.</param>
            <param name="lineNumber">LineNumber.</param>
            <param name="errorSet">ErrorSet.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.QuotationMarkCompilerError">
            <summary>
            Quotation Mark Compiler Error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.QuotationMarkCompilerError.EmptyData">
            <summary>
            Empty Data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.QuotationMarkCompilerError.DuplicateSymbol">
            <summary>
            Duplicate Symbol.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.QuotationMarkCompiler">
            <summary>
            CharTable compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.QuotationMarkCompiler.#ctor">
            <summary>
            Prevents a default instance of the QuotationMarkCompiler class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.QuotationMarkCompiler.Compile(Microsoft.Tts.Offline.QuotationMarkTable,System.IO.Stream)">
            <summary>
            Compiles quotation mark table into binary stream.
            </summary>
            <param name="quoteTable">The instance of quotation mark table.</param>
            <param name="outputStream">The instance of output binary stream.</param>
            <returns>Any error found during the compilation.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhoneEventCompilerError">
            <summary>
            Phone Event Data Compiler Error definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.PhoneEventCompilerError.InvalidPhoneSet">
            <summary>
            Invalid Phone Set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.PhoneEventCompiler">
            <summary>
            Phone Event Data Compiler.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.PhoneEventCompiler.MAX_SAPI_PHONE_PER_TTS">
            <summary>
            For a TTS phone, the maximum number of SAPI phone mapped.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.PhoneEventCompiler.MAX_UPS_PHONE_PER_TTS">
            <summary>
            For a TTS phone, the maximum number of ups phone mapped.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.PhoneEventCompiler.VISEME_0">
            <summary>
            Ups id for "+" symbol.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.PhoneEventCompiler.visemeMap">
            <summary>
            UPS viseme map.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.PhoneEventCompiler.Compile(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Compiler.IPhoneConverter,System.IO.Stream)">
            <summary>
            Compiler entrance.
            </summary>
            <param name="phoneSet">Phone set object.</param>
            <param name="phoneConverter">PhoneConverter.</param>
            <param name="outputStream">Output stream.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.CsvRow">
            <summary>
            CSV row definition.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.CsvRow.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the CsvRow class.
            </summary>
            <param name="columnCount">Column count of the CSV file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.CsvRow.ToString">
            <summary>
            String value of this row.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.CsvRow.Items">
            <summary>
            Gets column items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.CsvRow.Item(System.Int32)">
            <summary>
            Gets or sets column item value.
            </summary>
            <param name="columnIndex">Column index.</param>
            <returns>Column cell value.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.CsvFile">
            <summary>
            CSV file definition.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.CsvFile.MaxRowCount">
            <summary>
            CSV file max row count.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.CsvFile.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the CsvFile class.
            </summary>
            <param name="columnCount">Column count of the CSV file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.CsvFile.Save(System.String)">
            <summary>
            Save CSV file.
            </summary>
            <param name="filePath">File path.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.CsvFile.ColumnDelimeter">
            <summary>
            Gets CSV file column delimeter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.CsvFile.Encoding">
            <summary>
            Gets encoding of the CSV file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.CsvFile.ColumnCount">
            <summary>
            Gets column count of the CSV file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.CsvFile.Rows">
            <summary>
            Gets rows of the CSV file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.CsvFile.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets value to CSV file.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="columnIndex">Column index.</param>
            <returns>Cell value.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelHelper">
            <summary>
            Class of ExcelHelper.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelHelper._fileName">
            <summary>
            Excel application.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelHelper"/> class.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.SelectCell(Microsoft.Office.Interop.Excel._Worksheet,System.Int32,System.Int32)">
            <summary>
            Select cell from a sheet.
            </summary>
            <param name="sheet">Sheet.</param>
            <param name="rowIndex">Row index.</param>
            <param name="columnIndex">Column index.</param>
            <returns>Cell.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.GetRange(Microsoft.Office.Interop.Excel._Worksheet,System.Object,System.Object)">
            <summary>
            Get range from a sheet.
            </summary>
            <param name="sheet">Sheet.</param>
            <param name="leftCell">Left cell.</param>
            <param name="rightCell">Right cell.</param>
            <returns>Range.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.CreateExcelFile">
            <summary>
            Create excel file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.AddNewSheet(System.String,Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent)">
            <summary>
            Create new sheet in currently active workbook.
            </summary>
            <param name="strSheetName">The sheet name.</param>
            <param name="sheetContent">The sheet content.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.SaveExcel">
            <summary>
            Save excel workbook.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.CloseExcel">
            <summary>
            Close workbook and quit excel.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.Dispose">
            <summary>
            Dispose resources.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.Dispose(System.Boolean)">
            <summary>
            Dispose resources.
            </summary>
            <param name="disposing">Explicit dispose.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.GetColumnIndex(System.Int32)">
            <summary>
            Get column index by integer index.
            </summary>
            <param name="index">The integer index.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.DrawChartOnSheet(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Draw chart for a specific sheet (specifically, distribution chart or similar chart)
            Format of the cell:
                Column 1:  the X asix name + X asix values
                Column 2 ... finalColumnIndex:  The Y asix name + Y asix values.
            </summary>
            <param name="chartTitle">The title of the chart.</param>
            <param name="categoryTitle">The category title.</param>
            <param name="valueTitle">The value title.</param>
            <param name="seriesNum">The number of the serieses.</param>
            <param name="finalRawIndex">The final raw index.</param>
            <param name="finalCoumnIndex">The final column index.</param>
            <param name="finalCellIndex">The final cell index.</param>
            <param name="seriesNames">The names of the series.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.SetColoredTextScript(Microsoft.Office.Interop.Excel.Range,Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript)">
            <summary>
            Highlight specific text segement .
            </summary>
            <param name="cell">The cell to work on.</param>
            <param name="coloredScript">The colored script.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelHelper.SetHyperlinks(Microsoft.Office.Interop.Excel.Range,Microsoft.Tts.Offline.Office.ExcelReporter.Hyperlink)">
            <summary>
            Set hyperlinks.
            </summary>
            <param name="cell">The cell to work on.</param>
            <param name="hyperlink">The hyperlinks to be associated in the given cell.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelHelper.FileName">
            <summary>
            Gets or sets File name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelHelper.Workbook">
            <summary>
            Gets or sets Work book of Excel.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter">
            <summary>
            This class do Excel reporting.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter._filename">
            <summary>
            The title of the report content.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter._sheetItems">
            <summary>
            Excel sheet items.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter"/> class.
            </summary>
            <param name="filename">The specified file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.#ctor(System.String,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter"/> class.
            </summary>
            <param name="filename">The specified file name.</param>
            <param name="sheetItems">The sheet items.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.AddSheetItem(Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent)">
            <summary>
            Add normal sheet item to the report content.
            </summary>
            <param name="sheetItem">The sheet item to be added.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.InsertSheetItem(System.Int32,Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent)">
            <summary>
            Insert a sheet item to a particular position.
            </summary>
            <param name="index">The position to insert.</param>
            <param name="sheetItem">The sheet item to be inserted.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.AddDistributionSheetItem``1(System.String,System.String,System.String,System.Collections.Generic.Dictionary{``0,System.Double})">
            <summary>
            Add distribution sheet item to the report content.
            </summary>
            <typeparam name="T">The type of the distribution X Axis data, can be int, double, etc.</typeparam>
            <param name="sheetTitle">The sheet title.</param>
            <param name="xAxisTitle">The X Axis Title.</param>
            <param name="yAxisTitle">The Y Axis Title.</param>
            <param name="distribution">The distribution.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.AddDistributionSheetItem``1(System.String,System.String,System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.Collections.Generic.Dictionary{``0,System.Double}})">
            <summary>
            Add distribution sheet item to the report content.
            </summary>
            <typeparam name="T">The type of the distribution X Axis data, can be int, double, etc.</typeparam>
            <param name="sheetTitle">The sheet title.</param>
            <param name="xAxisTitle">The X Axis Title.</param>
            <param name="yAxisTitles">The Y Axis Titles.</param>
            <param name="distributions">The distributions.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.RemoveSheetItem(System.Int32)">
            <summary>
            Remove an existing sheet item from the report content.
            </summary>
            <param name="index">The index of the sheet item to be removed.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.Report">
            <summary>
            Report all the content to the excel file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.FileName">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.SheetItems">
            <summary>
            Gets sheet items.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter.Width">
            <summary>
            For Excel formatting
            The enum is used to define the column width.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.Width.AutoFit">
            <summary>
            Do AutoFit.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.Width.Narrow">
            <summary>
            Set the width to 50.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.Width.Medium">
            <summary>
            Set the width to 100.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.Width.Wide">
            <summary>
            Set the width to 150.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter.Height">
            <summary>
            For Excel formatting
            The enum is used to define the row height.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.Height.Short">
            <summary>
            Set the height to 18.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.Height.Medium">
            <summary>
            Set the height to 28.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.Height.Tall">
            <summary>
            Set the height to 38.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter.TextColor">
            <summary>
            The enum for text color.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.TextColor.Black">
            <summary>
            The color index for Black in Excel is 1.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.TextColor.Red">
            <summary>
            The color index for Red in Excel is 3.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.TextColor.Yellow">
            <summary>
            The color index for Yellow in Excel is 6.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.TextColor.Orange">
            <summary>
            The color index for Orange in Excel is 46.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode">
            <summary>
            This enum contains the customized type codes.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode.Empty">
            <summary>
            Empty.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode.Boolean">
            <summary>
            Boolean.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode.Double">
            <summary>
            Double.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode.Single">
            <summary>
            Float.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode.Integer">
            <summary>
            Integer, include short, long.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode.UnsignedInteger">
            <summary>
            Unsigned integer, include unsigned short, unsigned long.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode.String">
            <summary>
            String.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode.ColoredScript">
            <summary>
            Colored script.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode.HyperLink">
            <summary>
            File hyper links.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredTextSegment">
            <summary>
            This struct represent a segment with color setting in a text script.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredTextSegment.Text">
            <summary>
            The text string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredTextSegment.StartIndex">
            <summary>
            The start index of the segment.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredTextSegment.Length">
            <summary>
            The length of the segment.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredTextSegment.Color">
            <summary>
            The color setting of the segment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter.Hyperlink">
            <summary>
            This struct stores a simple hyperlink.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.Hyperlink.TextToDisplay">
            <summary>
            Text string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.Hyperlink.Address">
            <summary>
            The color settings.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript">
            <summary>
            This class stores colored text script for EXCEL output.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript._text">
            <summary>
            Text string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript._coloredTextSegments">
            <summary>
            The color settings.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript"/> class.
            </summary>
            <param name="text">The text string.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript.#ctor(System.String,System.Collections.Generic.List{Microsoft.Tts.Offline.Office.ExcelReporter.ColoredTextSegment})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript"/> class.
            </summary>
            <param name="text">The text string.</param>
            <param name="coloredTextSegments">The colored text segment.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript.AddColoredTextSegment(System.String,System.Int32,System.Int32,Microsoft.Tts.Offline.Office.ExcelReporter.TextColor)">
            <summary>
            Add a colored text segment.
            </summary>
            <param name="text">The text of the segment.</param>
            <param name="startIndex">The start index.</param>
            <param name="length">The length of the colored text.</param>
            <param name="color">The exact color.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript.AddColoredTextSegment(Microsoft.Tts.Offline.Office.ExcelReporter.ColoredTextSegment)">
            <summary>
            Add a colored text segment.
            </summary>
            <param name="segment">The colored text segment to be added.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript.AppendColoredScript(Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript)">
            <summary>
            Append another colored script.
            </summary>
            <param name="coloredScriptToAppend">The colored script to be appended.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript.Text">
            <summary>
            Gets or sets Text string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.ColoredScript.ColoredTextSegments">
            <summary>
            Gets the colored text segments.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent">
            <summary>
            This class stores all the report content of a column.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent._title">
            <summary>
            The title of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent._width">
            <summary>
            The column width setting.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent._warpText">
            <summary>
            Whether to warp script.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent._type">
            <summary>
            Column content data type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent._columnData">
            <summary>
            The data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent.#ctor(System.String,Microsoft.Tts.Offline.Office.ExcelReporter.Width,Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent"/> class.
            </summary>
            <param name="title">The column title.</param>
            <param name="width">The column width setting.</param>
            <param name="type">The content type.</param>
            <param name="warpText">Whether to warp text.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent.#ctor(System.String,Microsoft.Tts.Offline.Office.ExcelReporter.Width,Microsoft.Tts.Offline.Office.ExcelReporter.ContentTypeCode,System.Boolean,System.Collections.ObjectModel.Collection{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent"/> class.
            </summary>
            <param name="title">The column title.</param>
            <param name="width">The column width setting.</param>
            <param name="type">The content type.</param>
            <param name="warpText">Whether to warp text.</param>
            <param name="data">The data collection.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent.Title">
            <summary>
            Gets The title of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent.Width">
            <summary>
            Gets The column width setting.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent.Type">
            <summary>
            Gets The content data type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent.WarpText">
            <summary>
            Gets a value indicating whether to warp text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent.RecordCollection">
            <summary>
            Gets The record collection.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent.RecordCount">
            <summary>
            Gets The record count.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent">
            <summary>
            This class stores all the content of a sheet.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent._title">
            <summary>
            The title of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent._drawChart">
            <summary>
            Whether to draw chart for the sheets.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent._columns">
            <summary>
            Content of the columns.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent._rowHeight">
            <summary>
            The row height setting.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent"/> class.
            </summary>
            <param name="title">The title of the sheet.</param>
            <param name="drawChart">Whether to draw a chart for the sheet.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent.#ctor(System.String,System.Boolean,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent"/> class.
            </summary>
            <param name="title">The title of the sheet.</param>
            <param name="drawChart">Whether to draw a chart for the sheet.</param>
            <param name="columns">The column contents.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent.#ctor(System.String,System.Boolean,Microsoft.Tts.Offline.Office.ExcelReporter.Height,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.Office.ExcelReporter.ColumnContent})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent"/> class.
            </summary>
            <param name="title">The title of the sheet.</param>
            <param name="drawChart">Whether to draw a chart for the sheet.</param>
            <param name="rowHeight">The height setting of the sheet.</param>
            <param name="columns">The column contents.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent.Title">
            <summary>
            Gets The title of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent.DrawChart">
            <summary>
            Gets a value indicating whether to draw chart for the sheets.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent.Columns">
            <summary>
            Gets The column content.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Office.ExcelReporter.SheetContent.RowHeight">
            <summary>
            Gets the row height.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.ParallelStructCompilerError">
            <summary>
            Parallel Struct Table Compiler Error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.ParallelStructCompilerError.InvalidPOSString">
            <summary>
            Invalid POS string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.ParallelStructCompilerError.EmptyData">
            <summary>
            Empty Data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.WordData">
            <summary>
            Pos Data Structure.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordData.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.WordData"/> struct.
            </summary>
            <param name="text">Word text.</param>
            <param name="pos">Word POS.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.ParallelStructCompiler">
            <summary>
            CharTable compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.ParallelStructCompiler.#ctor">
            <summary>
            Prevents a default instance of the ParallelStructCompiler class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.ParallelStructCompiler.Compile(Microsoft.Tts.Offline.ParallelStructTable,Microsoft.Tts.Offline.TtsPosSet,System.IO.Stream)">
            <summary>
            Compiles parallel struct table into binary stream.
            </summary>
            <param name="parallelStructTable">The instance of parallel struct table.</param>
            <param name="posSet">The pos set .</param>
            <param name="outputStream">The instance of output binary stream.</param>
            <returns>Any error found during the compilation.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.WordFeatureSuffixCompilerError">
            <summary>
            Word Feature Suffix Compiler Error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Compiler.WordFeatureSuffixCompilerError.EmptyData">
            <summary>
            Empty Data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.SuffixData">
            <summary>
            Data Structure.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.SuffixData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Compiler.SuffixData"/> struct.
            </summary>
            <param name="text">Word text.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Compiler.WordFeatureSuffixCompiler">
            <summary>
            CharTable compiler.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordFeatureSuffixCompiler.#ctor">
            <summary>
            Prevents a default instance of the WordFeatureSuffixCompiler class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Compiler.WordFeatureSuffixCompiler.Compile(Microsoft.Tts.Offline.WordFeatureSuffixTable,System.IO.Stream)">
            <summary>
            Compiles suffix table into binary stream.
            </summary>
            <param name="wordFeatureSuffixTable">The instance of suffix table.</param>
            <param name="outputStream">The instance of output binary stream.</param>
            <returns>Any error found during the compilation.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Plugin.PluginMonitor">
            <summary>
            Plug-in monitor.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Plugin.PluginMonitor.FindPlugins(System.Type,System.String)">
            <summary>
            Look up plug-ins in a folder.
            </summary>
            <param name="type">Interface type.</param>
            <param name="pluginFolderPath">Plug-in folder path.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Plugin.PluginMonitor.RegisteredPlugins">
            <summary>
            Gets registered plugins.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Plugin.PluginAttribute">
            <summary>
            Plug-in attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Plugin.PluginAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Plugin.PluginAttribute"/> class.
            </summary>
            <param name="name">Plug-in name.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Plugin.PluginAttribute.Name">
            <summary>
            Gets plug-in name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Plugin.PluginAttribute.VersionTag">
            <summary>
            Gets or sets version.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Plugin.PluginAttribute.Version">
            <summary>
            Gets version.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Plugin.PluginAttribute.Publisher">
            <summary>
            Gets or sets publisher.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.DataSection">
            <summary>
            Data section definition.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DataSection.Lines">
            <summary>
            Gets String lines of this data section.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DataSection.Cumulation">
            <summary>
            Gets or sets Cumulation.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DataSection.Number">
            <summary>
            Gets or sets Number of this data section.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.DataSection.Name">
            <summary>
            Gets or sets Label of this data section.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.PhoneMerger">
            <summary>
            Class to merge phones into bigger level slices/units
            Note: For XML script, the unit boundary is tagged in the word's "p"(pronunciation) attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.#ctor(Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.SliceData,Microsoft.Tts.Offline.TruncateRuleData)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.PhoneMerger"/> class.
            </summary>
            <param name="phoneSet">Phone set.</param>
            <param name="sliceData">Slice data.</param>
            <param name="truncRule">Truncate rule data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.RemoveSliceBoundary(System.String,System.String)">
            <summary>
            Remove all slice boundaries in the source script file
            And save it to target script file.
            </summary>
            <param name="sourceScriptFilePath">Source script file.</param>
            <param name="targetScriptFilePath">Target script file.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.SetVowelStress(Microsoft.Tts.Offline.Phoneme,System.String,Microsoft.Tts.Offline.TtsStress)">
            <summary>
            Set nucleus vowel stress mark.
            </summary>
            <param name="phoneme">Phoneme of the language to process.</param>
            <param name="pronunciation">Pronunciation to set pronunciation.</param>
            <param name="stress">Stress mark to set for the vowel in the pronunciation.</param>
            <returns>Pronunciation with stress.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.TruncateOnePhoneFromNucleus(Microsoft.Tts.Offline.Phoneme,System.Collections.ObjectModel.Collection{Microsoft.Tts.Offline.TruncateRule},System.String)">
            <summary>
            Truncate one phone from nucleus.
            </summary>
            <param name="phoneme">Phoneme of the language to process.</param>
            <param name="rules">Truncation rules.</param>
            <param name="nucleus">CVC source to truncate.</param>
            <returns>Result: left part + right part.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.RewritePhones2Units(Microsoft.Tts.Offline.SliceData,System.String)">
            <summary>
            Format phone string in Word to slice string.
            </summary>
            <param name="sliceData">Slice data.</param>
            <param name="wordPron">Word pronunciation to convert.</param>
            <returns>Word pronunciation string in slice.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.BuildUnits(Microsoft.Tts.Offline.Phoneme,Microsoft.Tts.Offline.SliceData,System.String)">
            <summary>
            Build units for syllbale pronunciation,
            And the units are concatenated together in the string and seperated by ".".
            </summary>
            <param name="phoneme">Phoneme of the language to process with.</param>
            <param name="sliceData">Slice data to process.</param>
            <param name="syllable">Syllables to process.</param>
            <returns>Best unit list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.Slice(Microsoft.Tts.Offline.XmlScriptFile)">
            <summary>
            Slice the pronunciation of each script item in the script file.
            </summary>
            <param name="script">Script file to slice.</param>
            <returns>Data error found during the slicing.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.Slice(System.String,System.String)">
            <summary>
            Slice the pronunciation of one script file.
            </summary>
            <param name="scriptFilePath">Source file.</param>
            <param name="targetFilePath">Target file.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.SliceWord(Microsoft.Tts.Offline.ScriptWord)">
            <summary>
            Syllabify one tts word entry.
            </summary>
            <param name="word">Word to syllabify.</param>
            <returns>Sliced word pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.Slice(Microsoft.Tts.Offline.ScriptItem)">
            <summary>
            Slice pronunciation of one script entry into sliced units.
            </summary>
            <param name="item">Entry to generate slices.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.PhoneMerger.BuildCodaUnits(Microsoft.Tts.Offline.SliceData,Microsoft.Tts.Offline.TtsMetaPhone[],System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Build coda units from the phone list.
            </summary>
            <param name="sliceData">Slice data.</param>
            <param name="phones">Phones to process.</param>
            <param name="codaOffset">The offset of the first phone in coda group.</param>
            <param name="slicedUnits">Unit container to append result coda units.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.PhoneMerger.SliceData">
            <summary>
            Gets Slice data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.UI.IProgressReporter">
            <summary>
            Report progress interface.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.IProgressReporter.OnProgressChanged(System.String,System.Int32)">
            <summary>
            On progress changed.
            </summary>
            <param name="text">Progress message.</param>
            <param name="progressPercentage">Progress percentage, range from 0 to 100.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.UI.ConsoleProgressReporter">
            <summary>
            Console progress reporter.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.ConsoleProgressReporter.OnProgressChanged(System.String,System.Int32)">
            <summary>
            On progress changed.
            </summary>
            <param name="text">Progress message.</param>
            <param name="progressPercentage">Progress percentage, range from 0 to 100.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.UI.UIError">
            <summary>
            UI(User interface) error: including Console and WinForm Application.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.UI.UIError.ErrorLanguageString">
            <summary>
            Error language string.
            {0} : Error language string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.UI.UIError.ErrorLanguageDataFile">
            <summary>
            Error language data file.
            {0} : Language the data file should be.
            {1} : File type of the language data file like: "phoneset.xml".
            {2} : Language of the data file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.UI.UIHelper">
            <summary>
            UI helper class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.UI.UIHelper.ContextMenuStripOffset">
            <summary>
            Context menu script Y offset.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.UI.UIHelper._unicodeControlCharsValue">
            <summary>
            Remove unicode control chars from user input.
            #PS12537.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.RemoveUnicodeControlChars(System.String)">
            <summary>
            Remove unicode control chars from user input.
            </summary>
            <param name="source">User input from UI.</param>
            <returns>Cleaned string without unicode control char.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.ValidateLanguageString(System.String)">
            <summary>
            Validate language string.
            </summary>
            <param name="languageStr">Language string.</param>
            <returns>Whether the language string is valid.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.ReportArgumentError(System.String,System.Object)">
            <summary>
            Report argument error.
            </summary>
            <param name="errorMessage">Error message.</param>
            <param name="target">Argument object.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.HandleArgumentException(System.Exception,System.Object)">
            <summary>
            Handle exception of commandline parser in UI application.
            </summary>
            <param name="exception">Exception.</param>
            <param name="target">Target object to reflect usage information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.ReportMessage(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Report error set in UI Application.
            </summary>
            <param name="owner">Error report form owner.</param>
            <param name="title">Error report form title.</param>
            <param name="message">Message to be reported.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.HandleApplicationThreadException(System.Object,System.Threading.ThreadExceptionEventArgs)">
            <summary>
            Process main form exception message.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.ValidateFileExist(System.String)">
            <summary>
            Validate file exist.
            </summary>
            <param name="filePath">File path need validated.</param>
            <returns>Whether file exists.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.ValidateFileExist(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Validate whether file exists.
            </summary>
            <param name="owner">Error message box owner.</param>
            <param name="label">Label presentes file tyep.</param>
            <param name="filePath">File path to be validate.</param>
            <returns>Whether the file existing.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.ValidateNotEmptyString(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Validate whether it is empty string.
            </summary>
            <param name="owner">MessageBox owner.</param>
            <param name="label">Label for message information.</param>
            <param name="text">String for validation.</param>
            <returns>Whether the text is not empty.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.ApplicationTitle(System.String)">
            <summary>
            Get UI application's title.
            </summary>
            <param name="filePath">If the application need load a file, show the file name in title.</param>
            <returns>Application's title.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.EnsureFileWrittable(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Test whether .
            </summary>
            <param name="owner">MessageBox owner, null if don't need show the MessageBox.</param>
            <param name="filePath">File path to be tested.</param>
            <returns>Whether the file is writtable.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.EnsureFileWrittable(System.Windows.Forms.IWin32Window,System.String,System.String,System.String)">
            <summary>
            Test whether .
            </summary>
            <param name="owner">MessageBox owner, null if don't need show the MessageBox.</param>
            <param name="filePath">File path to be tested.</param>
            <param name="title">Promote title.</param>
            <param name="message">Message.</param>
            <returns>Whether the file is writtable.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.SetToScreenCenter(System.Windows.Forms.Control)">
            <summary>
            Set form to the center of the screen.
            </summary>
            <param name="form">Form to set location.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UI.UIHelper.CleanControlList(System.Collections.Generic.List{System.Windows.Forms.Control})">
            <summary>
            Clear control list.
            </summary>
            <param name="controlList">Control list.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Forms.ExceptionMessageBox">
            <summary>
            Exception message box show top-level exception.
            </summary>
            <summary>
            Exception message box show top-level exception.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.ExceptionMessageBox.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Forms.ExceptionMessageBox"/> class.
            </summary>
            <param name="exception">Exception to be shown.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.ExceptionMessageBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Forms.ExceptionMessageBox"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.ExceptionMessageBox.InitializeCustomComponent(System.Exception)">
            <summary>
            Initialize custom component.
            </summary>
            <param name="exception">Exception need to be report.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.ExceptionMessageBox.OnContinueButtonClick(System.Object,System.EventArgs)">
            <summary>
            When user click "Continue" button, ignore the excption..
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.ExceptionMessageBox.OnAbortButtonClick(System.Object,System.EventArgs)">
            <summary>
            When user click "Abort" button, exit the application.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event argument.</param>
        </member>
        <member name="F:Microsoft.Tts.Offline.Forms.ExceptionMessageBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.ExceptionMessageBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.ExceptionMessageBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            The contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Forms.MessageReportForm">
            <summary>
            Form for reporting error set.
            </summary>
            <summary>
            Form for reporting error set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.MessageReportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Forms.MessageReportForm"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.MessageReportForm.OnErrorSetReportFormShown(System.Object,System.EventArgs)">
            <summary>
            On error set report form shown.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.MessageReportForm.OnOKButtonClick(System.Object,System.EventArgs)">
            <summary>
            On ok button clicked.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event argument.</param>
        </member>
        <member name="F:Microsoft.Tts.Offline.Forms.MessageReportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.MessageReportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Forms.MessageReportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            The contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Forms.MessageReportForm.Message">
            <summary>
            Gets or sets Message to be shown.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.Keyboard">
            <summary>
            The Keyboard model.
            </summary>
            <summary>
            The Keyboard model.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Controls.Keyboard"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.Initialization(System.String)">
            <summary>
            Initialize.
            </summary>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.Initialization(System.String,System.String)">
            <summary>
            Initialize.
            </summary>
            <param name="language">Language.</param>
            <param name="filePath">Config file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.InitializeKeyboard">
            <summary>
            Initialize keyboard.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.GenerateButton">
            <summary>
            Generate keyboard buttons.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.KeyboardButton_Click(System.Object,System.EventArgs)">
            <summary>
            The KeyboardButton_Click method.
            </summary>
            <param name="sender">The clicked keyboard button.</param>
            <param name="e">Empty EventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.GenerateFont">
            <summary>
            Generate font function.
            </summary>
            <returns>Font.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.ShowPhoneInfo(System.Object,System.EventArgs)">
            <summary>
            Show example words.
            </summary>
            <param name="sender">The current mouse hovering button.</param>
            <param name="e">Empty EventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.ShowSymbolInfo(System.Object,System.EventArgs)">
            <summary>
            Show symbol's information.
            </summary>
            <param name="sender">The current focused symbol button.</param>
            <param name="e">Empty EventArgs.</param>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.Keyboard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.Keyboard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            The contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Controls.Keyboard.KeyboardEvent">
            <summary>
            Keyboard event.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Controls.Keyboard.KeyboardSpeakEvent">
            <summary>
            Keyboard speak event.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.Keyboard.KeyboardConfig">
            <summary>
            Gets Keyboard config.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.KeyboardConfig">
            <summary>
            The KeyboardConfig class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Controls.KeyboardConfig"/> class.
            Load data from internal xml.
            </summary>
            <param name="language">User selected language, such as "en-US".</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Controls.KeyboardConfig"/> class.
            Load data from given xml. If the given xml is not existed, then throw a exception.
            </summary>
            <param name="language">User selected language, such as "en-US".</param>
            <param name="filePath">The user given keyboard xml file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.IsSupported(System.String)">
            <summary>
            Is keyboard supported correct language?.
            </summary>
            <param name="language">Language.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.ReplaceUndisplayableSymbol(System.String)">
            <summary>
            Replace symbols that can not be displayed in control text.
            </summary>
            <param name="text">Button text or label text that need to be changed.</param>
            <returns>New generate string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.ConvertToOriginalPhone(System.String)">
            <summary>
            Convert IPA phone to its original format.
            </summary>
            <param name="text">Original IPA phone.</param>
            <returns>IPA phone with its original format.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.GetPhoneInfo(System.String,Microsoft.Tts.Offline.Controls.KeyboardConfig.PhoneStyle)">
            <summary>
            Get given phone's all information.
            </summary>
            <param name="phone">TTS phone or IPA phone or displayed phone.</param>
            <param name="phoneStyle">Phone style.</param>
            <returns>KeyboardInfo structure.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.GetIPAPhones(System.String)">
            <summary>
            Split IPA phone string to IPA phone collection.
            </summary>
            <param name="ipaPhoneText">IPA phone string.</param>
            <returns>IPA phone collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.LoadData(System.String)">
            <summary>
            Load data for xml and save it to corresponding class.
            </summary>
            <param name="language">The language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.GenerateRegex">
            <summary>
            Generate regexes for ReplaceUndisplayableSymbol and ConvertToOriginalPhone functions.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.GenerateHashTable">
            <summary>
            Generate hashtable for getting phone information structure by given tts, ipa or displayed phone.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardConfig.FindKeyboardPhone(System.String,Microsoft.Tts.Offline.Controls.KeyboardConfig.PhoneStyle)">
            <summary>
            Find keyboard phone.
            </summary>
            <param name="phoneText">Phone string.</param>
            <param name="phoneStyle">Phone style.</param>
            <returns>Keyboard phone.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardConfig.SupportedLanguages">
            <summary>
            Gets Supported languages.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardConfig.Schema">
            <summary>
            Gets Keyboard schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardConfig.Phones">
            <summary>
            Gets Keyboard phone list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardConfig.Font">
            <summary>
            Gets Keyboard font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardConfig.SupportedConsonants">
            <summary>
            Gets Supported Consonants.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardConfig.SupportedVowels">
            <summary>
            Gets Supported vowels.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardConfig.SupportedSymbols">
            <summary>
            Gets Supported symbols.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.KeyboardConfig.PhoneStyle">
            <summary>
            Phone style enum.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.KeyboardConfig.PhoneStyle.TtsPhone">
            <summary>
            Tts phone string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.KeyboardConfig.PhoneStyle.IpaPhone">
            <summary>
            Ipa phone string.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.KeyboardConfig.PhoneStyle.DisplayedPhone">
            <summary>
            Displayed phone string.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.KeyboardInfo">
            <summary>
            The base class for the KeyboardPhone class and KeyboardSymbol class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardInfo.TtsPhone">
            <summary>
            Gets or sets TTS phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardInfo.IpaPhone">
            <summary>
            Gets or sets IPA phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardInfo.DisplayedPhone">
            <summary>
            Gets or sets Displayed phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardInfo.PhoneType">
            <summary>
            Gets or sets PhoneType enum.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.KeyboardInfo.PhoneTypeEnums">
            <summary>
            Phone type enums.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.KeyboardInfo.PhoneTypeEnums.None">
            <summary>
            Default phone type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.KeyboardInfo.PhoneTypeEnums.Consonant">
            <summary>
            Consonant phone type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.KeyboardInfo.PhoneTypeEnums.Vowel">
            <summary>
            Vowel phone type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.KeyboardInfo.PhoneTypeEnums.Symbol">
            <summary>
            Symbol phone type.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.KeyboardPhone">
            <summary>
            The KeyboardPhone class defined for saving keyboard button information.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardPhone.SetExampleWords(Microsoft.Tts.Offline.Controls.KeyboardPhone.WordInformation[])">
            <summary>
            Set example words.
            </summary>
            <param name="exampleWords">Example words.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardPhone.ExampleWords">
            <summary>
            Gets Example words.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.KeyboardPhone.WordInformation">
            <summary>
            Word information.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.KeyboardPhone.WordInformation.Grapheme">
            <summary>
            Word grapheme.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Controls.KeyboardPhone.WordInformation.IpaPronunciation">
            <summary>
            IPA pronunciation.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.KeyboardSymbol">
            <summary>
            The KeyboardSymbol class defined for saving keyboard symbol data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardSymbol.Description">
            <summary>
            Gets or sets Description.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.KeyboardEventArgs">
            <summary>
            The keyboard event arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Controls.KeyboardEventArgs"/> class.
            </summary>
            <param name="ttsPhone">TTS phone.</param>
            <param name="ipaPhone">IPA phone.</param>
            <param name="displayedPhone">Displayed phone.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardEventArgs.TtsPhone">
            <summary>
            Gets or sets TTS phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardEventArgs.IpaPhone">
            <summary>
            Gets or sets IPA phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardEventArgs.DisplayedPhone">
            <summary>
            Gets or sets Displayed phone.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Controls.KeyboardSpeakEventArgs">
            <summary>
            The keyboard event arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Controls.KeyboardSpeakEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Controls.KeyboardSpeakEventArgs"/> class.
            </summary>
            <param name="exampleWord">Word grapheme.</param>
            <param name="pron">Word pronunciation.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardSpeakEventArgs.ExampleWord">
            <summary>
            Gets or sets Example word grapheme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Controls.KeyboardSpeakEventArgs.Pronunciation">
            <summary>
            Gets or sets Pronunciation.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.UnitLatticePhone">
            <summary>
            Unit lattice phone class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticePhone.#ctor">
            <summary>
            Initializes a new instance of the UnitLatticePhone class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticePhone.GetSameCandidateCount(Microsoft.Tts.Offline.UnitLatticePhone,Microsoft.Tts.Offline.UnitLatticePhone)">
            <summary>
            Gets the number of same candidates between two phones.
            </summary>
            <param name="reference">A phone of reference build.</param>
            <param name="target">A phone of target build.</param>
            <returns>The number of same candidates.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticePhone.Load(System.Xml.XmlTextReader,System.Object)">
            <summary>
            Load one phone from the xmltextreader.
            </summary>
            <param name="reader">XmlTextReader to read XML file.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticePhone.WriteToXml(System.Xml.XmlWriter,System.Object)">
            <summary>
            Writes the phone to xml writer.
            </summary>
            <param name="writer">XmlWriter to save XML file.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticePhone.DoStatistic">
            <summary>
            Do some statistic for all condidates, and save result into log info.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhone.Text">
            <summary>
            Gets or sets phone label text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhone.Triphone">
            <summary>
            Gets or sets triphone labels.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhone.CandidateGroupId">
            <summary>
            Gets or sets candidate group id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhone.Log">
            <summary>
            Gets or sets log info.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhone.PhonePtr">
            <summary>
            Gets or sets of the phone pointer.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhone.Candidates">
            <summary>
            Gets or sets phone candiates.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.UnitLatticePhoneCandidate">
            <summary>
            Unit lattice phone candidate class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.#ctor">
            <summary>
            Initializes a new instance of the UnitLatticePhoneCandidate class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.Equals(Microsoft.Tts.Offline.UnitLatticePhoneCandidate,Microsoft.Tts.Offline.UnitLatticePhoneCandidate)">
            <summary>
            Checks whether two UnitLatticePhoneCandidate are equal.
            </summary>
            <param name="refCandidate">Reference UnitLatticePhoneCandidate.</param>
            <param name="trgCandidate">Target UnitLatticePhoneCandidate.</param>
            <returns>Bool that represents equal or not.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.Load(System.Xml.XmlTextReader,System.Object)">
            <summary>
            Load one phone candidate from the xmltextreader.
            </summary>
            <param name="reader">XmlTextReader to read XML file.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.WriteToXml(System.Xml.XmlWriter,System.Object)">
            <summary>
            Writes the phone candidate to xml writer.
            </summary>
            <param name="writer">XmlWriter to save XML file.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.Text">
            <summary>
            Gets or sets candidate phone label text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.Index">
            <summary>
            Gets or sets candidate index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.SentenceId">
            <summary>
            Gets or sets sentence id where the candidate phone is from.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.IndexNonSilence">
            <summary>
            Gets or sets non-silence phone index of the candidate in recording sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.StartFrameIndex">
            <summary>
            Gets or sets of the startFrame index in the recording wave.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.FrameLength">
            <summary>
            Gets or sets of the Frame Length in the recording wave.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.RouteCost">
            <summary>
            Gets or sets the cost of the whole path ended with this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.TargetCost">
            <summary>
            Gets or sets target cost of the candidate.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.F0Cost">
            <summary>
            Gets or sets the F0 cost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.SpectCost">
            <summary>
            Gets or sets the Lsf cost.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.ConCost">
            <summary>
            Gets or sets of the concatenation cost of the previous node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.IsContinue">
            <summary>
            Gets or sets a value indicating whether the canidate is continous with the previous node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.StartTime">
            <summary>
            Gets or sets start time of the candidate phone in raw recording (time unit is ms).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.Length">
            <summary>
            Gets or sets candidate phone length (forced alignment) in raw recording (time unit is ms).
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.PrecedeNodeIdx">
            <summary>
            Gets or sets the previous node which giving the least path cost to this node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.Log">
            <summary>
            Gets or sets the log infomation.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.IsNusCandidate">
            <summary>
            Gets or sets a value indicating whether the unit candidate is from NUS inventory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticePhoneCandidate.WuiIndex">
            <summary>
            Gets or sets of Wave unit index.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.UnitLatticeSentence">
            <summary>
            Unit lattice sentence class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticeSentence.#ctor">
            <summary>
            Initializes a new instance of the UnitLatticeSentence class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticeSentence.Load(System.Xml.XmlTextReader,System.Object)">
            <summary>
            Load one sentence from the xmltextreader.
            </summary>
            <param name="reader">XmlTextReader to read XML file.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticeSentence.WriteToXml(System.Xml.XmlWriter,System.Object)">
            <summary>
            Writes the sentence to xml writer.
            </summary>
            <param name="writer">XmlWriter to save XML file.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticeSentence.CompareTo(System.Object)">
            <summary>
            Implement the IComparable interface.
            </summary>
            <param name="obj">Object.</param>
            <returns>Positive when current is largeer, zero when equal, negative when current is smaller.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticeSentence.Id">
            <summary>
            Gets or sets sentence id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticeSentence.Text">
            <summary>
            Gets or sets sentence text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticeSentence.Phones">
            <summary>
            Gets or sets phones in the sentence.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.UnitLatticeSentenceSet">
            <summary>
            Unit lattice sentence set class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.UnitLatticeSentenceSet._schema">
            <summary>
            XML schema.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticeSentenceSet.#ctor">
            <summary>
            Initializes a new instance of the UnitLatticeSentenceSet class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticeSentenceSet.AddwithOverwrite(Microsoft.Tts.Offline.UnitLatticeSentence)">
            <summary>
            Add new sentence but kick off previous one, use to handle backoff.
            </summary>
            <param name="sentence">Sentence.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticeSentenceSet.PerformanceLoad(System.IO.StreamReader,System.Object)">
            <summary>
            Performance loading.
            </summary>
            <param name="reader">Stream reader.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticeSentenceSet.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Saves script into Xml writer.
            </summary>
            <param name="writer">Writer file to save into.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.UnitLatticeSentenceSet.WriteTo(System.Xml.XmlWriter,System.Object)">
            <summary>
            Writes unit lattice sentences to xml.
            </summary>
            <param name="writer">XmlWriter to save XML file.</param>
            <param name="contentController">Content controller.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticeSentenceSet.Schema">
            <summary>
            Gets schema of latticefile.xml.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.UnitLatticeSentenceSet.Sentences">
            <summary>
            Gets or sets the sentences in the file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ComputingCallback`3">
            <summary>
            Callback function for computing assistance.
            </summary>
            <typeparam name="TKey">Type of the key.</typeparam>
            <typeparam name="TValue">Type of the value, this should be pair with key value.</typeparam>
            <typeparam name="TReturn">Type of return value.</typeparam>
            <param name="key">The key of the job item.</param>
            <param name="value">The value of the data to process.</param>
            <returns>Processing result of this item.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ComputingModel">
            <summary>
            Computing model control the parallel model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ComputingModel.SingleThread">
            <summary>
            Run all tasks in single-threading model, this is in current Master thread.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ComputingModel.MultiThread">
            <summary>
            Run all tasks in multi-threading model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ComputingModel.BetterFiting">
            <summary>
            Run tasks in SingleThread or MultiThread mode, depending on the context:
            1. Only one job or not
            2. Single processor environment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ComputingAssist">
            <summary>
            Computing assistant
            1. Optimize single threading on single processor machine and single work item
            2. Leverage multi-core on the machine via ThreadPool.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComputingAssist.BuildMap``2(System.Collections.Generic.IEnumerable{``0},``1)">
            <summary>
            Build task mapping with keys and value/context.
            </summary>
            <typeparam name="TKey">Type of elements in the keys collection.</typeparam>
            <typeparam name="TValue">Type of value.</typeparam>
            <param name="keys">Key collection to serve as key in final mapping.</param>
            <param name="value">Value to server as value for each key in final mapping.</param>
            <returns>Built mapping.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComputingAssist.Execute``2(System.Collections.Generic.IEnumerable{``0},Microsoft.Tts.Offline.Utility.ComputingCallback{System.Int32,``0,``1})">
            <summary>
            Execute jobs with given mapping and executing function.
            The return value is mapped to the same indexing of the input value parameters.
            </summary>
            <typeparam name="TValue">Type of value which is for 
            Input parameter of the executing function.</typeparam>
            <typeparam name="TReturn">Type of the return of the executing function.</typeparam>
            <param name="items">Collection of input parameter of the executing function.</param>
            <param name="function">Executing function.</param>
            <returns>Jobs executing result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComputingAssist.Execute``3(System.Collections.Generic.IDictionary{``0,``1},Microsoft.Tts.Offline.Utility.ComputingCallback{``0,``1,``2})">
            <summary>
            Execute jobs with given mapping and executing function.
            The return value is mapped to the same indexing of the input value parameters.
            </summary>
            <typeparam name="TKey">Type of the key used in directory.</typeparam>
            <typeparam name="TValue">Type of value which is for 
            Input parameter of the executing function.</typeparam>
            <typeparam name="TReturn">Type of the return of the executing function.</typeparam>
            <param name="items">Collection of input parameter of the executing function.</param>
            <param name="function">Executing function.</param>
            <returns>Jobs executing result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComputingAssist.BetterInSingleThread(System.Int32)">
            <summary>
            Determine whether single thread model is suitable for current task.
            </summary>
            <param name="itemCount">The number of jobs to process.</param>
            <returns>Bool, true idecating single-threading moel is better, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComputingAssist.Split``1(System.Collections.Generic.List{``0})">
            <summary>
            Split tasks into sub group for scheduling.
            </summary>
            <typeparam name="TKey">Type of the key elements in the keys collection.</typeparam>
            <param name="keys">Value collection to split.</param>
            <returns>Sub groups of the key collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComputingAssist.ExecuteViaThreadPool``3(System.Collections.Generic.IDictionary{``0,``2},Microsoft.Tts.Offline.Utility.ComputingCallback{``0,``2,``1})">
            <summary>
            Execute jobs via threading pool.
            </summary>
            <typeparam name="TKey">Type of the key used in directory.</typeparam>
            <typeparam name="TReturn">Type of the return of the executing function.</typeparam>
            <typeparam name="TValue">Type of value which is for 
            Input parameter of the executing function.</typeparam>
            <param name="items">Collection of input parameter of the executing function.</param>
            <param name="function">Executing function.</param>
            <returns>Jobs executing result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComputingAssist.ExecuteInSingleThread``3(System.Collections.Generic.IDictionary{``0,``2},Microsoft.Tts.Offline.Utility.ComputingCallback{``0,``2,``1})">
            <summary>
            Execute jobs via current thread, this is single threading.
            </summary>
            <typeparam name="TKey">Type of the key used in directory.</typeparam>
            <typeparam name="TReturn">Type of the return of the executing function.</typeparam>
            <typeparam name="TValue">Type of value which is for 
            Input parameter of the executing function.</typeparam>
            <param name="items">Collection of input parameter of the executing function.</param>
            <param name="function">Executing function.</param>
            <returns>Jobs executing result.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ComputingAssist.Model">
            <summary>
            Gets or sets Computing model.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ComputingReturn`2">
            <summary>
            Computing return type, containing the return value and environments.
            </summary>
            <typeparam name="TParam">Parameter associated with current result.</typeparam>
            <typeparam name="TValue">Type of the result value.</typeparam>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ComputingReturn`2.Value">
            <summary>
            Gets or sets Value of the return.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ComputingReturn`2.Exception">
            <summary>
            Gets or sets Exception catched during the processing, if existing.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ComputingReturn`2.Param">
            <summary>
            Gets or sets Parameters for current return value.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.DependencyValidator">
            <summary>
            Dependency validation class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.DependencyValidator.Check(System.String,System.String[])">
            <summary>
            Validate tool dependencies.
            </summary>
            <param name="toolPath">Tool path to be checked.</param>
            <param name="dependenciesRelativPath">Tool dependencies list.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.SetType">
            <summary>
            Set/Collection data presentation type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.SetType.AbstractSet">
            <summary>
            Abstract set.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.SetType.BitSet">
            <summary>
            Bit set enum.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.SetType.IndexSet">
            <summary>
            Index set enum.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.SetType.RangeSet">
            <summary>
            Range set enum.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.SetType.ByteSet">
            <summary>
            Byte set enum.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.SetUtil">
            <summary>
            Set utilities.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SetUtil.Read(System.IO.BinaryReader)">
            <summary>
            Reads set from given reader.
            </summary>
            <param name="reader">Source reader.</param>
            <returns>Set as integer collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SetUtil.Write(Microsoft.Tts.Offline.Utility.SetType,System.Collections.BitArray,System.IO.BinaryWriter)">
            <summary>
            Write bitArray as given set type.
            </summary>
            <param name="setType">Set type to save bit array as.</param>
            <param name="bitArray">Represents the non negative integer set.</param>
            <param name="writer">Target writer.</param>
            <returns>Bytes written.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SetUtil.ReadIndexSet(System.IO.BinaryReader)">
            <summary>
            Read index set.
            </summary>
            <param name="reader">The reader object.</param>
            <returns>The index collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SetUtil.ReadRangeSet(System.IO.BinaryReader)">
            <summary>
            Read range set.
            </summary>
            <param name="reader">The reader object.</param>
            <returns>The interger collection from range set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SetUtil.SaveBitSet(System.Collections.BitArray,System.IO.BinaryWriter)">
            <summary>
            Save bit array as bit set.
            </summary>
            <param name="bitArray">The bit array object.</param>
            <param name="writer">The writer object.</param>
            <returns>Bytes writen.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SetUtil.SaveIndexSet(System.Collections.BitArray,System.IO.BinaryWriter)">
            <summary>
            Save bit array as index set.
            </summary>
            <param name="bitArray">The bit array object.</param>
            <param name="writer">The writer object.</param>
            <returns>Bytes writen.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SetUtil.SaveRangeSet(System.Collections.BitArray,System.IO.BinaryWriter)">
            <summary>
            Save bit array as range set.
            </summary>
            <param name="bitArray">The bit array object.</param>
            <param name="writer">The writer object.</param>
            <returns>Bytes writen.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.SfsTool">
            <summary>
            Sfs tool. SFS (Speech Filing System).
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.SfsTool"/> class.
            </summary>
            <param name="sfsDir">SFS tools directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.Resample(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Resample 44k Hz Waveform files down to 16k Hz waveform files.
            </summary>
            <param name="mapFile">Map file list.</param>
            <param name="wave44kDir">44k Hz Waveform directory.</param>
            <param name="wave16kDir">16k Hz Waveform directory.</param>
            <param name="sfsToolsDir">SFS tools directory.</param>
            <param name="skipExist">Skip if the target file already exists.</param>
            <returns>Skipped sentence id collection.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.FundamentalFrequencyTrack(System.String,System.String)">
            <summary>
            Calculate the fundamental frequency track from waveform file.
            The detailed feature information will be saved in the temprorary file
            Path, and the path will be returned to the caller.
            </summary>
            <param name="wave16kFile">Waveform file to calculate track.</param>
            <param name="sfsToolPath">SFS tools used to perform calculation.</param>
            <returns>Fundamental frequency track file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.Resample(System.String,System.String)">
            <summary>
            Resample waveform file.
            </summary>
            <param name="sourceFilePath">Source waveform file, in 44KHz.</param>
            <param name="targetFilePath">Output waveform file, in 16KHz.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.BuildAnnotation(System.String,System.String,System.String,System.String)">
            <summary>
            Build annotation SFS file with waveform file and annotation file.
            </summary>
            <param name="sfsFilePath">SFS file.</param>
            <param name="waveformFilePath">Waveform file.</param>
            <param name="annotationFilePath">Annotation file.</param>
            <param name="type">Annotation type label.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.CreateSfsFile(System.String,System.Boolean)">
            <summary>
            Create an empty sfs file.
            </summary>
            <param name="sfsFilePath">Sfs file path.</param>
            <param name="overwrite">Whether to overwrite the existing file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.LoadAudioFile(System.String,System.String)">
            <summary>
            Load audio file to sfs file
            Note that cnv2sfs.exe will always generate a new sfs file.
            </summary>
            <param name="audioFile">Audio file path.</param>
            <param name="sfsFile">Sfs file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.LoadAnnotationFile(System.String,System.String,System.String)">
            <summary>
            Load annotation file to sfs file.
            </summary>
            <param name="annotationFile">Annotation file.</param>
            <param name="sfsFile">Sfs file.</param>
            <param name="type">Annotation type(header).</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.ImportWavFile(System.String,System.String)">
            <summary>
            Load wave file to sfs file
            Note that cnv2sfs.exe will always generate a new sfs file.
            </summary>
            <param name="waveFile">Audio file path.</param>
            <param name="sfsFile">Sfs file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SfsTool.LoadFxFile(System.String,System.String,System.Single)">
            <summary>
            Load fundamental frequency to sfs file .
            </summary>
            <param name="fxFile">Fundamental frequency file.</param>
            <param name="sfsFile">Sfs file.</param>
            <param name="frequency">Frequency.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.SfsTool.Item(System.String)">
            <summary>
            Gets Find certian tool.
            </summary>
            <param name="name">Tool name.</param>
            <returns>Tool path.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.SpeechHelper">
            <summary>
            SpeechHelper.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.SpeechHelper.TokensRootPath">
            <summary>
            The root location of the voice tokens in the registry.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.SpeechHelper.TokensWowRootPath">
            <summary>
            The root location of the WoW voice tokens in the registry.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.SpeechHelper.Tts30Clsid">
            <summary>
            CLSID of the TTS 30 engine.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.IsVoiceTokenIdExist(System.String)">
            <summary>
            Test whether the TTS voice token exists or not.
            </summary>
            <param name="tokenId">Voice token id.</param>
            <returns>True if exist, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.FindDefaultVoice">
            <summary>
            Find the default voice token used in OS.
            </summary>
            <returns>Voice token.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.GetVoiceTokenId(System.String)">
            <summary>
            Get voice tolen id according to voice name.
            </summary>
            <param name="name">Voice name.</param>
            <returns>Voice token id.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.GetFullPathOfCom(System.Guid)">
            <summary>
            Get file path of the COM class.
            </summary>
            <param name="clsid">Class if of COM object.</param>
            <returns>File path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.IsMulanInstalled">
            <summary>
            Detect whether Mulan is installed
                first, check if there Anna or Lili is in the voice list
                second, check whether COM object is installed properly.
            </summary>
            <returns>True if installed, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.IsSapi53Installed">
            <summary>
            Detect whether SAPI 5.3 installed.
            </summary>
            <returns>True if SAPI 5.3 installed, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.FindModule(System.String)">
            <summary>
            Find the processmodule according to module name.
            </summary>
            <param name="moduleName">Module name.</param>
            <returns>ProcessModule.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.SearchInFile(System.String,System.String)">
            <summary>
            Search a string in a file.
            </summary>
            <param name="search">String to search for.</param>
            <param name="filePath">File to search.</param>
            <returns>True if found, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.FindTokens(Microsoft.Tts.Offline.Language)">
            <summary>
            Find tokens for the language.
            </summary>
            <param name="language">Language of the token.</param>
            <returns>All token paht of the language.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.FindTokenName(System.String)">
            <summary>
            Find token name from token registry path.
            </summary>
            <param name="tokenId">Token registry path.</param>
            <returns>Token name.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.FindTts30TokenId(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Find the voice token id for given language for TTS 3.0 Engine.
            </summary>
            <param name="language">Language of the voice token to find.</param>
            <param name="voiceName">Voice name of the token to find.</param>
            <returns>Token registry path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.CheckTts30LocalHandler(Microsoft.Tts.Offline.Language)">
            <summary>
            Check whether TTS 3.0 local handler exists.
            </summary>
            <param name="language">Language of the engine to be checked.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.CheckTts30Engine">
            <summary>
            Check whether TTS 3.0 engine exists.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.SetupEngine(System.Xml.XmlNode)">
            <summary>
            Setup engine environment.
            </summary>
            <param name="node">XmlNode with configuration data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.SetDefaultVoice(System.String)">
            <summary>
            Set default voice for Windows.
            </summary>
            <param name="tokenId">Voice token id.</param>
            <returns>Original defaukt voice token id.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.SetVoicePath(System.String,System.String)">
            <summary>
            Set voice path.
            </summary>
            <param name="path">Voice font path.</param>
            <param name="tokenId">Voice token id.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.FindTokenPath(System.String)">
            <summary>
            Find a registry path of a specified voice token id.
            </summary>
            <param name="tokenId">Voice token id.</param>
            <returns>Voice token path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.SetTtsDebug(System.String,System.String,System.Boolean)">
            <summary>
            Set Tts DebugObj to a specified token.
            </summary>
            <param name="tokenId">Voice token id.</param>
            <param name="clsid">Class id of debugger.</param>
            <param name="enabled">Enabling flag.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.RemoveComRegistry(System.String)">
            <summary>
            Remove clsid registry for given clsid string.
            </summary>
            <param name="clsid">CLSID to remove from the registry key.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.RegistryManagedCom(System.String,System.String,System.String)">
            <summary>
            Registry assmebly as COM object.
            </summary>
            <param name="assemblyPath">Location of assembly file to registry as COM assembly.</param>
            <param name="regAsmPath">Location of RegAsm.exe.</param>
            <param name="gacUtilPath">Location of GacUtil.exe.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.UnregistryManagedCom(System.String,System.String,System.String)">
            <summary>
            Registry assmebly as COM object.
            </summary>
            <param name="assemblyPath">Location of assembly file to registry as COM assembly.</param>
            <param name="regAsmPath">Location of RegAsm.exe.</param>
            <param name="gacUtilPath">Location of GacUtil.exe.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.IsLatinLanguage(Microsoft.Tts.Offline.Language)">
            <summary>
            Check the language whether is Latin language.
            </summary>
            <param name="language">Language.</param>
            <returns>True for Latin language.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.FindTts30Tokens(Microsoft.Tts.Offline.Language,Microsoft.Win32.RegistryKey)">
            <summary>
            Get all token ID of the language.
            </summary>
            <param name="language">Language of the voice token to find.</param>
            <param name="token">Token registry.</param>
            <returns>Token registry path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SpeechHelper.FindTts30TokenId(Microsoft.Tts.Offline.Language,System.String,Microsoft.Win32.RegistryKey)">
            <summary>
            Find the voice token id for given language for TTS 3.0 at given token key.
            </summary>
            <param name="language">Language of the voice token to find.</param>
            <param name="voiceName">Voice name of the token to find.</param>
            <param name="token">Token registry.</param>
            <returns>Token registry path.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.SpeechHelper.Sapi6Version">
            <summary>
            Gets SAPI 6 version string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.SpeechHelper.OperatingSystemVersion">
            <summary>
            Gets Collect the OS version information used by current Application.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.SpeechHelper.MulanVersion">
            <summary>
            Gets Try to collect the Mulan version information used by current Application.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.SpeechHelper.SapiVersion">
            <summary>
            Gets Try to collect the SAPI version information used by current Application.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ComNotFoundException">
            <summary>
            Exeption to identify that some COM not registered.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComNotFoundException.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ComNotFoundException"/> class.
            </summary>
            <param name="message">Message.</param>
            <param name="clsid">Class id.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ComNotFoundException"/> class.
            </summary>
            <param name="message">Message.</param>
            <param name="inner">Inner exception.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ComNotFoundException"/> class.
            </summary>
            <param name="message">Message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ComNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ComNotFoundException"/> class.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ComNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get object data.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ComNotFoundException.Clsid">
            <summary>
            Gets Class id.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.UnicodeCharWrap">
            <summary>
            Unicode char wrap.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.UnicodeCharWrap.ExpressionPattern">
            <summary>
            ExpressionPattern .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.UnicodeCharWrap.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.UnicodeCharWrap"/> class.
            </summary>
            <param name="expression">Expression should be unicode expression(^\\u[0-9a-fA-F]{4}$)
            or single char.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.UnicodeCharWrap.Expression">
            <summary>
            Gets Unicode expression, sammple : "\u0066".
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.UnicodeCharWrap.Char">
            <summary>
            Gets Unicode char.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.UnicodeCharWrap.EncodingValue">
            <summary>
            Gets Unocode encoding value.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.UnicodeCharRange">
            <summary>
            Unicode char range.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.UnicodeCharRange.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.UnicodeCharRange"/> class.
            </summary>
            <param name="beginExpression">Begin unicode expression.</param>
            <param name="endExpression">End unicode expression.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.UnicodeCharRange.BeginUnicode">
            <summary>
            Gets Unicode char range begin value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.UnicodeCharRange.EndUnicode">
            <summary>
            Gets Unicode char range end value.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.UnicodeCharRanges">
            <summary>
            Unicode char ranges.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.UnicodeCharRanges.IsInRange(System.Int64)">
            <summary>
            Check the encoding value is in the range.
            </summary>
            <param name="encodingValue">Encoding value.</param>
            <returns>Check whether the encoding value is in the range.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.UnicodeCharRanges.AddChars(System.String)">
            <summary>
            Add chars expression.
            </summary>
            <param name="charsExpression">Chars expression.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.UnicodeCharRanges.AddChar(System.String)">
            <summary>
            Add single char expression.
            </summary>
            <param name="charExpression">Single char expression.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.UnicodeCharRanges.AddRange(System.String,System.String)">
            <summary>
            Add one unicode range to the range list.
            </summary>
            <param name="beginUnicodeExpression">Unicode range begin value.</param>
            <param name="endUnicodeExpression">Unicode range end value.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.UnicodeCharRanges.IsEmpty">
            <summary>
            Gets a value indicating whether the range is empty.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.UnicodeCharRanges.CharList">
            <summary>
            Gets Char enum list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.UnicodeCharRanges.CharRangeList">
            <summary>
            Gets Char range list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.XmlConfigureBase">
            <summary>
            Common base class for xml configure file loader.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlConfigureBase.Save(System.String)">
            <summary>
            Using XmlSerializer, Save all public properties and fields to XML file.
            </summary>
            <param name="xmlFilePath">XML file to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.XmlConfigureBase.Load(System.String)">
            <summary>
            Using XmlSerializer, Load all public properties and fields from XML file.
            </summary>
            <param name="xmlFilePath">XML file to load.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ReportWriter">
            <summary>
            A report writer class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ReportWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ReportWriter"/> class.
            </summary>
            <param name="reportFile">Report file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ReportWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.ReportWriter"/> class.
            </summary>
            <param name="textWriter">Text writer.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ReportWriter.WriteSummaryField(System.String,System.Object)">
            <summary>
            Write a summar field.
            </summary>
            <param name="name">Name.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ReportWriter.WriteDetailLine(System.String,System.Object[])">
            <summary>
            Write detail lines.
            </summary>
            <param name="format">Format.</param>
            <param name="arg">Arg.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ReportWriter.Flush">
            <summary>
            Flush to output media.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ReportWriter.Dispose">
            <summary>
            Dispose resource.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ReportWriter.Dispose(System.Boolean)">
            <summary>
            Dispose this object.
            </summary>
            <param name="disposing">Flag indicating whether delete unmanaged resource.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ReportWriter.SummaryLine">
            <summary>
            Gets or sets Line of summary.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.PosCorpusError">
            <summary>
            FrontEndCompilerError.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.PosCorpusError.EmptyPos">
            <summary>
            Empty Pos.
            Parameters: 
            {0}: word pos pair.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.PosCorpusError.EmptyWord">
            <summary>
            Empty Word.
            Parameters: 
            {0}: word pos pair.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.PosCorpusError.InvalidFormat">
            <summary>
            Invalid Format.
            Parameters: 
            {0}: word pos pair.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.PosCorpusError.NoPosTaggingPos">
            <summary>
            No PosTagging Pos.
            Parameters: 
            {0}: invalid POS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.PosCorpusError.ErrorWithLine">
            <summary>
            Error With Line.
            Parameters: 
            {0}: error message.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.PosCorpus">
            <summary>
            PosCorpus.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpus.Load(System.String)">
            <summary>
            Load.
            </summary>
            <param name="filePath">FilePath.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpus.Load(System.String,Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Load.
            </summary>
            <param name="filePath">FilePath.</param>
            <param name="attributeSchema">LexicalAttributeSchema.</param>
            <returns>The errotset.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpus.Save(System.String)">
            <summary>
            Save.
            </summary>
            <param name="filePath">FilePath.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpus.Sub(Microsoft.Tts.Offline.Utility.PosCorpus)">
            <summary>
            Sub.
            </summary>
            <param name="posCorpus">PosCorpus.</param>
            <returns>Return PosCorpus.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpus.RandomDumpLines(System.Double)">
            <summary>
            RandomDumpLines.
            </summary>
            <param name="percentage">Percentage.</param>
            <returns>PosCorpus.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpus.ExportCorpus(System.String,System.Boolean,System.Boolean)">
            <summary>
            ExportCorpus.
            </summary>
            <param name="targetFilePath">TargetFilePath.</param>
            <param name="withPos">WithPos.</param>
            <param name="toLower">ToLower.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.PosCorpus.FilePath">
            <summary>
            Gets FilePath.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.PosCorpus.Paragraphs">
            <summary>
            Gets Paragraphs.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.PosCorpusParagraph">
            <summary>
            PosCorpusParagraph.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpusParagraph.Parse(System.String,Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Parse.
            </summary>
            <param name="line">Line.</param>
            <param name="attributeSchema">LexicalAttributeSchema.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpusParagraph.ToString(System.Boolean)">
            <summary>
            ToString.
            </summary>
            <param name="withPos">WithPos.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpusParagraph.ToString(System.Boolean,System.Boolean)">
            <summary>
            ToString.
            </summary>
            <param name="withPos">WithPos.</param>
            <param name="toLower">ToLower.</param>
            <returns>The string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpusParagraph.ToString">
            <summary>
            ToString.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.PosCorpusParagraph.Words">
            <summary>
            Gets Words.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.PosCorpusWord">
            <summary>
            PosCorpusWord.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpusWord.Parse(System.String,Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Parse word pos pair.
            </summary>
            <param name="wordPosPair">Word.</param>
            <param name="attributeSchema">AttributeSchema.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpusWord.ToString">
            <summary>
            ToString.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpusWord.ToString(System.Boolean,System.Boolean)">
            <summary>
            ToString.
            </summary>
            <param name="withPos">WithPos.</param>
            <param name="toLower">ToLower.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PosCorpusWord.ToString(System.Boolean)">
            <summary>
            ToString.
            </summary>
            <param name="withPos">WithPos.</param>
            <returns>String.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.PosCorpusWord.WordText">
            <summary>
            Gets or sets Original word text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.PosCorpusWord.LowerWordText">
            <summary>
            Gets Lower letters word text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.PosCorpusWord.Pos">
            <summary>
            Gets or sets Pos.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.IQuantizer">
            <summary>
            Quantizer interface.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.IQuantizer.Quantize(System.Single[])">
            <summary>
            Quantizes float to byte array.
            </summary>
            <param name="values">Float value to be quantized.</param>
            <returns>Quantized byte array.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.IQuantizer.TargetSize">
            <summary>
            Gets the target bits number to quantize to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.IQuantizer.QuantizationError">
            <summary>
            Gets quantization error for the quantizer.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.IQuantizer.DequantizeScaleFactor">
            <summary>
            Gets the scale factor for dequantization.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.IQuantizer.DequantizeOffset">
            <summary>
            Gets the offset for dequantization.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.DataLengthConverter">
            <summary>
            Converts data length between different types.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.DataLengthConverter.ConvertBitLengthToByte(System.Int64,System.Int32)">
            <summary>
            Converts bit length in bytes.
            </summary>
            <param name="bits">Length of bits.</param>
            <param name="alignToBytes">Byte alignment for the conversion.</param>
            <returns>Bytes required to store the bits.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.LinearQuantizer">
            <summary>
            Linear quantizer which quantizer a given range linearly.
            The range is defined by [floor, ceiling].
            Values below floor are set to floor and values above ceiling are set to ceiling.
            The formular for dequantize:
                (quantized value) * DequantizeScaleFactor + DequantizeOffset.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.LinearQuantizer.#ctor(System.Int32,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the LinearQuantizer class.
            </summary>
            <param name="targetSize">Target bits number to quantize to.
            Valid ones are byte/sbyte/short/ushort.</param>
            <param name="floor">The floor of the quantization range.</param>
            <param name="ceil">The ceiling of the quantization range.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.LinearQuantizer.Quantize(System.Single[])">
            <summary>
            Quantize float to byte array.
            </summary>
            <param name="values">Float values to be quantized.</param>
            <returns>Quantized byte array.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.LinearQuantizer.Floor">
            <summary>
            Gets the floor of the quantization range.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.LinearQuantizer.Ceil">
            <summary>
            Gets the ceiling of the quantization range.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.LinearQuantizer.TargetSize">
            <summary>
            Gets the target bits number to quantize to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.LinearQuantizer.DequantizeScaleFactor">
            <summary>
            Gets the scale factor for dequantization.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.LinearQuantizer.QuantizationError">
            <summary>
            Gets quantization error for the quantizer.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.LinearQuantizer.DequantizeOffset">
            <summary>
            Gets the offset for dequantization.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.NullQuantizer">
            <summary>
            Null quantizer which quantizer float to its binary representation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.NullQuantizer.Quantize(System.Single[])">
            <summary>
            Quantize float to byte array.
            </summary>
            <param name="values">Float values to be quantized.</param>
            <returns>Quantized byte array.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.NullQuantizer.TargetSize">
            <summary>
            Gets the target byte number to quantize to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.NullQuantizer.DequantizeScaleFactor">
            <summary>
            Gets the scale factor to be multiplied when dequantize.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.NullQuantizer.DequantizeOffset">
            <summary>
            Gets the offset to be added when dequantize.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.NullQuantizer.QuantizationError">
            <summary>
            Gets quantization error for the quantizer.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.PairExtension">
            <summary>
            An extension class for Pair.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.PairExtension.ToString``2(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.Utility.Pair{``0,``1}},System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Gets a string to indicate a Pair IEnumerable object.
            </summary>
            <param name="pairs">The given Pair IEnumerable object.</param>
            <param name="getLeftString">The given function to get the string for left.</param>
            <param name="getRightString">The given function to get the string for right.</param>
            <typeparam name="TLeft">The left type.</typeparam>
            <typeparam name="TRight">The right type.</typeparam>
            <returns>The string to indicate a Pair IEnumerable object.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.Pair`2">
            <summary>
            This class defines a template for pair.
            </summary>
            <typeparam name="TLeft">Type of left element of the pair.</typeparam>
            <typeparam name="TRight">Type of right element of the pair.</typeparam>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Pair`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.Pair`2"/> class.
            </summary>
            <param name="left">Left element of the pair.</param>
            <param name="right">Right element of the pair.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.Pair`2.Left">
            <summary>
            Gets or sets the left element of the pair.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.Pair`2.Right">
            <summary>
            Gets or sets the right element of the pair.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.FontComparer">
            <summary>
            The FontComparer class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FontComparer.BuildNumberOffset">
            <summary>
            The BuildNumber offset in voice font.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FontComparer.BuildNumberSize">
            <summary>
            The BuildNumber size in voice font.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.FontComparer.TtsBuildNumberOffset">
            <summary>
            The BuildNumber size for non SPS file in voice font.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.FontComparer.CompareVoiceFont(System.String,System.String)">
            <summary>
            Compares two voice font as binary mode, ignored the build number.
            </summary>
            <param name="leftFile">Path of left file to compare.</param>
            <param name="rightFile">Path of right file to compare.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.Statistics">
            <summary>
            This class containing various statistics related functions.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Statistics.ValueOnPercentile``1(System.Collections.ObjectModel.Collection{``0},System.Double)">
            <summary>
            Sort a data set, and then select the element on given percentile.
            </summary>
            <typeparam name="T">The type of elements in the data set.</typeparam>
            <param name="dataSet">The data set.</param>
            <param name="percentile">The percentile.</param>
            <returns>The selected element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Statistics.ValueOnPercentile``1(System.Collections.ObjectModel.Collection{``0},System.Double,System.Collections.Generic.IComparer{``0})">
            <summary>
            Sort a data set, and then select the element on given percentile.
            </summary>
            <typeparam name="T">The type of elements in the data set.</typeparam>
            <param name="dataSet">The data set.</param>
            <param name="percentile">The percentile.</param>
            <param name="comparer">
            The customized comparer, can be null.
            If this is set to null, default comparer will be used.
            </param>
            <returns>The selected element.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Statistics.Distribution(System.Collections.ObjectModel.Collection{System.Int32},System.Int32)">
            <summary>
            Get the distribution for a data set, using the given interval size.
            </summary>
            <param name="dataSet">The data set.</param>
            <param name="intervalSize">The interval size.</param>
            <returns>
            The distribution, stored in a dictionary.
            The key is the distribution interval, and the value is frequence.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Statistics.Distribution(System.Collections.ObjectModel.Collection{System.Double},System.Double)">
            <summary>
            Get the distribution for a data set, using the given interval size.
            </summary>
            <param name="dataSet">The data set.</param>
            <param name="intervalSize">The interval size.</param>
            <returns>
            The distribution, stored in a dictionary.
            The key is the distribution interval, and the value is frequence.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.Statistics.Distribution``1(System.Collections.ObjectModel.Collection{``0},System.Collections.ObjectModel.Collection{``0})">
            <summary>
            Get the distribution for a data set, using the given distribution boundary points.
            </summary>
            <typeparam name="T">The type of elements in the data set.</typeparam>
            <param name="dataSet">The data set.</param>
            <param name="boundaryPoints">The distribution boundary points.</param>
            <returns>
            The distribution, stored in a dictionary.
            The key is the distribution interval, and the value is frequence.
            </returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TransactionObservableCollection`1">
            <summary>
            The observalbe collection supports transaction changing.
            </summary>
            <typeparam name="T">Type of the event argument.</typeparam>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TransactionObservableCollection`1.StartTransaction">
            <summary>
            StartTransaction.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TransactionObservableCollection`1.EndTransaction">
            <summary>
            EndTransaction.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TransactionObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            OnCollectionChanged.
            </summary>
            <param name="e">Event.</param>
        </member>
        <member name="E:Microsoft.Tts.Offline.Utility.TransactionObservableCollection`1.TransactionChangeHandler">
            <summary>
            The transaction change handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TransactionObservableCollection`1.IsTransaction">
            <summary>
            Gets a value indicating whether IsTransaction.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.HpcJobState">
            <summary>
            The enumeration of HPC job state.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobState.Create">
            <summary>
            Create status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobState.Wait">
            <summary>
            Wait status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobState.Pend">
            <summary>
            Pend status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobState.Running">
            <summary>
            Runing status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobState.Finished">
            <summary>
            Finished status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobState.Succeed">
            <summary>
            Succeed status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobState.Failed">
            <summary>
            Failed status.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobState.Canceled">
            <summary>
            Canceled status.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.HpcJobPriority">
            <summary>
            The enumeration of HPC job priority.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobPriority.Lowest">
            <summary>
            Hpc Job's priority lowest.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobPriority.BelowNormal">
            <summary>
            Hpc Job's priority below normal.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobPriority.Normal">
            <summary>
            Hpc Job's priority normal.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobPriority.AboveNormal">
            <summary>
            Hpc Job's priority above normal.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HpcJobPriority.Highest">
            <summary>
            Hpc Job's priority highest.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsHpcFarmUnitType">
            <summary>
            The enumeration of HPC unit type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsHpcFarmUnitType.Core">
            <summary>
            Hpc Job's unit type, base unit is core.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsHpcFarmUnitType.Node">
            <summary>
            Hpc Job's unit type, base unit is node.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsHpcFarmUnitType.Socket">
            <summary>
            Hpc Job's unit type, base unit is socket.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.HpcException">
            <summary>
            The definition of HPC exception.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HpcException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.HpcException"/> class.
            The constructor of HPC exception with message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HpcException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.HpcException"/> class.
            The constructor of HPC exception with message and inner exception.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The innerException.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsHpcFarm">
            <summary>
            The base class of TTS HPC farm.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcFarm.Dispose">
            <summary>
            The dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcFarm.CreateJob(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,Microsoft.Tts.Offline.Utility.HpcJobPriority)">
            <summary>
            The abstract method of create job.
            </summary>
            <param name="command">The command of the job.</param>
            <param name="name">The name of the job.</param>
            <param name="logFile">The log file of the job.</param>
            <param name="isExclusive">Indicates whether the job is exclusive.</param>
            <param name="startValue">Sweep job's start value.</param>
            <param name="endValue">Sweep job's end value.</param>
            <param name="incrementalValue">Sweep job's incremental value.</param>
            <param name="priority">The priority of the job.</param>
            <returns>The job object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcFarm.Submit(Microsoft.Tts.Offline.Utility.TtsHpcJob)">
            <summary>
            The abstract method of submit job.
            </summary>
            <param name="job">The job to submit.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcFarm.Kill(Microsoft.Tts.Offline.Utility.TtsHpcJob)">
            <summary>
            The abstract method of kill job.
            </summary>
            <param name="job">The job to kill.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcFarm.QueryJobByOwner(System.String)">
            <summary>
            The abstract method of query job by owner.
            </summary>
            <param name="owner">The name of owner.</param>
            <returns>List.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcFarm.GetHpcFarmInfo">
            <summary>
            The abstract method to get hpc farm information.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcFarm.GetNodeList">
            <summary>
            The abstract method to get hpc farm node list.
            </summary>
            <returns>List.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcFarm.Dispose(System.Boolean)">
            <summary>
            The Dispose methodlogy.
            </summary>
            <param name="disposing">The indicator of disposing.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcFarm.RaiseErrorEvent(System.String)">
            <summary>
            Raise error event.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="E:Microsoft.Tts.Offline.Utility.TtsHpcFarm.OnError">
            <summary>
            The envent of error.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsHpcFarm.OnErrorEventHandler">
            <summary>
            The delegate routine of error event handler.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsHpcJob">
            <summary>
            The base class of Tts HPC job.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcJob.SyncFrom(Microsoft.Tts.Offline.Utility.TtsHpcJob)">
            <summary>
            Sync the job with a IHpcJob object.
            </summary>
            <param name="job">The job object.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.Name">
            <summary>
            Gets or sets The name of the job. Could be String.Empty.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.Command">
            <summary>
            Gets or sets The command line of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.LogFile">
            <summary>
            Gets or sets The log file of the job. The standard ouput and error will be redirected to this file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.UseWholeMachine">
            <summary>
            Gets or sets a value indicating whether the job is exclusive.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.StartValue">
            <summary>
            Gets or sets The start value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.EndValue">
            <summary>
            Gets or sets The end value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.IncrementalValue">
            <summary>
            Gets or sets The incremental value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.Owner">
            <summary>
            Gets or sets The owner of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.RequestedNodes">
            <summary>
            Gets or sets The nodes on which the job will be started. If user use this property in multi-thread context, the HpcFarm.Submit method should be mutexed.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.Priority">
            <summary>
            Gets or sets The job priority of the job. This property may be modified while the job is Running.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.Id">
            <summary>
            Gets or sets The id of the job. If the job is not submitted, the id is -1.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.State">
            <summary>
            Gets or sets The state of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.Machine">
            <summary>
            Gets or sets the machine on which the job is running.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.CpuTime">
            <summary>
            Gets or sets the cpu time spent on the job.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.SubmitTime">
            <summary>
            Gets or sets the job submit time.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcJob.CustomInformation">
            <summary>
            Gets or sets The custom information.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm">
            <summary>
            An implementation of TTsHpcSweepTaskFarm that use the parametric sweep tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.MaxNumOfHpcJobs">
            <summary>
            Indicate the number of HPC jobs.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.disposed">
            <summary>
            Indicate whether the object has been disposed.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.scheduler">
            <summary>
            The scheduler used to communicate with HPC server.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.containerJob">
            <summary>
            The job that contains all tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.statusOfJob">
            <summary>
            The job's status.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.#ctor(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm"/> class.
            </summary>
            <param name="clusterName">The name of the cluster.</param>
            <param name="userName">The name of the user used to connect to the cluster.</param>
            <param name="maxCores">The max cores job run on.</param>
            <param name="maxNodes">The max nodes job run on.</param>
            <param name="jobName">The name of the job.</param>
            <param name="isExclusive">Is exlusive on node or core.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.WaitForJobDone">
            <summary>
            Wait for job unitl it's done.
            </summary>
            <returns>The state of job.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.CreateJob(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,Microsoft.Tts.Offline.Utility.HpcJobPriority)">
            <summary>
            Create a job that can be dealt with this Farm.
            </summary>
            <param name="command">The command of the job.</param>
            <param name="name">The name of the job.</param>
            <param name="logFile">The log file of the job.</param>
            <param name="isExclusive">Indicates whether the job is exclusive.</param>
            <param name="startValue">Sweep job's start value.</param>
            <param name="endValue">Sweep job's end value.</param>
            <param name="incrementalValue">Sweep job's incremental value.</param>
            <param name="priority">The priority of the job.</param>
            <returns>The job object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.Submit(Microsoft.Tts.Offline.Utility.TtsHpcJob)">
            <summary>
            Submit a job to the farm.
            </summary>
            <param name="job">The job object.</param>
            <returns>Indicates whether the job is submitted successfully.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.Kill(Microsoft.Tts.Offline.Utility.TtsHpcJob)">
            <summary>
            Kill a job.
            </summary>
            <param name="job">The job object.</param>
            <returns>Indicates whether the job is killed successfully.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.QueryJobByOwner(System.String)">
            <summary>
            Get a job list of the specified user.
            </summary>
            <param name="owner">The owner of the user. Useless for this implementation.</param>
            <returns>The list of jobs.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.GetHpcFarmInfo">
            <summary>
            Get the information of the farm.
            </summary>
            <returns>The information of the farm.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.GetNodeList">
            <summary>
            Get the node list of the farm.
            </summary>
            <returns>The node list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.Dispose(System.Boolean)">
            <summary>
            Dispose the object.
            </summary>
            <param name="disposing">Indicating whether to release the managed resources.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.ClusterName">
            <summary>
            Gets or sets the name of the cluster.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.UserName">
            <summary>
            Gets or sets the name of the user used to connect to the cluster.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.MaxCores">
            <summary>
            Gets or sets the max job running at the same time.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.MaxNodes">
            <summary>
            Gets or sets The maximum number of nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.JobName">
            <summary>
            Gets or sets The name of job.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.Priority">
            <summary>
            Gets or sets The job's priority.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.IsExclusive">
            <summary>
            Gets or sets a value indicating whether Is the job exlusive on machine.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcSweepTaskFarm.DoneFileList">
            <summary>
            Gets or sets done file list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.TtsHpcTaskJob">
            <summary>
            The class of TtsHpcTaskJob inherited from TtsHpcJob.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcTaskJob.#ctor(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,Microsoft.Tts.Offline.Utility.HpcJobPriority)">
            <summary>
            Initializes a new instance of the TtsHpcTaskJob class.
            </summary>
            <param name="command">The command of the job.</param>
            <param name="name">The name of the job.</param>
            <param name="logFile">The log file of the job.</param>
            <param name="isExclusive">Indicates whether the job is exclusive.</param>
            <param name="startValue">Sweep job's start value.</param>
            <param name="endValue">Sweep job's end value.</param>
            <param name="incrementValue">Sweep job's incremental value.</param>
            <param name="priority">The priority of the job.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcTaskJob.#ctor(System.String,System.String,System.String,System.String,Microsoft.Tts.Offline.Utility.HpcJobPriority,System.Boolean)">
            <summary>
            Initializes a new instance of the TtsHpcTaskJob class.
            </summary>
            <param name="command">The command of the job.</param>
            <param name="owner">The owner of the job.</param>
            <param name="name">The name of the job.</param>
            <param name="logFile">The log file of the job.</param>
            <param name="priority">The priority of the job.</param>
            <param name="isExclusive">Indicates whether the job is exclusive.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcTaskJob.#ctor">
            <summary>
            Prevents a default instance of the TtsHpcTaskJob class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcTaskJob.CreateFromInnerJob(Microsoft.Hpc.Scheduler.ISchedulerTask,Microsoft.Hpc.Scheduler.ISchedulerJob)">
            <summary>
            Create a HpcJob according to the inner task and job.
            </summary>
            <param name="taskIn">The inner task.</param>
            <param name="jobIn">The inner job.</param>
            <returns>The HpcJob.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcTaskJob.ConvertState(Microsoft.Hpc.Scheduler.Properties.TaskState)">
            <summary>
            Convert the TaskState to HpcJobState.
            </summary>
            <param name="state">The TaskState.</param>
            <returns>The HpcJobState.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.TtsHpcTaskJob.InitializeFrom(Microsoft.Hpc.Scheduler.ISchedulerTask)">
            <summary>
            Initialize a job after it is submited.
            </summary>
            <param name="task">The submited task.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.TtsHpcTaskJob.TaskId">
            <summary>
            Gets or sets The id of the internal task.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.HPCParallelComputaion">
            <summary>
            HPC ParallelComputation class.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ParallelComputation">
            <summary>
            ParallelComputation base class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelComputation.CreateComputationPlatform(Microsoft.Tts.Offline.Utility.ComputationPlatform,Microsoft.Tts.Offline.Utility.ParallelComputation.PlatformPreparationWork,Microsoft.Tts.Offline.Utility.ParallelComputation@,System.String,System.String)">
            <summary>
            The factory to build compuation platform.
            </summary>
            <param name="mode">The mode of compuation platform.</param>
            <param name="preparationWork">The preparation work.</param>
            <param name="computationPlatform">The platform for parallel computation.</param>
            <param name="xmlConfig">Xml config.</param>
            <param name="workingFolder">The working folder.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelComputation.CreateComputationPlatform(Microsoft.Tts.Offline.Utility.ComputationPlatform,Microsoft.Tts.Offline.Utility.ParallelComputation@)">
            <summary>
            Overload CreateComputationPlatform(ComputationPlatform mode, PlatformPreparationWork preparationWork) with the second para as null.
            </summary>
            <param name="mode">The mode of compuation platform.</param>
            <param name="comPlatform">The platform for parallel computation.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelComputation.Execute">
            <summary>
            The specific execution.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelComputation.Initialize">
            <summary>
            The Initialize() methods to initalize the necessary configuration.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelComputation.BroadCast">
            <summary>
            The BroadCast() methods to broadcast all task.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelComputation.Reduce">
            <summary>
            The Reduce() methods to reduce all result to one file.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelComputation.ValidateResult">
            <summary>
            The ValidateResult() methods to validate the reuslt file.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelComputation.Description">
            <summary>
            Gets or sets the description for log for the parallel parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelComputation.Logger">
            <summary>
            Gets or sets the ILogger interface for the parallel parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelComputation.InnerException">
            <summary>
            Gets or sets the exception happened inner the thread for the parallel parameter.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ParallelComputation.PlatformPreparationWork">
            <summary>
            The delegated preaparation work for computation platform.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.DefaultNodeNumber">
            <summary>
            Specify the node number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.CoreNumer">
            <summary>
            Specify the core number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.HPCHeadNode">
            <summary>
            Specify the name of head node.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.NodeNumber">
            <summary>
            Specify the number of to node to calculate.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.JobName">
            <summary>
            Specify the name of job.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.BroadCastCommand">
            <summary>
            Specify the input of BroadCast Command.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.ReduceCommand">
            <summary>
            Specify the input of Reduce Command.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.SweepStart">
            <summary>
            Specify the sweep start value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.SweepEnd">
            <summary>
            Specify the sweep end value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.SweepIncrement">
            <summary>
            Specify the sweep increment value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.TaskName">
            <summary>
            Specify the Task name;.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.JobDoneList">
            <summary>
            Job Done File List.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.HPCParallelComputaion"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.Dispose">
            <summary>
            Disposes the resources used in this object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the RewindableTextReader.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources;
            False to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.Initialize">
            <summary>
            The Initialize() methods to initalize the necessary configuration.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.BroadCast">
            <summary>
            The BroadCast() methods to broadcast all task.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.Reduce">
            <summary>
            The Reduce() methods to reduce all task dispatched.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.ValidateResult">
            <summary>
            The ValidateResult() methods to broadcast all task.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.SingleMachineComputation">
            <summary>
            Gets The Single machine computation platform to execute the task.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.HPCParallelComputaion.HpcJobPriority">
            <summary>
            Gets or sets the HPC job priority.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ReduceWork">
            <summary>
            Delegate reduce work.
            </summary>
            <param name="args">Arguements.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation">
            <summary>
            The class of MultiThreadParallelComputation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation"/> class, the constuctor for MultiThreadParallelComputation class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.Initialize">
            <summary>
            The Initialize() methods to initalize the necessary configuration.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.BroadCast">
            <summary>
            The BroadCast() methods to initalize the necessary configuration.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.Reduce">
            <summary>
            The Reduce() methods to initalize the necessary configuration.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.ValidateResult">
            <summary>
            The ValidateResult() methods to initalize the necessary configuration.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.ParallelComputing">
            <summary>
            The method to perform parallel computing.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.SingleReduce">
            <summary>
            Gets or sets single Reduce work.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.ParallelParameters">
            <summary>
            Sets parallel parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.ReduceArguments">
            <summary>
            Gets or sets passed in reduce arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.MultiThreadParallelComputation.MaxThreads">
            <summary>
            Gets or sets MaxThreads.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.DelayedLogger">
            <summary>
            The all content write to the logger will be delayed to until the object is disposing.
            This is a helper class to write logs from multi-thread into a same logger.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.DelayedLogger._logger">
            <summary>
            The ILogger.interface.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.DelayedLogger._buffer">
            <summary>
            A buffer to hold the log temporary.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.DelayedLogger._writer">
            <summary>
            The logger writer.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.DelayedLogger.#ctor(Microsoft.Tts.Offline.Utility.ILogger)">
            <summary>
            Initializes a new instance of the DelayedLogger class.
            </summary>
            <param name="logger">The ILogger interface.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.DelayedLogger.Dispose">
            <summary>
            The Dispose() method for IDisposable interface. Here, the logged data will be written into the log file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.DelayedLogger.Dispose(System.Boolean)">
            <summary>
            The Dispose() method for IDisposable interface. Here, the logged data will be written into the log file.
            </summary>
            <param name="disposing">True.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.DelayedLogger.Writer">
            <summary>
            Gets the TextWriter, which content will be written into the logger.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ParallelParameter">
            <summary>
            An abstract class to represent the parameter for parallel computing.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelParameter.Invoke(System.Object)">
            <summary>
            The abstract Invoke() methods to invoke the corresponding method or external command.
            </summary>
            <param name="state">The argument for Invoke() methods.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelParameter.Description">
            <summary>
            Gets or sets the description for log for the parallel parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelParameter.Logger">
            <summary>
            Gets or sets the ILogger interface for the parallel parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelParameter.FileLogger">
            <summary>
            Gets or sets the ILogger interface for the parallel parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelParameter.InnerException">
            <summary>
            Gets or sets the exception happened inner the thread for the parallel parameter.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ParallelCommand">
            <summary>
            The external command info for parallel computing.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelCommand.ToString">
            <summary>
            Converts the instance into string.
            </summary>
            <returns>String to represent the instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelCommand.Invoke(System.Object)">
            <summary>
            The Invoke() methods to invoke the corresponding external command.
            </summary>
            <param name="state">The argument for Invoke() methods, will be an instance of ParallelCommand.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelCommand.ExecutableFile">
            <summary>
            Gets or sets the executable file name for the external command.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelCommand.ResultFileLogger">
            <summary>
            Gets or sets the ILogger interface for the parallel parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelCommand.Argument">
            <summary>
            Gets or sets the argument for the external command.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ParallelMethod`1">
            <summary>
            The method info for parallel computing.
            </summary>
            <typeparam name="T">The argument for call back method.</typeparam>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.ParallelMethod`1.Invoke(System.Object)">
            <summary>
            The Invoke() methods to invoke the corresponding method.
            </summary>
            <param name="state">The argument for Invoke() methods, will be an instance of ParallelMethod.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelMethod`1.CallBackMethod">
            <summary>
            Gets or sets the method for parallel computing.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Utility.ParallelMethod`1.Argument">
            <summary>
            Gets or sets the argument will be passed to the method.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ParallelMethod`1.ParallelCallBackMethod`1">
            <summary>
            The delegate for method used to perform parallel computing.
            </summary>
            <typeparam name="TArgType">The argument for call back method.</typeparam>
            <param name="argument">The corresponding argument.</param>
            <param name="logWriter">The TextWriter for log.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.SingleMachineMethod">
            <summary>
            The class of single machine method.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.SingleMachineMethod.SingleMethod">
            <summary>
            The delegate method without pass in object.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.SingleMachineMethod.SingleMethodWithState">
            <summary>
            The delegate method with pass in object.
            </summary>
            <param name="state">The passed in object.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.SingleMachineComputation">
            <summary>
            The class of MultiThreadParallelComputation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SingleMachineComputation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Utility.SingleMachineComputation"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SingleMachineComputation.EnqueueMethod(System.Object,System.Object)">
            <summary>
            The enqueue mthod is to enqueue the delegate method with state.
            </summary>
            <param name="delegateMethod">The delegate function.</param>
            <param name="state">The pass in object.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SingleMachineComputation.EnqueueMethod(System.Object)">
            <summary>
            The enqueue mthod is to enqueue the delegate method without state.
            </summary>
            <param name="delegateMethod">The delegate function.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SingleMachineComputation.Initialize">
            <summary>
            The Initialize() methods to initalize the necessary configuration.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Utility.SingleMachineComputation.BroadCast">
            <summary>
            The BroadCast() methods to initalize the necessary configuration.
            </summary>
            <returns>Bool.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Utility.ComputationPlatform">
            <summary>
            Parallel Computation Enumeration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ComputationPlatform.MultiThreadPlatform">
            <summary>
            The platform for multithread compuation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ComputationPlatform.HPCPlatform">
            <summary>
            The platform for HPC compuation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ComputationPlatform.SingleMachinePlatform">
            <summary>
            The platform for single machine compuation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ComputationPlatform.CosmosPlatform">
            <summary>
            The platform for COSMOS conmputation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Utility.ComputationPlatform.Unknown">
            <summary>
            Unknown platform.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.DataRange`1">
            <summary>
            Data range.
            </summary>
            <typeparam name="T">Type of the begin or end value of this range.</typeparam>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.DataRange`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.DataRange`1"/> class..
            </summary>
            <param name="begine">Begin of the range.</param>
            <param name="end">End of the range.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.DataRange`1.Begin">
            <summary>
            Gets or sets Begine of this range.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.DataRange`1.End">
            <summary>
            Gets or sets End of this range.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.EggAcousticFeature">
            <summary>
            Egg Acoustic Feature calculation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.EstimateEpochs(System.Single[],System.Int32,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Estimate epoch from EGG samples.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when
            EggSamples parameter is null or doesn't contain any elements.</exception>
            <exception cref="T:System.IO.InvalidDataException">Thrown when
            The calculated epoch number is less then 5.</exception>
            <param name="eggSamples">EGG waveform samples.</param>
            <param name="samplesPerSecond">Samples per second.</param>
            <param name="minPitchFreq">Minimum pitch frequency.</param>
            <param name="maxPitchFreq">Maximum pitch frequency.</param>
            <param name="positive">Positive waveform or not.</param>
            <returns>Epoch data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.Egg2Epoch(System.String,System.String,System.String,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert wave16k+egg16k to epoch.
            </summary>
            <param name="wave16kFilePath">Specifies the directory of wave16k waveform files.</param>
            <param name="egg16kFilePath">Specifies the directory of EGG16k waveform files.</param>
            <param name="epochFilePath">Specifies the directory of epoch waveform files.</param>
            <param name="bandPassLowFreq">Specifies the low frequency of bandpass filter.</param>
            <param name="bandPassHighFreq">Specifies the high frequency of bandpass filter.</param>
            <param name="bandPassOrder">Specifies the order of bandpass filter.</param>
            <param name="larEpochMinPitch">Specifies the min pitch when doing lar epoch.</param>
            <param name="larEpochMaxPitch">Specifies the max pitch when doing lar epoch.</param>
            <param name="frameSize">Specifies the frameSize when adjust epoch.</param>
            <param name="lpcOrder">Specifies the LPC order.</param>
            <param name="adjustFreqOffset">Specifies offset when doing adjust frequency.</param>
            <returns>True.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.Load(System.String)">
            <summary>
            Load a laryngograph wave file (EGG data).
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when the waveform file
            Is not 16 bit per sample.</exception>
            <param name="eggFilePath">File path of EGG16k waveform file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.LoadEpoch(System.String)">
            <summary>
            Load uncompressed epoch data from file.
            </summary>
            <param name="epochFilePath">File path of epoch waveform file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.SaveEpochFile(System.String)">
            <summary>
            Save epoch data to file.
            </summary>
            <param name="filePath">Target epoch file path to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.AdjustAlignment(System.Int32@)">
            <summary>
            AdjustAlignment() is used to adjust force alignment result
            Using epoch information, and experimental experience.
            </summary>
            <param name="sampleOffset">Sample offset.</param>
            <returns>Index of epoch.
            For i is index of _EpochPosition and the first element of
            _EpochPosition is not zero, so we need plus 1 to get the
            Index of epoch.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.GetPitchAndRange(System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
            Get the pitch and range of the first voiced period.
            </summary>
            <param name="sampleOffset">Sample offset.</param>
            <param name="sampleLength">Sample length.</param>
            <param name="averagePitch">Average pitch value.</param>
            <param name="pitchRange">Pitch Range.</param>
            <returns>True if voiced segment, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.GetValidPitches(System.Int32,System.Int32)">
            <summary>
            Get valid pitches for given range of waveform samples.
            </summary>
            <param name="sampleOffset">The begin sample offset of the waveform.</param>
            <param name="sampleLength">The sample range of the waveform.</param>
            <returns>Pitches.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.GetValidEpochs(System.Int32,System.Int32)">
            <summary>
            Get valid epochs for given range of waveform.
            </summary>
            <param name="sampleOffset">The begin sample offset of the waveform.</param>
            <param name="sampleLength">The sample range of the waveform.</param>
            <returns>Epochs.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.GetValidEpochRange(System.Int32,System.Int32)">
            <summary>
            Get the valid (continued voiced) epoch range in the epoch data.
            </summary>
            <param name="sampleOffset">The begin sample offset of the waveform.</param>
            <param name="sampleLength">The sample length of the waveform.</param>
            <returns>Valid epoch range.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.GetAverageEpoch(System.Int32,System.Int32)">
            <summary>
            Get average epoch.
            </summary>
            <param name="sampleOffset">The begin sample offset of the waveform.</param>
            <param name="sampleLength">The sample length of the waveform.</param>
            <returns>Average epoch.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.PeakPicking(System.Single[],System.Single[],System.Int32)">
            <summary>
            Pick peak samples.
            </summary>
            <exception cref="T:System.OverflowException">Thrown when fail to calculate
            MinEnvelopAmplitude and minPulseAmplitude for overflow.</exception>
            <param name="inputSamples">Input waveform samples.</param>
            <param name="peakSamples">Peak samples.</param>
            <param name="samplesPerSecond">Samples per second.</param>
            <returns>Maximum pulse amplitude.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.Envelope(System.Single[],System.Single[],System.Int32,System.Int32)">
            <summary>
            Envelope first detects the positive and negative amplitude
            Envelopes. The sign of the waveform is determined by picking
            Envelope with highest energy. The sign of the input waveform
            Is changed in case it is negative. After this the negative
            Values are clipped to zero. FInally, the signal is rescaled
            So that it can be stored as a WAV file.
            </summary>
            <param name="inputSamples">Input waveform samples.</param>
            <param name="outputSamples">Output waveform samples.</param>
            <param name="minPitchPeriod">Minimum pitch period.</param>
            <param name="maxPitchPeriod">Maximum pitch period.</param>
            <returns>True if positive waveform, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.PosEnvelope(System.Single[],System.Single[],System.Int32,System.Int32)">
            <summary>
            Envelope estimates the amplitude envelope of the input
            Signal. To do this an algorithm similar to a half-wave
            Rectification is used where the envelope tracks instant
            Increases in amplitude and then the envelope linearly decays
            After a small time. This is a fast method to estimate the
            Amplitude envelope. This routine will compute the positive
            Envelope (the negative pulses do not contribute).
            </summary>
            <param name="inputSamples">Input waveform samples.</param>
            <param name="outputSamples">Output waveform samples.</param>
            <param name="minPitchPeriod">Minimum pitch period.</param>
            <param name="maxPitchPeriod">Maximum pitch period.</param>
            <returns>Average sample energy.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.RemoveCloseEpochs(System.Single[],System.Int32)">
            <summary>
            Remove Epochs that are closer than the minimum pitch period.
            Set the positive epoch to zero if it following less then minPitchPeriod
            Coutt of non positive epoch.
            </summary>
            <param name="rawEpochData">Raw epoch data.</param>
            <param name="minPitchPeriod">Minimum pitch period.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.GetEpochs(System.Single[],System.Single[])">
            <summary>
            Compute Epochs from sample signal.
            </summary>
            <param name="samples">Waveform samples.</param>
            <param name="epochs">Epoch data.</param>
            <returns>Epoch Number.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.SmoothEpochs(System.Single[],System.Single[],System.Single[],System.Single[],System.Int32@,System.Int32)">
            <summary>
            SmoothEpochs adds and removes epochs to complete a smooth
            Epoch sequence.
            </summary>
            <exception cref="T:System.OverflowException">Thrown when fail to convert
            Epoch from Single to int.</exception>
            <param name="positiveSamples">Positive waveform samples.</param>
            <param name="smoothSamples">Smoothed waveform samples.</param>
            <param name="epochs">Epoch data.</param>
            <param name="smoothEpochs">Smoothed epoch data.</param>
            <param name="epochNumber">Epoch number.</param>
            <param name="minPulseAmplitude">Minimum pulse amplitude.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.FindEpoch(System.Single[],System.Single[],System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Finds at what sample to insert an epoch.
            </summary>
            <exception cref="T:System.OverflowException">Thrown when fail to convert
            Epoch from Single to int.</exception>
            <param name="positiveSamples">Positive waveform samples.</param>
            <param name="epochs">Epoch data.</param>
            <param name="epochIndex">Epoch index.</param>
            <param name="left">Search at the left side of epoch or not.</param>
            <param name="pitch">Pitch.</param>
            <param name="minPulseAmplitude">Minimum pulse amplitude.</param>
            <param name="voiced">Voiced epoch or not.</param>
            <returns>Index of maximum pulse.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.InsertEpoch(System.Single[],System.Single[],System.Single[],System.Single[],System.Int32,System.Boolean,System.Int32)">
            <summary>
            Inserts an epoch (voiced or unvoiced) at a given sample.
            </summary>
            <exception cref="T:System.OverflowException">Thrown when fail to convert
            Epoch from Single to int.</exception>
            <param name="positiveSamples">Positive waveform samples.</param>
            <param name="smoothSamples">Smoothed waveform samples.</param>
            <param name="epochs">Epoch data.</param>
            <param name="smoothEpochs">Smoothed epoch data.</param>
            <param name="epochNumber">Epoch number.</param>
            <param name="voiced">Voiced epoch or not.</param>
            <param name="sampleIndex">Sample index.</param>
            <returns>New epoch number.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.MinMax(System.Single[],System.Single@,System.Single@)">
            <summary>
            MinMax computes tha maximum and minimum values of an input array.
            </summary>
            <param name="inputSamples">Input samples.</param>
            <param name="minValue">Minimum value.</param>
            <param name="maxValue">Maximum value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.Preemphasis(System.Single[],System.Single[])">
            <summary>
            The Preemphasis routine applies preemphasis on the input
            Data. Essentially this is a high pass filter that is very
            Efficient and simple.
            </summary>
            <param name="inputSamples">Input samples.</param>
            <param name="outputSamples">Output samples.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.LowPass(System.Single[],System.Single[],System.Int32)">
            <summary>
            LowPass filter using a rectangular window. It is very fast
            Though not very sharp. In general, probably good enough.
            </summary>
            <param name="inputEpochs">Input epoch data.</param>
            <param name="outputEpochs">Output epoch data.</param>
            <param name="windowSize">Window size.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.LowPass2(System.Single[],System.Single[])">
            <summary>
            A low-pass filter is a filter that passes low frequencies well,
            But attenuates (or reduces) frequencies higher than the cutoff frequency.
            </summary>
            <param name="inputSamples">Input waveform samples.</param>
            <param name="outputSamples">Output waveform samples.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.MedianSmoothing(System.Single[],System.Single[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Smooth the epoch sequence.
            </summary>
            <param name="inputEpochs">Input epoch data.</param>
            <param name="outputEpochs">Ouput epoch data.</param>
            <param name="epochNumber">Epoch number.</param>
            <param name="order">Order of smoothing.</param>
            <param name="minValue">Minimum value.</param>
            <param name="maxValue">Maximum value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.Middle(System.Single[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate the property epoch value that make epoch array more smooth.
            </summary>
            <param name="bufferEpochs">Epoch data.</param>
            <param name="order">Order of smoothing.</param>
            <param name="minValue">Minimum value.</param>
            <param name="maxValue">Maximum value.</param>
            <returns>New epoch value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.AdjustFreq(System.Int16[],System.Single[],System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adjust epoch, response with AdjustFreq tool.
            </summary>
            <exception cref="T:System.OverflowException">Thrown when fail to convert
            Epoch from Single to int.</exception>
            <param name="waveSamples">EGG waveform sampples.</param>
            <param name="epochs">Epoch data.</param>
            <param name="positive">Positive waveform.</param>
            <param name="samplesPerSecond">Samples per second.</param>
            <param name="frameSize">Frame size.</param>
            <param name="lpcOrder">Order og LPC.</param>
            <param name="offsetBenchmark">Offset bench mark.</param>
            <returns>New epoch data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.HandleCutPoint(System.Int32[],System.Int32,System.Single[],System.Int32,System.Int32,System.Int32)">
            <summary>
            We could handle even/odd, but really it should be very stationary,
            And we're only doing integer offsets anyway, so it doesn't matter
            Then, insert a sample delay, so that the cut-point does not occur
            At the maximum energy point.median below iOffset = rgiOffset[i/2]
            - cOffset; even more robust : find range of 3 (now 5) that is a mode,
            Then find the mode within this. I.E. more offsets are 25, 26, or 27
            Than any other three consecutive offsets. Then choose the one of 25,
            26, or 27 that has the most.  This will prevent a single frequent
            Number from being the offset (sometimes happens for certain vowels
            And nasals, I think).
            </summary>
            <param name="epochOffsets">Epoch offet array.</param>
            <param name="epochOffsetNumber">Number of epoch offset.</param>
            <param name="epochs">Epoch data.</param>
            <param name="epochOffset">Epoch offset.</param>
            <param name="epochNumber">Epoch number.</param>
            <param name="offsetBenchmark">Offset benchmark.</param>
            <returns>New epoch data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.FlipWobbleEpoch(System.Int32[])">
            <summary>
            Get final epoch , response with read_freq tool.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when
            The epochs parameter is null or doesn't contain any elements.</exception>
            <param name="epochs">Epoch data to flip.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.FindEpochRange(System.Int32,System.Int32)">
            <summary>
            Find the epochs range for a given samples range.
            </summary>
            <param name="sampleOffset">The beginning offset of the samples range.</param>
            <param name="sampleEnd">The end offset of the samples range.</param>
            <returns>Epoch range with begin and end offset of the found epochs range.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.MinPitchFreq">
            <summary>
            Gets or sets min pitch frequenct that used when estimate epoch in Load method.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.MaxPitchFreq">
            <summary>
            Gets or sets max pitch frequenct that used when estimate epoch in Load method.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.WaveFile">
            <summary>
            Gets Loaded WaveFile.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.SamplesPerSecond">
            <summary>
            Gets The data can be getted from WaveFile property,
            Keep it for compatible with older version.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.SampleNumber">
            <summary>
            Gets Sample number count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.Epoch">
            <summary>
            Gets Epoch data of this file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.Epoch8k">
            <summary>
            Gets 8k epoch data of this file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.EggAcousticFeature.EpochPosition">
            <summary>
            Gets Epoch related position of this file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.EpochFile">
            <summary>
            Epoch file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EpochFile.ReadAllData(System.String,System.Int32)">
            <summary>
            Read all compressed epoch data from file path.
            </summary>
            <param name="filePath">File to read from.</param>
            <param name="offset">Byte offset in the file to start reading from.</param>
            <returns>Loaded byte array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EpochFile.ReadAllDecodedData(System.String,System.Int32)">
            <summary>
            Read all decoded epoch data from file.
            </summary>
            <param name="filePath">File to read from.</param>
            <param name="offset">Byte offset in the file to start reading from.</param>
            <returns>Loaded int array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EpochFile.WriteAllDecodedData(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Write all decoded epoch data into file.
            </summary>
            <param name="filePath">File to save to.</param>
            <param name="targetEpochData">Epoch data to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EpochFile.CompressEpoch(System.Int32[],System.Int32,System.Int32,System.Byte[])">
            <summary>
            Compress epoch data from integer encoding to byte encoding
            <param />
            If outEpochs is null, the length of the compressed epoch will be return.
            </summary>
            <param name="sourceEpochs">Source epoch data to compress.</param>
            <param name="offset">Start offset to compress.</param>
            <param name="length">Length of epoch to compress.</param>
            <param name="outEpochs">Compressed epoch data.</param>
            <returns>Length of compressed epoch data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EpochFile.DecompressEpoch(System.Byte[],System.Int32[])">
            <summary>
            Decompress epoch data from byte encoding to integer encoding
            <param />
            If outEpochs is null, the length of the decompressed epoch will be return.
            </summary>
            <param name="epochs">Source epoch data to decompress.</param>
            <param name="outEpoch">Decompressed epoch data.</param>
            <returns>Length of decompressed epoch data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EpochFile.EpochToOffset(System.Int32[])">
            <summary>
            Used to transfer epoch values to position values. For example,
            If epoch buffer is -50, -40, 60, 70, then the position buffer will
            Be: -50, -90, 150, 220. The sign of position ones are the same as 
            The corresponding buffer ones to indicate voiced/unvoiced.
            </summary>
            <param name="epochs">Epoch data to convert.</param>
            <returns>Offset point array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EpochFile.EpochTo8k(System.Int32[])">
            <summary>
            Convert 16k epoch to 8k epoch data.
            </summary>
            <param name="epoch">Source 16k Hz epoch data.</param>
            <returns>8k Hz epoch data.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.EpochExtractor">
            <summary>
            Description of EggConverter class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.EpochExtractor.EggToEpoch(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Extract epoch data from EGG files.
            </summary>
            <param name="mapFile">Map file list.</param>
            <param name="wave16kDir">16k Hz waveform directory.</param>
            <param name="egg16kDir">16k Hz EGG directory.</param>
            <param name="epochDir">Epoch directory.</param>
            <param name="skipExist">Falg to indicate whether skipping existing target file.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.LpcAnalyzer">
            <summary>
            LPC analyzer.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.PerceptualBandwidth">
            <summary>
            Parameter used to compute LPC parameters of desired region.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.Analyze(System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32)">
            <summary>
            Compute LPC parameters for a region of the input waveform.
            </summary>
            <param name="epochs">Epoch data.</param>
            <param name="epochOffset">Epoch offset point in the data.</param>
            <param name="epochNumber">Epoch number.</param>
            <param name="window">Filter window.</param>
            <param name="frameSize">Frame size.</param>
            <param name="samples">Waveform samples.</param>
            <param name="sampleNumber">Sample number.</param>
            <param name="samplesPerSecond">Samples per second.</param>
            <param name="lpcFrames">LPC frames.</param>
            <param name="lpcOrder">LPC order.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.CreateHammingWindow(System.Int32)">
            <summary>
            Generates a Hamming window with given window size.
            </summary>
            <param name="size">Windows size.</param>
            <returns>Filter window.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.Invert(System.Single[])">
            <summary>
            Change sign of the waveform.
            </summary>
            <param name="samples">Waveform samples.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.RemoveDirectCurrent(System.Int16[])">
            <summary>
            Preprocess input waveform samples. remove DC (direct current).
            </summary>
            <param name="samples">Waveform samples.</param>
            <returns>Waveform samples with direct current removed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.AdjustStartStop(System.Single[],System.Int32@,System.Int32@)">
            <summary>
            Finds exact pitch-synchronous frames to cut for all the samples
            That has the epochs.
            </summary>
            <param name="epochs">Epoch data.</param>
            <param name="epochStartIndex">Start index.</param>
            <param name="epochStopIndex">Stop index.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.FindBoundryEpoch(System.Int32,System.Int32,System.Single[],System.Int32@,System.Int32@)">
            <summary>
            Finds exact pitch-synchronous frames to cut between startSample
            And stopSample.
            </summary>
            <param name="startSample">Start sample index.</param>
            <param name="stopSample">Stop sample index.</param>
            <param name="epochs">Epoch data.</param>
            <param name="epochStartIndex">Start epoch index.</param>
            <param name="epochStopIndex">Stop epoch index.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.InverseLpcFilter(System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32)">
            <summary>
            FIR Filter.
            This routine computes the residual signal.
            PFilter[0] is supposed to contain the filter gain.
            </summary>
            <param name="waveSamples">Waveform samples.</param>
            <param name="sampleOffset">Sample offset.</param>
            <param name="sampleNumber">Sample number.</param>
            <param name="lpcFrames">LPC frames.</param>
            <param name="lpcFrameOffset">LPC frame offset.</param>
            <param name="lpcOrder">LPC order.</param>
            <param name="residualSamples">Residual samples.</param>
            <param name="residualSampleOffset">Residual sample offset.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.AnalyzeLpcFrame(System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Single[],System.Int32)">
            <summary>
            Analyzes a frame of speech, decomposing it into excitation and
            Linear filter. In this case we use LPC parameters.
            </summary>
            <param name="samples">Waveform samples.</param>
            <param name="sampleOffset">Sample offset.</param>
            <param name="window">Filter window.</param>
            <param name="lpcOrder">LPC order.</param>
            <param name="alpha">Alpha .</param>
            <param name="lpc">LPC frames.</param>
            <param name="lpcOffset">LPC frame offset.</param>
            <returns>false : Durbin recursion ends prematurely at frame,
            it doesn't affect the process.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.PoleExpansion(System.Single[],System.Single,System.Single[],System.Int32)">
            <summary>
            Expands bandwidth of all poles in an LPC system.
            </summary>
            <param name="inputLPC">Input LPC.</param>
            <param name="alpha">Alpha.</param>
            <param name="outputLpc">Output LPC.</param>
            <param name="outputLpcOffset">Offset of output LPC.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.Durbin(System.Double[],System.Single[]@,System.Double@)">
            <summary>
            Classical Durbin recursion on the autocorrelation coefficients
            To compute the linear prediction coefficients. The reflection
            Coefficients are also computed.
            The sign convention used defines the first reflection coefficient
            As the normalized first autocorrelation coefficient, which results
            In positive values of rc[0] for voiced speech.
            </summary>
            <param name="autos">Autos.</param>
            <param name="lpc">LPC.</param>
            <param name="resid">Residual.</param>
            <returns>True if succeeded, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.LpcAnalyzer.CalcAcc(System.Single[],System.Int32,System.Int32)">
            <summary>
            Calculate
                from input signal x[0], x[1], ..., x[N - 1]
                to autocorrelation coefficients (ACC) R[0], R[1], ..., R[p].
            </summary>
            <param name="samples">Samples.</param>
            <param name="windowLength">Window length.</param>
            <param name="order">Predictor order.</param>
            <returns>Autocorrelation coefficients.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.BandpassFilter">
            <summary>
            FIR Bandpass filter, filter waveform or EGG file.
            The filter which transmits energy in a specified wavelength band 
            But rejects energy above and below.
            The main function of such a filter in a transmitter is to limit the
            Bandwidth of the output signal to the minimum necessary to convey data
            At the desired speed and in the desired form.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.BandpassFilter.#ctor(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.BandpassFilter"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the parameter
            Is invalid.</exception>
            <param name="lowFreq">Should not be negatived.</param>
            <param name="highFreq">Should not be less than lowFreq.</param>
            <param name="order">Should not be negative.</param>
            <param name="samplesPerSecond">Only support 16k.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.BandpassFilter.#ctor(System.Double,System.Double,System.Int32,Microsoft.Tts.Offline.Waveform.WindowType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.BandpassFilter"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the parameter
            Is invalid.</exception>
            <param name="lowFreq">Should not be negative.</param>
            <param name="highFreq">Should not be less than lowFreq.</param>
            <param name="order">Should not be negatived.</param>
            <param name="windowType">Window used for filter design.</param>
            <param name="samplesPerSecond">Only support 16k.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.BandpassFilter.Filter(System.Int16[])">
            <summary>
            Filter soundData.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when
            The soundData parameter is null or doesn't contain
            Any elements.</exception>
            <exception cref="T:System.IO.InvalidDataException">Thrown when
            _window is null or doesn't contain any elements.</exception>
            <param name="soundData">Sound samples.</param>
            <returns>Filtered soundData.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.BandpassFilter.Filter(System.String,System.String)">
            <summary>
            Filter one wave file.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Thrown when
            Can't find file specified by sourceWaveFilePath.</exception>
            <exception cref="T:System.IO.InvalidDataException">Thrown when
            _window is null or doesn't contain any elements.</exception>
            <exception cref="T:System.ArgumentException">Thrown when
            The number of samples per second is not 16k.</exception>
            <param name="sourceWaveFilePath">Source waveform file to filter.</param>
            <param name="targetWaveFilePath">Target waveform file to save to filtering result.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.BandpassFilter.BuildFilter(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Build bandpass filter coefficients array with Kaiser window.
            </summary>
            <param name="lowFreq">Select frequency of low-pass band edge.</param>
            <param name="highFreq">Select frequency of high-pass band edge.</param>
            <param name="order">Filter order.</param>
            <param name="samplesPerSecond">Samples per second.</param>
            <returns>Filter.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.BandpassFilter.BuildFilter(System.Double,System.Double,System.Int32,Microsoft.Tts.Offline.Waveform.WindowType,System.Int32)">
            <summary>
            Build bandpass filter coefficients array.
            </summary>
            <param name="lowFreq">Select frequency of low-pass band edge.</param>
            <param name="highFreq">Select frequency of high-pass band edge.</param>
            <param name="order">Filter order.</param>
            <param name="windowType">Window used for filter design.</param>
            <param name="samplesPerSecond">Samples per second.</param>
            <returns>Filter.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.BandpassFilter.Init(System.Double,System.Double,System.Int32,Microsoft.Tts.Offline.Waveform.WindowType,System.Int32)">
            <summary>
            The init function.
            </summary>
            <param name="lowFreq">Low frequency.</param>
            <param name="highFreq">High frequency.</param>
            <param name="order">The order.</param>
            <param name="windowType">Word type.</param>
            <param name="samplesPerSecond">Sample rate.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.BandpassFilter.LowFreq">
            <summary>
            Gets Lowest frequency that estimate after filter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.BandpassFilter.HighFreq">
            <summary>
            Gets Highest frequency that estimate after filter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.BandpassFilter.Order">
            <summary>
            Gets Bandpass window's parameter.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.SampleConverter">
            <summary>
            Waveform sample value converter.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.SampleConverter._ulawLookUpTable">
            <summary>
            Lookups table for fast linear-to-ulaw mapping.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.SampleConverter.LinearToUlaw(System.Int16)">
            <summary>
            Converts the value of sample from signed 16 bit linear sample to ulaw sample.
            </summary>
            <param name="sample">The source sample value in linear format.</param>
            <returns>The converted ulaw sample value.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.SilenceAffix">
            <summary>
            Class definition for silence affixation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.SilenceAffix.AffixWaveFile(System.Single,System.String,System.String)">
            <summary>
            Affix silence to waveform files directory, prefix and subfix.
            </summary>
            <param name="silenceDuration">Silence duration to affix.</param>
            <param name="sourceWave16kDir">Source waveform files directory.</param>
            <param name="targetWave16kDir">Target waveform files directory.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.SilenceAffix.ShiftSegmentFiles(System.Single,System.String,System.String)">
            <summary>
            Shift segment data with certain silence duration.
            </summary>
            <param name="silenceDuration">Silence duration in second.</param>
            <param name="sourceDir">Source segment directory.</param>
            <param name="targetDir">Target segment directory.</param>
            <returns>Data error set found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.SilenceAffix.BuildSilenceWaveFile(System.Single)">
            <summary>
            Build silence waveform file.
            </summary>
            <param name="silenceDuration">Silence duration.</param>
            <returns>Silence waveform file path.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.SilenceAffix.AffixWaveFiles(System.String,System.String,Microsoft.Tts.Offline.Waveform.WaveFile)">
            <summary>
            Affix waveform file to certain waveform file.
            </summary>
            <param name="sourceWaveDir">Source waveform file directory.</param>
            <param name="targetWaveDir">Target waveform file directory.</param>
            <param name="affixingFile">Affixing waveform file.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature">
            <summary>
            Calculate the wave acoustic features.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature.Load(System.String)">
            <summary>
            Load a wave file for processing.
            </summary>
            <param name="filePath">Waveform file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature.Load(Microsoft.Tts.Offline.Waveform.WaveFile)">
            <summary>
            Load a wave file for processing.
            </summary>
            <param name="waveFile">Wave file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature.CalculateRms(System.Single,System.Single)">
            <summary>
            Root means quare from time.
            </summary>
            <param name="fromTime">The start postion of the wave range to calculation, in second.</param>
            <param name="duration">The duration or length of the wave range, in second.</param>
            <returns>RMS of samples in the given range.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature.CalculateRms(System.Int32,System.Int32)">
            <summary>
            Root means quare from sample.
            </summary>
            <param name="fromSample">The start postion of the wave range to calculation, in sample.</param>
            <param name="sampleNumber">The duration or length of the wave range, in sample.</param>
            <returns>RMS of samples in the given range.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature.CalculateEnergyRms(System.Int32,System.Int32)">
            <summary>
            Root mean square for energy feature.
            </summary>
            <param name="fromSample">The start postion of the wave range to calculation, in sample.</param>
            <param name="sampleNumber">The duration or length of the wave range, in sample.</param>
            <returns>RMS of samples in the given range.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature.CalculateWindowRms(System.Int32,System.Int32)">
            <summary>
            Calculate root mean square based on window.
            </summary>
            <param name="fromSample">The duration or length of the wave range, in sample.</param>
            <param name="windowWidth">The sample number in the window.</param>
            <returns>RMS of the samples in the window.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature.SampleNumber">
            <summary>
            Gets Total sample number of wave file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature.SamplesPerSecond">
            <summary>
            Gets The sampling rate of the wave file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveAcousticFeature.FilePath">
            <summary>
            Gets File path of the wave file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.CrossCorrelation">
            <summary>
            CrossCorrelation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.CrossCorrelation.CalcCorrelation(System.Int16[],System.Int16[],System.Boolean)">
            <summary>
            Calculate the Cross Correlation of two short arrays.
            </summary>
            <param name="arrayA">Array A.</param>
            <param name="arrayB">Array B.</param>
            <param name="normalize">If normalize or not.</param>
            The Formulae is result[2N-1] = IFFT(FFT(arrayA)*Conjucate(FFT(arrayB)))
            <returns>Cross Correlation result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.CrossCorrelation.Expand(System.Int32)">
            <summary>
            Expand the length of original array to the least 2's power that greater than (2 * length - 1).
            </summary>
            <param name="length">Input length.</param>
            <returns>The least 2's power greater than length.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.ResampleFilter">
            <summary>
            Resample wave44k to wave16k.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.ResampleFilter.SupportedBitsPerSample">
            <summary>
            The bits per sample of the source waveform file supported.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.ResampleFilter.SupportedChannels">
            <summary>
            The channel number of the source waveform file supported.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ResampleFilter.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.ResampleFilter"/> class.
            </summary>
            <param name="inputSamplesPerSecond">Samples per second of input waveform file.</param>
            <param name="outputSamplesPerSecond">Samples per second of output waveform file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ResampleFilter.Resample(System.String,System.String,System.Int32)">
            <summary>
            Resample the source waveform file to 16k Hz waveform file.
            </summary>
            <param name="sourceFile">Location of source waveform file.</param>
            <param name="targetFile">Location of target waveform file.</param>
            <param name="targetSamplesPerSecond">Samples per second of the target waveform file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ResampleFilter.Resample(Microsoft.Tts.Offline.Waveform.WaveFile,System.Int32)">
            <summary>
            Convert the WaveFile instance into another samples per second.
            </summary>
            <param name="waveFile">Waveform instance to resample.</param>
            <param name="targetSamplesPerSecond">Samples per second of the target waveform file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ResampleFilter.Resample(System.Int16[])">
            <summary>
            Do resamples, only support 44.2k to 16k.
            </summary>
            <param name="inputSamples">Input samples.</param>
            <returns>Output samples.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ResampleFilter.Blackman(System.Int32,System.Boolean)">
            <summary>
            Returns a vector with a Blackman window of the specified length.
            </summary>
            <param name="length">Window length.</param>
            <param name="symmetric">Whether is symmetric.</param>
            <returns>Blackman window.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ResampleFilter.WindowedLowPass(System.Single,System.Single)">
            <summary>
            Creates a low pass filter using the windowing method.
            DCutOff is spec. in normalized frequency.
            </summary>
            <param name="cutOff">Cut off value.</param>
            <param name="gain">Gain value.</param>
            <returns>Low passed window data.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ResampleFilter.FindResampleFactors(System.Int32,System.Int32)">
            <summary>
            Find resample factors.
            </summary>
            <param name="inputSamplesPerSecond">Input samples per second.</param>
            <param name="outputSamplesPerSecond">Output samples per second.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WindowType">
            <summary>
            Window type enum.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WindowType.Bartlett">
            <summary>
            Bartlett (triangular) window.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WindowType.Kaiser">
            <summary>
            Kaiser window.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.Window">
            <summary>
            Build window vectors.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Window.Bartlett(System.Int32)">
            <summary>
            Build the symetric Bartlett (triangular) window, with the peak as 1 and two ends as 0.
            </summary>
            <param name="length">Window length.</param>
            <returns>Window vector.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Window.Kaiser(System.Int32,System.Double)">
            <summary>
            Build symetric Kaiser window, with peak as 1.
            </summary>
            <param name="length">The Length.</param>
            <param name="beta">The beta value.</param>
            <returns>The kaiser double value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.Window.BesselI0(System.Double)">
            <summary>
            The 0th order modified Bessel funtion
            Reference: http://mathworld.wolfram.com/ModifiedBesselFunctionoftheFirstKind.html.
            </summary>
            <param name="x">The input x.</param>
            <returns>The output double value.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar">
            <summary>
            Horizontal scale bar.
            </summary>
            <summary>
            Horizontal scale bar.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.UpdateRange(System.Int32,System.Int32)">
            <summary>
            Update range.
            </summary>
            <param name="offset">New sample offset.</param>
            <param name="length">New sample length.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrrid OnMouseDown event of base class.
            </summary>
            <param name="e">MouseEventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrrid OnMouseUp event of base class.
            </summary>
            <param name="e">MouseEventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrrid OnMouseMove event of base class.
            </summary>
            <param name="e">MouseEventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override OnPaint event of base class.
            </summary>
            <param name="e">PaintEventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.OnResize(System.EventArgs)">
            <summary>
            Override OnResize event of base class.
            </summary>
            <param name="e">EventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.PredictSuitableUnitLevel(System.Int32)">
            <summary>
            Predict stuitable unit level.
            </summary>
            <param name="width">Total width.</param>
            <returns>Unit level.</returns>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            The contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.ViewShift">
            <summary>
            View shifted event.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.FixedHeight">
            <summary>
            Gets Fixed height.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.WaveFile">
            <summary>
            Gets or sets WaveFile.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.SampleLength">
            <summary>
            Gets or sets SampleLength.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.HorizontalScaleBar.SampleOffset">
            <summary>
            Gets or sets SampleOffset.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.ArbgPixel">
            <summary>
            Arbg (Alpha Red Green Blue) Pixel.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ArbgPixel.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.ArbgPixel"/> struct.
            </summary>
            <param name="alpha">Alpha.</param>
            <param name="red">Red.</param>
            <param name="green">Green.</param>
            <param name="blue">Blue.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ArbgPixel.op_Equality(Microsoft.Tts.Offline.Waveform.ArbgPixel,Microsoft.Tts.Offline.Waveform.ArbgPixel)">
            <summary>
            Operator ==.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ArbgPixel.op_Inequality(Microsoft.Tts.Offline.Waveform.ArbgPixel,Microsoft.Tts.Offline.Waveform.ArbgPixel)">
            <summary>
            Operator !=.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>True if not equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ArbgPixel.Equals(System.Object)">
            <summary>
            Test equal with other instance.
            </summary>
            <param name="obj">Other instance.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ArbgPixel.GetHashCode">
            <summary>
            Get hash code.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.UnsafeBitmap">
            <summary>
            Unsafe Bitmap.
            </summary>
            <SecurityNote>
                Critical: This code accesses an unsafe code block
            </SecurityNote>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.UnsafeBitmap.#ctor(System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.UnsafeBitmap"/> class.
            </summary>
            <param name="bitmap">Bitmap.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.UnsafeBitmap.Dispose">
            <summary>
            Releases all resources used by this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.UnsafeBitmap.LockBitmap">
            <summary>
            Lock bitmap.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.UnsafeBitmap.SetAt(System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Set ARBG at given point.
            </summary>
            <param name="x">X.</param>
            <param name="y">Y.</param>
            <param name="alpha">Alpha.</param>
            <param name="red">Red.</param>
            <param name="green">Green.</param>
            <param name="blue">Blue.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.UnsafeBitmap.SetAt(System.Int32,System.Int32,Microsoft.Tts.Offline.Waveform.ArbgPixel)">
            <summary>
            Set ArbgPixel at given point.
            </summary>
            <param name="x">X.</param>
            <param name="y">Y.</param>
            <param name="waveColor">Color.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.UnsafeBitmap.UnlockBitmap">
            <summary>
            Unlock bitmap.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.UnsafeBitmap.Detach">
            <summary>
            Detach.
            </summary>
            <returns>Bitmap.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.UnsafeBitmap.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by this instance.
            </summary>
            <param name="disposing">Release unmanaged resources.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.UnsafeBitmap.Bitmap">
            <summary>
            Gets Bitmap.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.VerticalScaleBar">
            <summary>
            Vertical scale bar.
            </summary>
            <summary>
            Vertical scale bar.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.VerticalScaleBar"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrrid OnPaint event of base class.
            </summary>
            <param name="e">PaintEventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.OnResize(System.EventArgs)">
            <summary>
            Overrrid OnResize event of base class.
            </summary>
            <param name="e">EventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.DrawWaveformScale(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Draw waveform scale.
            </summary>
            <param name="pe">Event.</param>
            <param name="rect">Region to draw on.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.DrawSpectrumScale(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Draw spectrum scale.
            </summary>
            <param name="pe">Event.</param>
            <param name="rect">Region to draw on.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.PredictSpectrumUnit(System.Int32)">
            <summary>
            Predict spectrum unit.
            </summary>
            <param name="width">Width of the pexil.</param>
            <returns>Spectrul unit.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.PredictWaveformUnit(System.Int32)">
            <summary>
            Predict Waveform Unit.
            </summary>
            <param name="width">Width of the pexil.</param>
            <returns>Waveform unit.</returns>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            The contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.FixedWidth">
            <summary>
            Gets Fixed width.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.VerticalScaleBar.IsSpectrum">
            <summary>
            Gets or sets a value indicating whether Is spectrum view.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WaveControl">
            <summary>
            WaveControl.
            </summary>
            <summary>
            WaveControl.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.WaveControl"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveControl.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveControl.OnResize(System.EventArgs)">
            <summary>
            Overrrid OnResize event of base class.
            </summary>
            <param name="e">EventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveControl.OnHorScaleBarViewShift(System.Object,Microsoft.Tts.Offline.Waveform.ViewShiftEventArgs)">
            <summary>
            Handle horizon scale bar view shift.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">View shift event.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveControl.OnWaveformViewUpdated(System.Object,Microsoft.Tts.Offline.Waveform.ViewUpdateEventArgs)">
            <summary>
            Handle waveform view updated.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">View update event.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveControl.UpdateSize">
            <summary>
            Update size.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            The contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Waveform.WaveControl.ViewShift">
            <summary>
            View shifted event.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveControl.WaveFile">
            <summary>
            Gets or sets WaveFile.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveControl.WaveformView">
            <summary>
            Gets WaveformView.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveControl.VerticalScaleBar">
            <summary>
            Gets VerticalScaleBar.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveControl.ShowVerticalScaleBar">
            <summary>
            Gets or sets a value indicating whether ShowVerScaleBar.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveControl.ShowHorizontalScaleBar">
            <summary>
            Gets or sets a value indicating whether ShowVerScaleBar.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.WaveView">
            <summary>
            WaveView.
            </summary>
            <summary>
            WaveView.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveView.PictureQuality">
            <summary>
            The bigger the worse, the samllest is 1.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.WaveView"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.Shift(System.Int32)">
            <summary>
            Shift.
            </summary>
            <param name="sampleShift">Sample number to shift.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override OnPaint.
            </summary>
            <param name="e">PaintEventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.OnResize(System.EventArgs)">
            <summary>
            Override Resize.
            </summary>
            <param name="e">EventArgs.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.UpdateViewSampleWindow">
            <summary>
            Update view sample window.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.DrawTimeMarks(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw time marks.
            </summary>
            <param name="graphics">Graphics.</param>
            <param name="clip">Clip.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.DrawWaveform(System.Int32,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Draw waveform view.
            </summary>
            <param name="sampleOffset">Sample offset.</param>
            <param name="sampleLength">Sample length.</param>
            <param name="clip">Clip.</param>
            <returns>Bitmap created.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.DrawSpectrum(System.Int32,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Draw spectrum view.
            </summary>
            <param name="smapleOffset">Sample offset.</param>
            <param name="sampleLength">Sample length.</param>
            <param name="clip">Clip.</param>
            <returns>Bitmap created.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.EstimateViewWindow">
            <summary>
            Estimate the view window.
            </summary>
            <returns>Int [] {offset, length}.</returns>
        </member>
        <member name="F:Microsoft.Tts.Offline.Waveform.WaveView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.WaveView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            The contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Microsoft.Tts.Offline.Waveform.WaveView.ViewUpdated">
            <summary>
            View updated event.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveView.ShowMarkLabel">
            <summary>
            Gets or sets a value indicating whether ShowMarkLabel.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveView.PositionRatioX">
            <summary>
            Gets or sets CenterRatioX.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveView.ZoomX">
            <summary>
            Gets or sets ZoomX.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveView.TimeMarks">
            <summary>
            Gets TimeMarks.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveView.IsSpectrum">
            <summary>
            Gets or sets a value indicating whether IsSpectrum.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.WaveView.WaveFile">
            <summary>
            Gets or sets WaveFile.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.TimeMark">
            <summary>
            TimeMark.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.TimeMark.#ctor(System.String,System.Single,System.Drawing.Pen)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.TimeMark"/> class.
            </summary>
            <param name="label">Label of this time mark.</param>
            <param name="offset">Sample offset.</param>
            <param name="pen">Pen to draw this mark.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.TimeMark.Dispose">
            <summary>
            Releases all resources used by this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.TimeMark.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by this instance.
            </summary>
            <param name="disposing">Release unmanaged resources.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.TimeMark.Label">
            <summary>
            Gets or sets Label.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.TimeMark.Pen">
            <summary>
            Gets or sets Pen.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.TimeMark.Offset">
            <summary>
            Gets or sets Offset.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.ViewShiftEventArgs">
            <summary>
            View shift EventArgs.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ViewShiftEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.ViewShiftEventArgs"/> class.
            </summary>
            <param name="shift">Number of shifted samples.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.ViewShiftEventArgs.SampleShift">
            <summary>
            Gets or sets SampleShift.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.ViewUpdateEventArgs">
            <summary>
            Data is in sample.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.ViewUpdateEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Waveform.ViewUpdateEventArgs"/> class.
            </summary>
            <param name="length">Length.</param>
            <param name="viewOffset">View offset.</param>
            <param name="viewLength">View length.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.ViewUpdateEventArgs.Length">
            <summary>
            Gets or sets Length.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.ViewUpdateEventArgs.ViewLength">
            <summary>
            Gets or sets ViewLength.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.ViewUpdateEventArgs.ViewOffset">
            <summary>
            Gets or sets Offset.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Waveform.MedianFilter">
            <summary>
            The class to implement median filter.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.MedianFilter.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the MedianFilter class.
            </summary>
            <param name="windowLength">The window length of this filter.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.MedianFilter.Filter(System.Collections.Generic.IList{System.Single})">
            <summary>
            Filters the data.
            </summary>
            <param name="data">The given data will be filtered.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Waveform.MedianFilter.Filter(System.Collections.Generic.IList{System.Single},System.Func{System.Single,System.Boolean},System.String)">
            <summary>
            Filters the data.
            </summary>
            <param name="data">The given data will be filtered.</param>
            <param name="predicate">The predication to indicate the value is an invalidate value or not.</param>
            <param name="uvFile">Uv file.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Waveform.MedianFilter.WindowLength">
            <summary>
            Gets the window length of this filter.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ModeEngine.ModeEngine">
            <summary>
            This abstract class is used to organize the mode engine of VoiceModelTrainer.
            Every step in ModeEngine will be extended from this class.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ModeEngine.ModeEngine._modeName">
            <summary>
            The name of the mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ModeEngine.ModeEngine._modeConfig">
            <summary>
            The location of config file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ModeEngine.ModeEngine.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.ModeEngine.ModeEngine"/> class.
            </summary>
            <param name="modeName">The name of the mode.</param>
            <param name="modeConfig">The location of configure file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ModeEngine.ModeEngine.Execute">
            <summary>
            The abstract method of execute.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HmmModelType">
            <summary>
            HMM model types.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.Invalid">
            <summary>
            Invalid model type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.Lsp">
            <summary>
            LSP model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.FundamentalFrequency">
            <summary>
            F0 model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.StateDuration">
            <summary>
            State-based duration model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.VoicedUnvoiced">
            <summary>
            Unvoiced/voiced model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.Gain">
            <summary>
            Gain model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.PhoneDuration">
            <summary>
            Phone-based duration model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.Mbe">
            <summary>
            Multi-Band Excitation model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.Power">
            <summary>
            Power model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.GuidanceLsp">
            <summary>
            CodecLSP model.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmModelType.PitchMarker">
            <summary>
            Pitch marker mdoel.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.SpsModeling">
            <summary>
            Modeling configuration of statistics parameter speech synthesis.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.SpsModeling.DefaultStateCount">
            <summary>
            Default state count for SPS model.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.ModelMappingFile">
            <summary>
            Imiplementation of class ModelMappingFile.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ModelMappingFile.ModelSetNumTag">
            <summary>
            ModelSet Number Tag.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ModelMappingFile.ModelSetNameTag">
            <summary>
            ModelSet Name.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.ModelMappingFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.ModelMappingFile"/> class.
            </summary>
            <param name="fileName">The file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.ModelMappingFile.GetModelMappingSet(Microsoft.Tts.Offline.Htk.HmmModelType)">
            <summary>
            Get model mapping set .
            </summary>
            <param name="type">The hmm model type.</param>
            <returns>Model mapping set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.ModelMappingFile.LoadWaveSegsStrings(System.IO.TextReader,System.Collections.ObjectModel.Collection{System.String},System.UInt32)">
            <summary>
            Load wave segments strings.
            </summary>
            <param name="sr">TextReader to be read.</param>
            <param name="waveSegsStrings">Wave segments strings.</param>
            <param name="waveSegsInfoNum">Wave file number.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.ModelMappingFile.LoadModelMappings(System.IO.TextReader,System.Collections.Generic.Dictionary{System.UInt64,Microsoft.Tts.Offline.Htk.ModelMapping},System.Int64)">
            <summary>
            Load model mappings .
            </summary>
            <param name="sr">TextReader.</param>
            <param name="mappings">Mappings read.</param>
            <param name="modelNum">Model number.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.ModelMappingFile.Load(System.String)">
            <summary>
            Load debbuging mapping file.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.ModelMappingFile.FileName">
            <summary>
            Gets File name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.ModelMappingFile.ModelKeys">
            <summary>
            Gets Model keys. From model name to model key.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.ModelMappingSet">
            <summary>
            Implementation of class ModelMappingSet.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.ModelMappingSet.ModelType">
            <summary>
            Gets or sets Model type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.ModelMappingSet.ModelMappings">
            <summary>
            Gets Model mappings.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.ModelMapping">
            <summary>
            Implementation of class ModelMapping.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.ModelMapping.ParseStringsToSegs">
            <summary>
            Parse strings into segments.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.ModelMapping.ModelKey">
            <summary>
            Gets or sets The key of the model.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.ModelMapping.ModelName">
            <summary>
            Gets or sets Model name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.ModelMapping.WaveSegsInfos">
            <summary>
            Gets The wave segs infomation.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.ModelMapping.WaveSegsStrings">
            <summary>
            Gets The wave segs strings.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.WaveSegsInfo">
            <summary>
            Class WaveSegsInfo.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.WaveSegsInfo.FileName">
            <summary>
            Gets or sets File name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.WaveSegsInfo.WaveSegs">
            <summary>
            Gets Wave segments.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.WaveSegsInfo.Description">
            <summary>
            Gets String description.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.WaveSeg">
            <summary>
            Class WaveSeg.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.WaveSeg.StartTime">
            <summary>
            Gets or sets The start time of this wave segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.WaveSeg.Length">
            <summary>
            Gets or sets The time length of this wave segment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.DecisionTreeHtsExtension">
            <summary>
            Decision tree extension for HTS.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeHtsExtension.ModelType(Microsoft.Tts.Offline.Htk.DecisionForest)">
            <summary>
            Gets the model type of this decision tree.
            </summary>
            <param name="forest">The forest object.</param>
            <returns>The model type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeHtsExtension.ModelType(Microsoft.Tts.Offline.Htk.DecisionTree)">
            <summary>
            Model type.
            </summary>
            <param name="tree">The tree object.</param>
            <returns>The model type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeHtsExtension.StateIndex(Microsoft.Tts.Offline.Htk.DecisionTree)">
            <summary>
            State index in HTK format.
            </summary>
            <param name="tree">The tree object.</param>
            <returns>The state index.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeHtsExtension.EmittingStateIndex(Microsoft.Tts.Offline.Htk.DecisionTree)">
            <summary>
            The index of state in emitting states.
            </summary>
            <param name="tree">The tree object.</param>
            <returns>The emitting state index.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeHtsExtension.StreamIndexes(Microsoft.Tts.Offline.Htk.DecisionTree)">
            <summary>
            Stream indexes of this tree, presenting in HTS models
                for example:  {*-zh+*}[5].stream[2,3,4]
                No stream information in duration:  {*-ax+*}[2]; assume as one stream with index as 1.
            </summary>
            <param name="tree">The tree object.</param>
            <returns>The stream indexes.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeHtsExtension.StreamCount(Microsoft.Tts.Offline.Htk.DecisionTree)">
            <summary>
            Stream count.
            </summary>
            <param name="tree">The tree object.</param>
            <returns>The stream count.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeHtsExtension.PruneStream(Microsoft.Tts.Offline.Htk.DecisionTree,System.Int32)">
            <summary>
            With given stream index, prune one stream from tree
                Note: one stream must be left at least.
            </summary>
            <param name="tree">The tree object.</param>
            <param name="streamIndex">Stream index.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeHtsExtension.ModelType(Microsoft.Tts.Offline.Htk.DecisionTreeNode)">
            <summary>
            Model type in leaf node's node. Return Invalid if as non-leaf node.
            </summary>
            <param name="node">The node object.</param>
            <returns>The model type.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.TtsPhoneSetExtension">
            <summary>
            Extension to TTS phone set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TtsPhoneSetExtension.ToPhone(Microsoft.Tts.Offline.TtsPhoneSet,System.String)">
            <summary>
            Convert phone string label to Phone instance, while considering HTK silence phone.
            </summary>
            <param name="phoneSet">Phone set used to convert.</param>
            <param name="phoneLabel">Phone label string.</param>
            <returns>Phone instance found in the phone set, null if not.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TtsPhoneSetExtension.ToLabel(Microsoft.Tts.Offline.TtsPhoneSet,System.Int32)">
            <summary>
            Converts to Phone Id in phone set table to HTK phone label.
            </summary>
            <param name="phoneSet">Phone set used to convert phone id into phone string label.</param>
            <param name="id">Id of phone to convert to string.</param>
            <returns>Phone string label.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.DecisionForest">
            <summary>
            Implementation of class DecisionForest.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DecisionForest.StateIndexBeginOffset">
            <summary>
            HTK state index begin offset.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DecisionForest class.
            </summary>
            <param name="name">Name of the decision forest.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.#ctor(System.String,System.Collections.Generic.ICollection{Microsoft.Tts.Offline.Htk.Question},System.Collections.Generic.List{Microsoft.Tts.Offline.Htk.DecisionTree})">
            <summary>
            Initializes a new instance of the DecisionForest class.
            </summary>
            <param name="name">The name of the decision forest.</param>
            <param name="questionList">The questions of the decision forest.</param>
            <param name="treeList">The tree list of the decision forest.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.Combine(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Combines given files of forests to a single forest.
            </summary>
            <param name="name">The new forest name.</param>
            <param name="filePaths">The given files of forests to be combined.</param>
            <returns>The new forest which contains all the forests.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.Combine(System.String,System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.Htk.DecisionForest})">
            <summary>
            Combines given forests to a single forest.
            </summary>
            <param name="name">The new forest name.</param>
            <param name="forests">The given forests to be combined.</param>
            <returns>The new forest which contains all the forests.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.SaveQuestions(System.IO.TextWriter)">
            <summary>
            Saves the questions.
            </summary>
            <param name="textWriter">Text writer to save only questions.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.SaveForest(System.IO.TextWriter)">
            <summary>
            Saves the forest.
            </summary>
            <param name="textWriter">Text writer to save only questions.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.Save(System.IO.TextWriter)">
            <summary>
            Saves questions and forest.
            </summary>
            <param name="textWriter">Text writer to save questions and forest.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.SaveQuestions(System.String)">
            <summary>
            Saves the questions.
            </summary>
            <param name="questionFileName">Name of the output file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.SaveForest(System.String)">
            <summary>
            Saves the forest.
            </summary>
            <param name="forestFileName">Name of the output file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.Save(System.String)">
            <summary>
            Saves questions and forest.
            </summary>
            <param name="fileName">Name of the output file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.Load(System.String)">
            <summary>
            Loads the forest from the forest file, for example, .INF file.
            </summary>
            <param name="forestFileName">The location of the input file.</param>
            <returns>DecisionForest.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.BuildPhones(Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Builds phone ids included in this forest.
            </summary>
            <param name="phoneSet">Phone set used to convert phone string label to phone instance.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.ReSortQuestions">
            <summary>
            Rebuilds question list from questions used in decision nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.DeleteLeaves(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Deletes leaf nodes from tree.
            </summary>
            <param name="leafSet">The collection to contain the name of leaf nodes.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForest.PruneStream(System.Int32[])">
            <summary>
            Prunes streams in forest by updating the stream tags in the names of trees.
            </summary>
            <param name="removingStreams">Indexes of streams to remove.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.Name">
            <summary>
            Gets the decision forest name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.Phones">
            <summary>
            Gets the full phone list used in this forest.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.TreeList">
            <summary>
            Gets the tree list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.LeafNodes">
            <summary>
            Gets the full leaf nodes used in this forest.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.NonLeafNodes">
            <summary>
            Gets the full non-leaf nodes used in this forest.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.QuestionList">
            <summary>
            Gets the question list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.StateCount">
            <summary>
            Gets the count of states (HMM), addressed by this decision forest.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.StreamCount">
            <summary>
            Gets the number of streams, addressed in this decision forest.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.StreamIndexes">
            <summary>
            Gets or sets the stream indexes, for each stream in this decision forest, in overall composited models.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.PhoneSet">
            <summary>
            Gets or sets phone set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.PosSet">
            <summary>
            Gets or sets the part of speech set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionForest.Questions">
            <summary>
            Gets questions, the key is the name of the question.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.DecisionTreeNodeType">
            <summary>
            Tree Node type: leaf or non leaf.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DecisionTreeNodeType.NonLeaf">
            <summary>
            Non leaf node type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DecisionTreeNodeType.Leaf">
            <summary>
            Leaf node type.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.DecisionTreeName">
            <summary>
            Functions to parse the naming schema of decision tree in HTK format
            As to tree names, for example:
                {*}
                {*-y+*}
                {*}[2].stream[2,3,4]
                {*}[2]
                {*-y+*}[4].stream[1]
                {*-zh+*}[5].stream[2,3,4].
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeName.ParseStreamIndexes(System.String)">
            <summary>
            Parses stream indexes from macro of tree name.
            </summary>
            <param name="macro">Tree macro name.</param>
            <returns>Stream indexes.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeName.ParseStateIndex(System.String)">
            <summary>
            Parses state index in the decision tree name.
            </summary>
            <param name="macro">Tree macro name.</param>
            <returns>State index.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeName.ParsePhoneLabel(System.String)">
            <summary>
            Parses phone label in the decision tree name.
            </summary>
            <param name="macro">Tree macro name.</param>
            <returns>Phone label.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.DecisionTreeNode">
            <summary>
            Implementation of decision tree node.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DecisionTreeNode.InvalidNodeIndex">
            <summary>
            Invalid node index, used to present leaf node's index.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeNode.GetHashCode">
            <summary>
            Get hash code.
            </summary>
            <returns>The hash code of this object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTreeNode.Equals(System.Object)">
            <summary>
            Test equal with obj.
            </summary>
            <param name="obj">Object to test with.</param>
            <returns>True if equal, otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.Name">
            <summary>
            Gets or sets Name, can be node index ("-5") in decision tree,
            Or state macro name ("zh_logF0_s2_1") in MMF.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.Index">
            <summary>
            Gets Non-leaf node index in decision tree. return InvalidNodeIndex if as leaf node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.Position">
            <summary>
            Gets or sets Position in font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.QuestionName">
            <summary>
            Gets or sets Question name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.QuestionIndex">
            <summary>
            Gets or sets Question index in font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.RefDataOffsets">
            <summary>
            Gets or sets The offsets of this models.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.NodeType">
            <summary>
            Gets or sets the node Type of this tree node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.Parent">
            <summary>
            Gets or sets Parent Node.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.LeftChild">
            <summary>
            Gets or sets the left child node, as No child.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.RightChild">
            <summary>
            Gets or sets the right child node, as Yes child.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTreeNode.LayeredNodes">
            <summary>
            Gets Enumerate current node and its children layer by layer.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.DecisionTree">
            <summary>
            Implementation of decision tree.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DecisionTree.StartSymbol">
            <summary>
            Start Symbol of decision tree nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DecisionTree.EndSymbol">
            <summary>
            End Symbol of decision tree nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DecisionTree.LeafNameChar">
            <summary>
            The char is around the leaf node name, e.g. "a_lsp_s2_1",.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.#ctor">
            <summary>
            Initializes a new instance of the DecisionTree class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.#ctor(System.String,System.Collections.Generic.List{Microsoft.Tts.Offline.Htk.DecisionTreeNode})">
            <summary>
            Initializes a new instance of the DecisionTree class.
            </summary>
            <param name="name">The name of the decision tree.</param>
            <param name="nodeList">The node list of the decision tree.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.PreOrderVisit(Microsoft.Tts.Offline.Htk.DecisionTreeNode,System.Func{Microsoft.Tts.Offline.Htk.DecisionTreeNode,System.Boolean})">
            <summary>
            PreOrder decision tree traversal.
            </summary>
            <param name="node">Start node for traversal.</param>
            <param name="visitor">Visitor funclet.</param>
            <returns>True if the visitor needs continue at current node; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.Load(System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Load the decision tree.
            </summary>
            <param name="treeLines">Multiple lines to contain the tree information.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.Save(System.IO.TextWriter)">
            <summary>
            Save the decision tree.
            </summary>
            <param name="textWriter">Output stream.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.DeleteLeaves(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Delete leaf nodes from tree.
            </summary>
            <param name="leafSet">The collection to contain the name of leaf nodes.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.AssignNameToNonLeafNode">
            <summary>
            Assign name/id to non-leaf node.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.MatchPhone(System.String)">
            <summary>
            Check if the decision tree match a phone.
            </summary>
            <param name="phone">The phone name.</param>
            <returns>True if match, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.Equals(System.Object)">
            <summary>
            Tests whether this object is equal to the given one.
            </summary>
            <param name="obj">The given object to test whether is equal to this object.</param>
            <returns>True if the object is equal to the given one, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
            <returns>The hash code of this object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.NodeIdxToName(System.Int32)">
            <summary>
            Convert list idx to node name.
            </summary>
            <param name="idx">Idx of node list.</param>
            <returns>Name of the node index.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.TravelOneNode(Microsoft.Tts.Offline.Htk.DecisionTreeNode,System.Int32)">
            <summary>
            Assign a id to certain node and its children.
            </summary>
            <param name="node">Tree node to visit.</param>
            <param name="seq">Node id sequence.</param>
            <returns>The next id.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionTree.Compare(Microsoft.Tts.Offline.Htk.DecisionTreeNode,Microsoft.Tts.Offline.Htk.DecisionTreeNode)">
            <summary>
            Compare the DecisionTreeNode, used by List.Sort() method.
            </summary>
            <param name="firstNode">Source DecisionTreeNode.</param>
            <param name="secondNode">Destination DecisionTreeNode.</param>
            <returns>Positive for x greater than y, 0 for equal and negative for x less than y.</returns>        
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTree.Name">
            <summary>
            Gets or sets the name of this decision tree.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTree.NodeList">
            <summary>
            Gets Tree node list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTree.LeafNodeMap">
            <summary>
            Gets Leaf node map.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.DecisionTree.Phone">
            <summary>
            Gets Phone label used in HTK tree.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LabelInfo">
            <summary>
            The label information for a single unit.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelInfo.ParseLine(System.String)">
            <summary>
            Parse the line in master label file to generate a LabelInfo instance.
            </summary>
            <param name="line">The line from master label file.</param>
            <returns>A new LabelInfo instance according to the line.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelInfo.ConvertToSecond(System.Double)">
            <summary>
            Convert a time into second.
            </summary>
            <param name="time">Time.</param>
            <returns>Time in second.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelInfo.ToString">
            <summary>
            Convert the object to string.
            </summary>
            <returns>String according to the object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelInfo.ToString(Microsoft.Tts.Offline.Htk.LabelInfo.LabelType)">
            <summary>
            Convert the object to string.
            </summary>
            <param name="type">Indicate the type, which will impact the context of the string.</param>
            <returns>String according to the object.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelInfo.Start">
            <summary>
            Gets or sets The start time of this label. Unit: 50000us.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelInfo.End">
            <summary>
            Gets or sets The end time of this label. Unit: 50000us.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelInfo.Duration">
            <summary>
            Gets The duration of this label. Unit: 50000us.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelInfo.Label">
            <summary>
            Gets or sets The label string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelInfo.SecondLabel">
            <summary>
            Gets or sets The second label string.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LabelInfo.LabelType">
            <summary>
            Hold the master label type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelInfo.LabelType.WithAlignData">
            <summary>
            Indicate the master label has alignment data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelInfo.LabelType.WithoutAlignData">
            <summary>
            Indicate the master label has no alignment data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelInfo.LabelType.WithSecondLabel">
            <summary>
            Indicate the master label has second label.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LabelInfoSentence">
            <summary>
            The list of label information for multi units, for example, a sentence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelInfoSentence.EndOfSentence">
            <summary>
            The string indicate the end of sentence.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelInfoSentence.Load(System.IO.StreamReader)">
            <summary>
            Load one sentence master label info from a stream reader.
            </summary>
            <param name="sr">The stream reader will be loaded from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelInfoSentence.Save(System.IO.TextWriter,Microsoft.Tts.Offline.Htk.LabelInfo.LabelType)">
            <summary>
            Save the sentence master label info to a stream writer.
            </summary>
            <param name="sw">The stream writer will be saved to.</param>
            <param name="type">Indicate the type, which will impact the context of the label.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelInfoSentence.ToSegmentFile">
            <summary>
            Convert the label info sentence into a segment file.
            </summary>
            <returns>SegmentFile.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelInfoSentence.SentenceId">
            <summary>
            Gets or sets Sentence Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelInfoSentence.LabelInfos">
            <summary>
            Gets The list of LabelInfo object.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.MasterLabelFile">
            <summary>
            The file hold the master label of many sentences.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.MasterLabelFile.MasterLabelFileHeader">
            <summary>
            The master label file header string.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterLabelFile.Load(System.String)">
            <summary>
            Load the master label file.
            </summary>
            <param name="masterLabelFileName">The master label file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterLabelFile.Save(System.String,Microsoft.Tts.Offline.Htk.LabelInfo.LabelType)">
            <summary>
            Save the master labels to file.
            </summary>
            <param name="file">The file name.</param>
            <param name="type">Indicate the type, which will impact the context of the master label.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterLabelFile.BuildLabelList">
            <summary>
            Build a Htk format list from the master labels. The list is sorted without duplicate.
            </summary>
            <returns>The list of all the labels.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MasterLabelFile.SentLabelInfos">
            <summary>
            Gets The dictionary of LabelInfoList by sentences.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HtkFile">
            <summary>
            Htk file operator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HtkFile.HtkBodyOffset">
            <summary>
            HTK file body offset.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.HtkFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkFile.Read(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Load frames from HTK file.
            </summary>
            <param name="htkFilePath">HTK file path.</param>
            <param name="frameIndexes">Frames index to be loaded.</param>
            <returns>Read HtkFile.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkFile.Read(System.String)">
            <summary>
            Load frames during specified duration.
            </summary>
            <param name="htkFilePath">HTK file path.</param>
            <returns>Read HtkFile.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkFile.LoadHeader(System.IO.BinaryReader)">
            <summary>
            Load HTK file header.
            </summary>
            <param name="reader">HTK file BinaryReader.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFile.SampleCount">
            <summary>
            Gets or sets Frame number of this HTK file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFile.SampleDurationIn100ns">
            <summary>
            Gets or sets the frame duration, in 100ns units.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFile.BytesPerSample">
            <summary>
            Gets or sets How many bytes per frame, frame definition:.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFile.ParmKind">
            <summary>
            Gets or sets Parameter kind of this HTK file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFile.Frames">
            <summary>
            Gets Loaded frames.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.TtsHtkFile">
            <summary>
            TTS HTK file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TtsHtkFile.TtsStreamCount">
            <summary>
            TTS 3 streams : state, delta, acc.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TtsHtkFile.#ctor(Microsoft.Tts.Offline.Htk.HtkFile)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.TtsHtkFile"/> class.
            </summary>
            <param name="htkFile">Common HTK file class.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TtsHtkFile.#ctor(Microsoft.Tts.Offline.Htk.HtkFile,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.TtsHtkFile"/> class.
            </summary>
            <param name="htkFile">Common HTK file class.</param>
            <param name="isMbeUsed">Whether multi-band excitation is used.</param>
            <param name="mbeOrder">Multi-band excitation order.</param>
            <param name="isPowerUsed">Whether power is used.</param>
            <param name="isGuidanceLspUsed">Whether guidanceLsp is used.</param>
            <param name="guidanceLspOrder">GuidanceLsp order.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TtsHtkFile.LspOrder">
            <summary>
            Gets or sets Lsp order.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TtsHtkFile.MbeOrder">
            <summary>
            Gets or sets Multi-band excitation order.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TtsHtkFile.IsPowerUsed">
            <summary>
            Gets or sets a value indicating whether Power flag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TtsHtkFile.GuidanceLspOrder">
            <summary>
            Gets or sets GuidanceLsp order.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TtsHtkFile.TtsHtkFrames">
            <summary>
            Gets Tts HTK frames.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.TtsHtkFrame">
            <summary>
            TTS HTK frame.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TtsHtkFrame.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.TtsHtkFrame"/> class.
            </summary>
            <param name="lspOrder">LspOrder.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TtsHtkFrame.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.TtsHtkFrame"/> class.
            </summary>
            <param name="lspOrder">LspOrder.</param>
            <param name="mbeOrder">MbeOrder.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TtsHtkFrame.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.TtsHtkFrame"/> class.
            </summary>
            <param name="lspOrder">LspOrder.</param>
            <param name="mbeOrder">MbeOrder.</param>
            <param name="guidanceLspOrder">GuidanceLspOrder.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TtsHtkFrame.LoadFrame(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Load frame from byte buffer, here is the HTK frame structure:
                (lsp + gain) + delta(lsp + gain) + acc(lsp + gain) + f0 + deltaf0 + accF0 + mbe(mbeOrder)
                + deltambe(mbeOrder) + accmbe(mbeOrder) + [power + deltapower + accpowerer] + [guidanceLsp + deltaguidanceLsp + accguidanceLsp]..
            </summary>
            <param name="buffer">Frame buffer.</param>
            <param name="offset">Frame offset.</param>
            <param name="isPowerUsed">Power flag.</param>
            <returns>Frame bytes.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TtsHtkFrame.FrameIndex">
            <summary>
            Gets or sets Frame index of this frame.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TtsHtkFrame.Static">
            <summary>
            Gets Static stream.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TtsHtkFrame.Delta">
            <summary>
            Gets Delta parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TtsHtkFrame.Acc">
            <summary>
            Gets Acc parameter.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HtkFrameStream">
            <summary>
            HTK frame parameter.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HtkFrameStream.ParameterVariableLength">
            <summary>
            Parameter variable length.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkFrameStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.HtkFrameStream"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkFrameStream.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.HtkFrameStream"/> class.
            </summary>
            <param name="lspOrder">Lsp order.</param>
            <param name="mbeOrder">Mbe order.</param>
            <param name="guidanceLspOrder">GuidanceLsp order.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkFrameStream.LoadLsp(System.Byte[],System.Int32)">
            <summary>
            Load lsp data.
            </summary>
            <param name="buffer">Frame buffer.</param>
            <param name="offset">Frame parameter offset.</param>
            <returns>Frame paramter length.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkFrameStream.LoadMbe(System.Byte[],System.Int32)">
            <summary>
            Load mbe data.
            </summary>
            <param name="buffer">Frame buffer.</param>
            <param name="offset">Frame parameter offset.</param>
            <returns>Frame paramter length.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkFrameStream.LoadGuidanceLsp(System.Byte[],System.Int32)">
            <summary>
            Load GuidanceLsp data.
            </summary>
            <param name="buffer">Frame buffer.</param>
            <param name="offset">Frame parameter offset.</param>
            <returns>Frame paramter length.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFrameStream.F0">
            <summary>
            Gets or sets F0 value of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFrameStream.Gain">
            <summary>
            Gets or sets Gain value of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFrameStream.Lsp">
            <summary>
            Gets or sets LSP value of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFrameStream.Mbe">
            <summary>
            Gets or sets Mbe value of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFrameStream.Power">
            <summary>
            Gets or sets Power value of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkFrameStream.GuidanceLsp">
            <summary>
            Gets or sets CodecLSP value of the frame.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.GuidanceLspFile">
            <summary>
            Objective model to load guidanceLsp file, which only contain Lsp, without Gain.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.GuidanceLspFile.LoadLsp``1(System.String,System.Int32)">
            <summary>
            Load the GuidanceLsp file on difference dimensions for each frame for a sentence from a file.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <param name="lspFile">The file containing guidanceLsp info for a sentence.</param>
            <param name="lspOrder">The guidance Lsp order.</param>
            <returns>A list of lsp, on each dimension of each frame.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LspFile">
            <summary>
            Objective model to load lsp file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LspFile.LoadLspWithGain``1(System.String,System.Int32)">
            <summary>
            Load the lsp on difference dimensions for each frame for a sentence from a file.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <param name="lspFile">The file containing lsp info for a sentence.</param>
            <param name="lspOrder">The LPC order, 40 is a usual value.</param>
            <returns>A list of lsp, on each dimension of each frame.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LspFile.LoadLspWithoutGain``1(System.String,System.Int32)">
            <summary>
            Load the lsp on difference dimensions for each frame for a sentence from a file.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <param name="lspFile">The file containing lsp info for a sentence.</param>
            <param name="lspOrder">The LPC order, 40 is a usual value.</param>
            <returns>A list of lsp, on each dimension of each frame.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LspFile.LoadGain``1(System.String,System.Int32)">
            <summary>
            Load the lsp on difference dimensions for each frame for a sentence from a file.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <param name="lspFile">The file containing lsp info for a sentence.</param>
            <param name="lspOrder">The LPC order, 40 is a usual value.</param>
            <returns>A list of lsp, on each dimension of each frame.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LspFile.LoadData``1(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Load the lsp on difference dimensions for each frame for a sentence from a file.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <param name="lspFile">The file containing lsp info for a sentence.</param>
            <param name="lspOrder">The LPC order, 40 is a usual value.</param>
            <param name="startOrder">Start order to add into list.</param>
            <param name="endOrder">End order to add into list.</param>
            <returns>A list of lsp, on each dimension of each frame.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LspFile.WriteData``1(System.String,System.Collections.Generic.List{System.Collections.Generic.List{``0}})">
            <summary>
            Load the lsp on difference dimensions for each frame for a sentence from a file.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <param name="lspFile">The file containing lsp info for a sentence.</param>
            <param name="lspData">The Lsp data.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Frontend.PolyRuleError">
            <summary>
            Polyphony rule error.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.MissPrimaryKey">
            <summary>
            Can't find primary key name in polypony file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.InvalidLineFormat">
            <summary>
            Invalid file line format [Line {0}: {1}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.DuplicateKeyName">
            <summary>
            Duplicate delceared key name [{0}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.ParseError">
            <summary>
            Parse error in line [{0}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.InvalidPrimaryKeyValueForamt">
            <summary>
            Invalid primary key value line [{0}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.MissKeyValueLine">
            <summary>
            Can't find primary key line before parsing condition line [{0}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.InvalidConditionFormat">
            <summary>
            Invalid condition format : [{0}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.MissingOperatorInCondition">
            <summary>
            Can't find operator in expression [{0}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.NotDeclearedConditionKey">
            <summary>
            Can't find condition key [{0}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.NoConditionForWord">
            <summary>
            There is no condition for key [{0}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.DuplicateWordDefinitions">
            <summary>
            There are duplicate definitions of word [{0}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.DuplicateRuleConditionsForDifferentPron">
            <summary>
            There are duplicate conditions [{0}] defined for pronunciations [{1}] and [{2}] of word [{3}].
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyRuleError.DuplicateRuleConditionsForSamePron">
            <summary>
            There are duplicate conditions [{0}] defined for pronunciation [{1}] of word [{2}].
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Frontend.PolyphonyCondition">
            <summary>
            PolyphonyCondition.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyCondition.Key">
            <summary>
            Gets or sets Polyphony condition key.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyCondition.Operator">
            <summary>
            Gets or sets Polyphony condition operator.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyCondition.Value">
            <summary>
            Gets or sets Polyphony condition value.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Frontend.PolyphonyPron">
            <summary>
            PolyphonyPron.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyPron.GenerateConditionString(System.Boolean)">
            <summary>
            Generate a condition string.
            </summary>
            <param name="isSorted">Indicate whether the conditions are sorted by condition keys.</param>
            <returns>A condition string.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyPron.Pron">
            <summary>
            Gets or sets Pron.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyPron.Conditions">
            <summary>
            Gets Conditions.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyPron.ConditionString">
            <summary>
            Gets Condition string in which the conditions are in the same order as polyrule file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyPron.SortedConditionString">
            <summary>
            Gets Condition string in which the conditions are sorted by keys.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Frontend.PolyphonyRule">
            <summary>
            PolyphonyRule.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRule.CheckDupRuleConditions">
            <summary>
            Check if there're duplicate conditions in a rule.
            </summary>
            <returns>ErrorSet.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyRule.Word">
            <summary>
            Gets or sets Word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyRule.Domain">
            <summary>
            Gets or sets Domain.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyRule.PolyphonyProns">
            <summary>
            Gets PolyphonyProns.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile">
            <summary>
            PolyphonyRuleFile.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.SplitIntoPolyphonyRuleFiles">
            <summary>
            Split into domain PolyphonyRuleFile array.
            </summary>
            <returns>PolyphonyRuleFile array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.Save(System.String)">
            <summary>
            Save.
            </summary>
            <param name="filePath">FilePath.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.Load(System.String,Microsoft.Tts.Offline.TtsPhoneSet)">
            <summary>
            Load.
            </summary>
            <param name="filePath">FilePath.</param>
            <param name="phoneSet">PhoneSet.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.ParseDeclearKey(System.String,System.String@,Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.KeyType@)">
            <summary>
            ParseDeclearKey.
            </summary>
            <param name="line">Line.</param>
            <param name="keyName">KeyName.</param>
            <param name="keyType">KeyType.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.ParseDomainKey(System.String,System.String@)">
            <summary>
            ParseDomainKey.
            </summary>
            <param name="line">Line.</param>
            <param name="keyName">KeyName.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.IsComment(System.String)">
            <summary>
            Whether the line is comment.
            </summary>
            <param name="line">Line.</param>
            <returns>Indicating whether the line is comment.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.IsDomainTag(System.String)">
            <summary>
            Whether the line is domain tag.
            </summary>
            <param name="line">Line.</param>
            <returns>Indicating whether the line is domain tag.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.IsConditionLine(System.String)">
            <summary>
            Whether the line is condition.
            </summary>
            <param name="line">Line.</param>
            <returns>Indicating whether the line is condition.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.IsDeclearKey(System.String)">
            <summary>
            Whether the line is declear.
            </summary>
            <param name="line">Line.</param>
            <returns>Indicating whether the line is declear.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.AddParseError(Microsoft.Tts.Offline.Common.ErrorSet,System.Int32,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            AddParseError.
            </summary>
            <param name="errorSet">ErrorSet.</param>
            <param name="lineNum">LineNum.</param>
            <param name="parseErrorSet">ParseErrorSet.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.TryParseConditionLine(System.String,Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Frontend.PolyphonyRule,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            TryParseConditionLine.
            </summary>
            <param name="line">Line.</param>
            <param name="phoneSet">PhoneSet.</param>
            <param name="polyphonyWord">PolyphonyWord.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>Whether the line is condition line.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.TryParseKeyLine(System.String,Microsoft.Tts.Offline.Frontend.PolyphonyRule@,Microsoft.Tts.Offline.Common.ErrorSet,System.String)">
            <summary>
            TryParseKeyLine.
            </summary>
            <param name="line">Line.</param>
            <param name="polyphonyWord">PolyphonyWord.</param>
            <param name="errorSet">ErrorSet.</param>
            <param name="domain">Domain.</param>
            <returns>Whether the line is key line.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.TryParseKeyDeclear(System.String,System.Boolean@,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            TryParseKeyDeclear.
            </summary>
            <param name="line">Line.</param>
            <param name="firstKeyString">FirstKeyString.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>Whether the line is key declear line.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.ParsePolyCondition(System.String,Microsoft.Tts.Offline.Frontend.PolyphonyCondition,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            ParsePolyCondition.
            </summary>
            <param name="expression">Expression.</param>
            <param name="condition">Condition.</param>
            <param name="errorSet">ErrorSet.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.ParseConditionLine(System.String,Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Frontend.PolyphonyRule)">
            <summary>
            ParseConditionLine.
            </summary>
            <param name="line">Line.</param>
            <param name="phoneSet">PhoneSet.</param>
            <param name="polyphonyWord">PolyphonyWord.</param>
            <returns>ErrorSet.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.ParseKeyValueLine(System.String,Microsoft.Tts.Offline.Common.ErrorSet)">
            <summary>
            ParseKeyValueLine.
            </summary>
            <param name="line">Line.</param>
            <param name="errorSet">ErrorSet.</param>
            <returns>Condition value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.IsKeyLine(System.String)">
            <summary>
            Whether the line is key value line.
            </summary>
            <param name="line">Line.</param>
            <returns>Indicating whether the line is key value line.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.CheckDupWordDefinitions">
            <summary>
            Check if there're duplicate polyphony word definitions.
            </summary>
            <returns>ErrorSet.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.PolyphonyWords">
            <summary>
            Gets PolyphonyWords.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.ConditionRegex">
            <summary>
            Gets ConditionRegex.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.KeyLineRegex">
            <summary>
            Gets KeyLineRegex.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.KeyString">
            <summary>
            Gets or sets KeyString.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.DomainTag">
            <summary>
            Gets or sets Domain tag.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.KeyType">
            <summary>
            KeyType.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.KeyType.String">
            <summary>
            String.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Frontend.PolyphonyRuleFile.KeyType.Int">
            <summary>
            Int.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Frontend.PolyruleKeys">
            <summary>
            Polyphony rule keys.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyruleKeys.Instance">
            <summary>
            Gets instance of PolyruleKeys.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.PolyruleKeys.KeyTypes">
            <summary>
            Gets or sets keyTypes.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.QuotationDirect">
            <summary>
            Quotation direction.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.QuotationDirect.Neutral">
            <summary>
            Direct free quotation mark.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.QuotationDirect.Oriented">
            <summary>
            Oriented quotation mark.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.QuotationMark">
            <summary>
            Quotation Mark Pair.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.QuotationMark.Left">
            <summary>
            Gets or sets the left character of this quotation mark pair.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.QuotationMark.Right">
            <summary>
            Gets or sets the right character of this quotation mark pair.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.QuotationMark.Direct">
            <summary>
            Gets or sets the direction type of this quotation mark.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.QuotationMarkTable">
            <summary>
            Quotation mark table.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.QuotationMarkTable._schema">
            <summary>
            Schema information of quotation mark table.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.QuotationMarkTable._items">
            <summary>
            Quotation marks.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.QuotationMarkTable.#ctor">
            <summary>
            Initializes a new instance of the QuotationMarkTable class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.QuotationMarkTable.Read(System.String)">
            <summary>
            Creates a quotation mark table with given file path.
            </summary>
            <param name="filePath">The location of the quotation mark file to load left.</param>
            <returns>A new instance of Quotation Mark Table loaded from file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.QuotationMarkTable.Validate">
            <summary>
            Validate the state of this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.QuotationMarkTable.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load data from XML document instance into this instance.
            </summary>
            <param name="xmlDoc">Xml document instance.</param>
            <param name="nsmgr">Namespace instance.</param>
            <param name="contentController">Content controller object.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.QuotationMarkTable.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Performances save operation.
            </summary>
            <param name="writer">The writer instance to write XML data out.</param>
            <param name="contentController">Content controller object.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.QuotationMarkTable.Schema">
            <summary>
            Gets the configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.QuotationMarkTable.Items">
            <summary>
            Gets the quotation mark items.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Frontend.RuleItem">
            <summary>
            RuleItem class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.RuleItem.EntryString">
            <summary>
            Gets or sets Rule entry string such as CurW = ".".
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.RuleItem.DomainTag">
            <summary>
            Gets or sets Domain.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.RuleItem.RuleContent">
            <summary>
            Gets Rule content.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.RuleItem.KeyComment">
            <summary>
            Gets or sets key comment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Frontend.RuleFile">
            <summary>
            RuleFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.IsPolyRuleDefaultRule(System.String)">
            <summary>
            Indicating whether the line is default rule.
            </summary>
            <param name="line">Line.</param>
            <returns>Whether the line is default rule.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.Split">
            <summary>
            Split into domain RuleFile instances.
            </summary>
            <returns>RuleFile Array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.Load(System.String,System.Boolean)">
            <summary>
            Load.
            </summary>
            <param name="filePath">FilePath.</param>
            <param name="loadComment">Whether load comment line.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.Save(System.String,System.Boolean)">
            <summary>
            Save.
            </summary>
            <param name="filePath">FilePath.</param>
            <param name="writeDomainAndComment">Whethe write the domain and comment line, always use false when used for compile.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.GetDupKeys(System.String)">
            <summary>
            Get duplicate item keys.
            </summary>
            <param name="filePath">Rule file path.</param>
            <returns>Duplicate key list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.IsDeclearKey(System.String)">
            <summary>
            Indicating whether the line is declear.
            </summary>
            <param name="line">Line.</param>
            <returns>Whether the line is declear.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.IsComment(System.String)">
            <summary>
            Indicating whether the line is comment.
            </summary>
            <param name="line">Line.</param>
            <returns>Whether the line is comment.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.IsDomainTag(System.String)">
            <summary>
            Indicating whether the line is domain tag.
            </summary>
            <param name="line">Line.</param>
            <returns>Whether the line is domain tag.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.IsRuleItemEntry(System.String)">
            <summary>
            Whether the line is rule entry.
            </summary>
            <param name="line">Line.</param>
            <returns>Whether the line is declear.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.ParseDomainKey(System.String,System.String@)">
            <summary>
            ParseDomainKey.
            </summary>
            <param name="line">Line.</param>
            <param name="keyName">KeyName.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Frontend.RuleFile.ParseItemKey(System.String)">
            <summary>
            Parse rule item key.
            </summary>
            <param name="line">Line.</param>
            <returns>Key value.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.RuleFile.KeyLineRegex">
            <summary>
            Gets KeyLineRegex.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.RuleFile.DomainTag">
            <summary>
            Gets or sets domain tag.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Frontend.RuleFile.RuleItems">
            <summary>
            Gets the rule items.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.SegmentWord">
            <summary>
            Segment word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentWord.Text">
            <summary>
            Gets or sets the word text of the segment word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SegmentWord.POS">
            <summary>
            Gets or sets the POS of the segment word.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.TriggerWord">
            <summary>
            Trigger word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TriggerWord.Text">
            <summary>
            Gets or sets the word text of the trigger word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.TriggerWord.POS">
            <summary>
            Gets or sets the POS of the trigger word.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ParallelStructTable">
            <summary>
            Parallel Struct table.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ParallelStructTable._schema">
            <summary>
            Schema information of parallel struct table.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ParallelStructTable._segmentItems">
            <summary>
            Segment words.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ParallelStructTable._triggerItems">
            <summary>
            Trigger words.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ParallelStructTable.#ctor">
            <summary>
            Initializes a new instance of the ParallelStructTable class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ParallelStructTable.Read(System.String)">
            <summary>
            Creates a parallel struct table with given file path.
            </summary>
            <param name="filePath">The location of the parallel struct file to load left.</param>
            <returns>A new instance of ParallelStruct Table loaded from file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ParallelStructTable.Validate">
            <summary>
            Validate the state of this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ParallelStructTable.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load data from XML document instance into this instance.
            </summary>
            <param name="xmlDoc">Xml document instance.</param>
            <param name="nsmgr">Namespace instance.</param>
            <param name="contentController">Content controller object.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ParallelStructTable.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Performances save operation.
            </summary>
            <param name="writer">The writer instance to write XML data out.</param>
            <param name="contentController">Content controller object.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.ParallelStructTable.Schema">
            <summary>
            Gets the configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ParallelStructTable.SegmentItems">
            <summary>
            Gets the segment word items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ParallelStructTable.TriggerItems">
            <summary>
            Gets the trigger word items.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.NounSuffix">
            <summary>
            Noun suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.NounSuffix.Text">
            <summary>
            Gets or sets the word text of the noun suffix.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.AdjSuffix">
            <summary>
            Adjective suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.AdjSuffix.Text">
            <summary>
            Gets or sets the word text of the adjective suffix.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.VerbSuffix">
            <summary>
            Verb suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VerbSuffix.Text">
            <summary>
            Gets or sets the word text of the verb suffix.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.SeparatorChar">
            <summary>
            Separator character.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.SeparatorChar.Text">
            <summary>
            Gets or sets the word text of the separator character.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.WordFeatureSuffixTable">
            <summary>
            Word feature suffix table.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordFeatureSuffixTable._schema">
            <summary>
            Schema information of parallel struct table.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordFeatureSuffixTable._nounItems">
            <summary>
            Noun suffixes.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordFeatureSuffixTable._adjItems">
            <summary>
            Adjective suffixes.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordFeatureSuffixTable._verbItems">
            <summary>
            Verb suffixes.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.WordFeatureSuffixTable._separatorItems">
            <summary>
            Separator characters.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordFeatureSuffixTable.#ctor">
            <summary>
            Initializes a new instance of the WordFeatureSuffixTable class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordFeatureSuffixTable.Read(System.String)">
            <summary>
            Creates a word feature suffix table with given file path.
            </summary>
            <param name="filePath">The location of the suffix file to load left.</param>
            <returns>A new instance of WordFeatureSuffix Table loaded from file.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordFeatureSuffixTable.Validate">
            <summary>
            Validate the state of this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordFeatureSuffixTable.Load(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            Load data from XML document instance into this instance.
            </summary>
            <param name="xmlDoc">Xml document instance.</param>
            <param name="nsmgr">Namespace instance.</param>
            <param name="contentController">Content controller object.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.WordFeatureSuffixTable.PerformanceSave(System.Xml.XmlWriter,System.Object)">
            <summary>
            Performances save operation.
            </summary>
            <param name="writer">The writer instance to write XML data out.</param>
            <param name="contentController">Content controller object.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordFeatureSuffixTable.Schema">
            <summary>
            Gets the configuration schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordFeatureSuffixTable.NounItems">
            <summary>
            Gets the noun suffix items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordFeatureSuffixTable.AdjItems">
            <summary>
            Gets the adjective suffix items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordFeatureSuffixTable.VerbItems">
            <summary>
            Gets the verb suffix items.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.WordFeatureSuffixTable.SeparatorItems">
            <summary>
            Gets the separator character items.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.FrontendSetting">
            <summary>
            This is a.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FrontendSetting._domainMembers">
            <summary>
            Key: Domain name, Value: Domain DAT file name.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FrontendSetting._sayAsMapping">
            <summary>
            Sayas mapping.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.FrontendSetting._disabledDatas">
            <summary>
            Disabled Datas.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.FrontendSetting.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.FrontendSetting"/> class.
            </summary>
            <param name="path">Setting path.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.FrontendSetting.DomainMembers">
            <summary>
            Gets Domain members.
            Key: Domain name, Value: Domain DAT file name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FrontendSetting.SayAsMapping">
            <summary>
            Gets Sayas mapping.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.FrontendSetting.DisabledDatas">
            <summary>
            Gets Disabled datas.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.MacroName">
            <summary>
            The class to represent HTK Macro.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.MacroName.Indicator">
            <summary>
            Indicator of the begin of macro in MMF file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MacroName.Create(System.String)">
            <summary>
            Creates an instance of MacroName from a line of text string.
            </summary>
            <param name="line">A line of text string to create macro.</param>
            <returns>An instance of MacroName.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MacroName.Parse(System.String)">
            <summary>
            Parses macro from line of text string.
            </summary>
            <param name="line">Line of text string to parse.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MacroName.Symbol">
            <summary>
            Gets or sets the symbol for this macro object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MacroName.Name">
            <summary>
            Gets or sets the name for this macro object.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.VarFloor">
            <summary>
            The class to represent HTK Variance Floor.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.VarFloor.Macro">
            <summary>
            Gets or sets the macro name of this object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.VarFloor.Variance">
            <summary>
            Gets or sets the variance of this object.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HmmState">
            <summary>
            The class to represent HTK state.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmState.#ctor">
            <summary>
            Initializes a new instance of the HmmState class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmState.Streams">
            <summary>
            Gets the streams of this object.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HmmModel">
            <summary>
            The class to represent HTK model.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmModel.#ctor">
            <summary>
            Initializes a new instance of the HmmModel class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmModel.CorrectVariance(System.Double[])">
            <summary>
            Corrects the variance of the model to be bigger than floor.
            If it is smaller than floor, use the value from floor for each dimension.
            </summary>
            <param name="floor">The variance floor values.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmModel.Macro">
            <summary>
            Gets or sets the macro name of this object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmModel.States">
            <summary>
            Gets the states of this object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmModel.Transition">
            <summary>
            Gets or sets the transition of this object.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.Transition">
            <summary>
            The class to represent HTK Transition.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Transition.Macro">
            <summary>
            Gets or sets the macro name of this object.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Transition.Matrix">
            <summary>
            Gets or sets the transition probability matrix of this object.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.MasterMacroFile">
            <summary>
            The class to represent HTK Master Macro File.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.#ctor">
            <summary>
            Initializes a new instance of the MasterMacroFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.LoadText(System.String)">
            <summary>
            Loads the macros in Master Macro File from text file.
            </summary>
            <param name="filePath">The location of text file to read macros from.</param>
            <returns>Current instance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.Load(System.IO.TextReader)">
            <summary>
            Loads the macros in Master Macro File from text reader instance.
            </summary>
            <param name="reader">Text reader instance to read macros from.</param>
            <returns>MasterMacroFile.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.Save(System.IO.TextWriter)">
            <summary>
            Saves macros of this instance in Master Macro File format into text writer instance.
            </summary>
            <param name="writer">The text writer instance to write data into.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.SaveGlobalOptions(System.IO.TextWriter,System.Int32[],System.Int32[],System.Int32,System.String[])">
            <summary>
            Saves global options information into the text writer instances.
            </summary>
            <param name="writer">The text writer instance to write data into.</param>
            <param name="streamInfo">Stream information to save.</param>
            <param name="msdInfo">MSD information to save.</param>
            <param name="vecSize">Vector size to save.</param>
            <param name="vecInfo">Vector information to save.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ToString(Microsoft.Tts.Offline.Htk.Transition)">
            <summary>
            Converts the transition instance into string in MMF format.
            </summary>
            <param name="transition">The transition instance to convert.</param>
            <returns>Transition instance in string format.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ToString(Microsoft.Tts.Offline.Htk.HmmStream)">
            <summary>
            Converts the HMM stream instance into string in MMF format.
            </summary>
            <param name="stream">The stream instance to convert.</param>
            <returns>Stream instance in string format.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ToString(Microsoft.Tts.Offline.Htk.Gaussian)">
            <summary>
            Converts the HMM gaussian instance into string in MMF format.
            </summary>
            <param name="gaussian">The gaussian instance to convert.</param>
            <returns>Gaussian instance in string format.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ToString(System.Double[0:,0:])">
            <summary>
            Converts double matrix into string in MMF format.
            </summary>
            <param name="values">Value matrix to convert.</param>
            <returns>Value matrix instance in string format.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ToString(Microsoft.Tts.Offline.Htk.HmmModel,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Htk.HmmStream},System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Htk.Transition})">
            <summary>
            Converts the HMM model instance into string in MMF format.
            </summary>
            <param name="model">The model instance to convert.</param>
            <param name="streams">The global streams to refer if any.</param>
            <param name="transitions">The global transitions to refer if any.</param>
            <returns>Model instance in string format.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ReadModel(Microsoft.Tts.Offline.IO.RewindableTextReader,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Htk.HmmStream},System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Htk.Transition})">
            <summary>
            Reads one HMM model instance from text reader instance.
            </summary>
            <param name="rewinder">Rewindable text reader instance to read HMM model from.</param>
            <param name="streams">Global HMM streams if any reference.</param>
            <param name="transition">Global transitions if any reference.</param>
            <returns>HMM model instance loaded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ReadState(Microsoft.Tts.Offline.IO.RewindableTextReader,System.Collections.Generic.Dictionary{System.String,Microsoft.Tts.Offline.Htk.HmmStream})">
            <summary>
            Reads one HMM state instance from text reader instance.
            </summary>
            <param name="rewinder">Rewindable text reader instance to read HMM model from.</param>
            <param name="streams">Global HMM streams if any reference.</param>
            <returns>HMM state instance loaded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ReadStream(Microsoft.Tts.Offline.IO.RewindableTextReader)">
            <summary>
            Reads one HMM stream instance from text reader instance.
            </summary>
            <param name="rewinder">The text reader to read stream from.</param>
            <returns>HMM stream instance loaded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ReadGaussian(Microsoft.Tts.Offline.IO.RewindableTextReader)">
            <summary>
            Reads one HMM gaussian instance from text reader instance.
            </summary>
            <param name="rewinder">The text reader to read gaussian from.</param>
            <returns>HMM gaussian instance loaded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ReadTransition(Microsoft.Tts.Offline.IO.RewindableTextReader)">
            <summary>
            Reads one transition instance from text reader instance.
            </summary>
            <param name="rewinder">The text reader to read double matrix from.</param>
            <returns>Transition instance loaded.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ReadTagArray(Microsoft.Tts.Offline.IO.RewindableTextReader,System.String)">
            <summary>
            Reads double matrix from the text reader with the expected tag.
            </summary>
            <param name="rewinder">Text reader to read array from.</param>
            <param name="tag">Expected tag to start in the stream.</param>
            <returns>Double matrix from the text reader.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ParseTagValues(System.String,System.String)">
            <summary>
            Parses string values from the line of text with the expected tag.
            </summary>
            <param name="line">The line of text to parse.</param>
            <param name="tag">Expected tag to start in the line.</param>
            <returns>String values parsed from the line.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ParseTagValue(System.String,System.String)">
            <summary>
            Parses a integer value from the line of text with the expected tag.
            </summary>
            <param name="line">The line of text to parse.</param>
            <param name="tag">Expected tag to start in the line.</param>
            <returns>Integer value parsed from the line.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ParseSizedArray(System.Int32[])">
            <summary>
            Parses int array (with size at the first element) from list of integers.
            </summary>
            <param name="values">List of integers to parse for int array.</param>
            <returns>Parsed int array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ParseIntArray(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Parses int array from list of strings.
            </summary>
            <param name="values">List of strings to parse for int array.</param>
            <returns>Parsed int array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ParseDoubleMatrix(System.String[],System.Int32)">
            <summary>
            Parses double matrix from list of strings.
            </summary>
            <param name="lines">List of strings to parse for double matrix.</param>
            <param name="size">The expected dimension of the matrix.</param>
            <returns>Parsed double matrix.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.ParseDoubleArray(System.String)">
            <summary>
            Parses double array from list of strings.
            </summary>
            <param name="line">A string to parse for double array.</param>
            <returns>Parsed double array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.Ensure(System.String,System.String)">
            <summary>
            Ensures that two lines equal with each other, otherwise InvalidDataException will be thrown.
            </summary>
            <param name="left">The left string instance to test.</param>
            <param name="right">The right string instance to test.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.Load(Microsoft.Tts.Offline.IO.RewindableTextReader)">
            <summary>
            Loads macros from rewindable reader instance.
            </summary>
            <param name="rewinder">The instance to read data from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.LoadGlobalOptions(Microsoft.Tts.Offline.IO.RewindableTextReader)">
            <summary>
            Loads global options information from text reader instance.
            </summary>
            <param name="rewinder">The rewindable text reader to load data from.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.LoadVecSize(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loads vector size information from a list of strings.
            </summary>
            <param name="values">Vector information in string list to parse.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MasterMacroFile.Reset">
            <summary>
            Resets current instance to the initialization status.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MasterMacroFile.StreamInfo">
            <summary>
            Gets or sets the stream size information of this MMF file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MasterMacroFile.MsdInfo">
            <summary>
            Gets or sets the MSD information of this MMF file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MasterMacroFile.VecSize">
            <summary>
            Gets or sets the vector size of this MMF file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MasterMacroFile.VecInfo">
            <summary>
            Gets or sets the vector information of this MMF file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MasterMacroFile.VarFloors">
            <summary>
            Gets the global variance floors used in this MMF file, keyed by macro name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MasterMacroFile.Transitions">
            <summary>
            Gets the global transitions used in this MMF file, keyed by macro name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MasterMacroFile.Streams">
            <summary>
            Gets the global streams used in this MMF file, keyed by macro name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MasterMacroFile.Models">
            <summary>
            Gets the global models used in this MMF file, keyed by macro name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.DynamicOrder">
            <summary>
            Dynamic order of feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DynamicOrder.Undefined">
            <summary>
            Undefined order.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DynamicOrder.Static">
            <summary>
            Static feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DynamicOrder.Delta">
            <summary>
            Delta feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.DynamicOrder.Acceleration">
            <summary>
            Delta of delta.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HmmNameEncoding">
            <summary>
            HMM name encoding.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmNameEncoding.GetAcousticFeatureName(Microsoft.Tts.Offline.Htk.HmmModelType)">
            <summary>
            Gets acoustic feature name string from HMMM model type.
            </summary>
            <param name="modelType">HMM model type.</param>
            <returns>Acoustic feature string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmNameEncoding.GetModelType(System.String)">
            <summary>
            Gets HMM model type from acoustic feature name.
            </summary>
            <param name="featureName">Acoustic feature string.</param>
            <returns>HMM model type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmNameEncoding.GetModelLabel(Microsoft.Tts.Offline.Htk.HmmModelType)">
            <summary>
            Gets label string from HMMM model type.
            </summary>
            <param name="modelType">HMM model type.</param>
            <returns>Label string.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HmmSymbol">
            <summary>
            HMM symbols, this enum is defined by HTK.
            Please do not change the order and the value for sub-items
            The name of the subitem is enforced to follow HTK definition, 
            So just forget the C# coding style here and do not change them.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.BeginHMM">
            <summary>
            BeginHMM.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.UseMac">
            <summary>
            UseMac.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.EndHMM">
            <summary>
            EndHMM.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.NumMixes">
            <summary>
            NumMixes.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.NumStates">
            <summary>
            NumStates.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.StreamInfo">
            <summary>
            StreamInfo.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.VecSize">
            <summary>
            VecSize.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.MSDINFO">
            <summary>
            MSDINFO.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.NDur">
            <summary>
            NDur.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.PDur">
            <summary>
            PDur.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.GDUR">
            <summary>
            GDUR.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.RelDur">
            <summary>
            RelDur.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.GenDur">
            <summary>
            GenDur.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.DiagCov">
            <summary>
            DiagCov.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.FullCov">
            <summary>
            FullCov.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.XFormCov">
            <summary>
            XFormCov.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.State">
            <summary>
            State.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.Tmix">
            <summary>
            Tmix.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.Mixture">
            <summary>
            Mixture.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.Stream">
            <summary>
            Stream.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.SWeight">
            <summary>
            SWeight.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.Mean">
            <summary>
            Mean.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.Variance">
            <summary>
            Variance.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.InvCovar">
            <summary>
            InvCovar.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.XForm">
            <summary>
            XForm.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.GConst">
            <summary>
            GConst.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.Duration">
            <summary>
            Duration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.InvDiagCov">
            <summary>
            InvDiagCov.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.TransP">
            <summary>
            TransP.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.Dprob">
            <summary>
            Dprob.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.LltCov">
            <summary>
            LltCov.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.LltCovar">
            <summary>
            LltCovar.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.HmmSetID">
            <summary>
            HmmSetID.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.ParmKind">
            <summary>
            ParmKind.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.Macro">
            <summary>
            Macro.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.EofSym">
            <summary>
            EofSym.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmSymbol.NullSym">
            <summary>
            NullSym.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.Macro">
            <summary>
            HTK macro status during MMF read.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Macro.Type">
            <summary>
            Gets or sets Macro type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Macro.Reader">
            <summary>
            Gets or sets Current HMM reader instance.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HmmReader">
            <summary>
            HMM model reader.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HmmReader class.
            </summary>
            <param name="filePath">HMM model file path.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.Streams(System.String)">
            <summary>
            Enumerate all HMM stream in MMF file.
            </summary>
            <param name="filePath">The location to MMF file.</param>
            <returns>HMM streams.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadtStreamWidths(System.String,System.Int32[])">
            <summary>
            Read stream widths.
            </summary>
            <param name="filePath">The location to MMF file.</param>
            <param name="streamIndexes">Stream indexes.</param>
            <returns>Stream widths.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadStreamWidths(Microsoft.Tts.Offline.Htk.HmmReader,System.Int32[])">
            <summary>
            Get Gaussians width information.
            </summary>
            <param name="hmr">Model reader.</param>
            <param name="streamIndexes">Stream indexes.</param>
            <returns>Stream Widths.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.GetStateAndHmmMapping(System.String,System.String)">
            <summary>
            Get state distribution and physical HMM model mapping [Key = "state name", Value = "HMM names"].
            </summary>
            <param name="fileName">Binary HMM model file.</param>
            <param name="stateTag">Tag indicating which model mapping to get.</param>
            <returns>The state distribution->model mapping.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.GetHmmAndStateMapping(System.String)">
            <summary>
            Get physical HMM and state distribution model mapping [Key = "HMM name", 
            Value = "model names". First dimension is state, second dimension is stream].
            </summary>
            <param name="mmfFileName">Binary HMM model file.</param>
            <returns>The model->state distribution mapping.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadInt16Array">
            <summary>
            Gets integer array from HMM model.
            </summary>
            <returns>Short array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadFloatArray">
            <summary>
            Get float array from HMM model.
            </summary>
            <returns>Float array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadString">
            <summary>
            Reads one string from Model.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadTransMatrix">
            <summary>
            Get a transition matrix.
            </summary>
            <returns>Transition matrix.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadVariance">
            <summary>
            Get varFloor array.
            </summary>
            <returns> VarFloor array. </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadGaussian">
            <summary>
            Get a Gaussian distribution.
            </summary>
            <returns>Gaussian distribution.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadStream">
            <summary>
            Get a stream distribution.
            </summary>
            <returns>HMM stream.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.Dispose">
            <summary>
            Close the reader.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadNextSymbol">
            <summary>
            Get next HMM symbol.
            </summary>
            <returns>HMM symbol.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.Dispose(System.Boolean)">
            <summary>
            Dispose this object.
            </summary>
            <param name="disposing">Flag indicating whether delete managed resource.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.Macros(System.String)">
            <summary>
            Read macros in the MMF file.
            </summary>
            <param name="filePath">MMF file.</param>
            <returns>Macros.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmReader.ReadNextMacro(System.Char@)">
            <summary>
            Load model macro.
            </summary>
            <param name="type">Macro type.</param>
            <returns>Whether the macro is discovered successfully.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.ModelDistributionType">
            <summary>
            Distribution type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ModelDistributionType.NotDefined">
            <summary>
            Not defined.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ModelDistributionType.Continuous">
            <summary>
            Continuous.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ModelDistributionType.Msd">
            <summary>
            Multi-space distribution.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.CovarianceType">
            <summary>
            Covariance type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.CovarianceType.Variance">
            <summary>
            Variance.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.CovarianceType.InvCovar">
            <summary>
            InvCovar.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.CovarianceType.LltCovar">
            <summary>
            LltCovar.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.Gaussian">
            <summary>
            Gaussian distribution.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Gaussian.Weight">
            <summary>
            Weight.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Gaussian.GlobalConstant">
            <summary>
            Global constant.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Gaussian.Length">
            <summary>
            Vector length.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Gaussian.Mean">
            <summary>
            Mean.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Gaussian.Variance">
            <summary>
            Variance.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Gaussian.IsFixedPoint">
            <summary>
            Value to indicate whether values in Gaussian is fixed point.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Gaussian.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.Gaussian"/> struct.
            </summary>
            <param name="weight">Weight of current distribution.</param>
            <param name="length">Length of dimension of current distribution.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HmmStreamName">
            <summary>
            Function to address name schema of HTK format.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HmmStreamName.NoStreamIndex">
            <summary>
            Stream index if it is not encoded in stream name.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamName.ParsePhoneLabel(System.String)">
            <summary>
            Gets phone label by parsing the stream macro name.
            </summary>
            <param name="macro">Stream macro name.</param>
            <returns>Phone label.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamName.ParseModelType(System.String)">
            <summary>
            Parse model type from HMM state macro name in HMM file, for example: "r_logF0_s5_218-4"
            Here, we can not use underscore as delimiter, as phone may have understand in it as like zh-CN phone 97 set.
            </summary>
            <param name="streamMacroName">HMM stream macro name.</param>
            <returns>Model Type.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamName.ParseStateIndex(System.String)">
            <summary>
            Parse state index in the stream macro name.
            </summary>
            <param name="macro">Stream macro name.</param>
            <returns>State index.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamName.ParseStreamIndex(System.String)">
            <summary>
            Parse stream index from HMM state macro name in HMM file,
                for example: "r_logF0_s5_218-4", return 4
                "r_lsp_s5_218", return 0.
            </summary>
            <param name="streamMacroName">HMM macro name.</param>
            <returns>Dynamic order.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamName.GetStreamIndexFreeName(System.String)">
            <summary>
            Parse macro name without stream index.
            </summary>
            <param name="streamMacroName">HMM macro name.</param>
            <returns>Macro name.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HmmStream">
            <summary>
            HMM Stream with gaussian models.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStream.Prune(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.Htk.HmmStream},System.Int32)">
            <summary>
            Prune dimension in HMM Streams.
            </summary>
            <param name="streams">Streams to prune.</param>
            <param name="keepDimension">First dimensions to keep.</param>
            <returns>Pruned streams.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStream.Prune(Microsoft.Tts.Offline.Htk.HmmStream,System.Int32)">
            <summary>
            Prune dimension in HMM Stream.
            </summary>
            <param name="stream">Stream to prune.</param>
            <param name="keepDimension">First dimensions to keep.</param>
            <returns>Pruned stream.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmStream.Name">
            <summary>
            Gets or sets HTK macro name
            I.e. "f_dur_s2_5", "f_dur_s2_5-3".
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmStream.Gaussians">
            <summary>
            Gets or sets Gaussian models of this stream, with mixture count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmStream.PhoneLabel">
            <summary>
            Gets Phone label.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmStream.ModelType">
            <summary>
            Gets Model type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmStream.StateIndex">
            <summary>
            Gets State index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmStream.StreamIndex">
            <summary>
            Gets Stream index.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HmmStream.Position">
            <summary>
            Gets or sets Position in binary data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HmmStreamComparer">
            <summary>
            HMM stream comparer.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamComparer.IsEqual(Microsoft.Tts.Offline.Htk.HmmStream,Microsoft.Tts.Offline.Htk.HmmStream,System.Boolean)">
            <summary>
            Tell whether two HMM streams equals with each other.
            </summary>
            <param name="left">Left stream object.</param>
            <param name="right">Right stream object.</param>
            <param name="comareData">Flag to indicate whether comparing data in Gaussian distribution.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamComparer.IsNameEqual(Microsoft.Tts.Offline.Htk.HmmStream,Microsoft.Tts.Offline.Htk.HmmStream)">
            <summary>
            Tell whether two stream macro name equal with each other.
            It will ignore the compare on intern leaf node index.
            </summary>
            <param name="left">Left.</param>
            <param name="right">Right.</param>
            <returns>True if yes, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamComparer.IsEqual(Microsoft.Tts.Offline.Htk.Gaussian[],Microsoft.Tts.Offline.Htk.Gaussian[],System.Boolean)">
            <summary>
            Test whether two Gaussian lists are equal.
            </summary>
            <param name="lefts">Left list.</param>
            <param name="rights">Right list.</param>
            <param name="comareData">To compare data.</param>
            <returns>True if yes, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamComparer.IsEqual(Microsoft.Tts.Offline.Htk.Gaussian,Microsoft.Tts.Offline.Htk.Gaussian,System.Boolean)">
            <summary>
            Tell whether two HMM Gaussian distributions equals with each other.
            </summary>
            <param name="left">Left Gaussian distribution.</param>
            <param name="right">Right Gaussian distribution.</param>
            <param name="comareData">Flag to indicate whether comparing data in Gaussian distribution.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HmmStreamComparer.IsEqual(System.Double[],System.Double[],System.Boolean)">
            <summary>
            Equal of two float lists.
            </summary>
            <param name="left">Left list.</param>
            <param name="right">Right list.</param>
            <param name="comareData">To compare data.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HtsMmfFile">
            <summary>
            HTS MMF file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtsMmfFile.#ctor(Microsoft.Tts.Offline.Htk.HmmModelType)">
            <summary>
            Initializes a new instance of the HtsMmfFile class.
            </summary>
            <param name="modelType">Model type of this file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtsMmfFile.Load(System.String)">
            <summary>
            Load gaussian models in MMF file.
            </summary>
            <param name="mmfPath">The path of MMF file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtsMmfFile.DetectDistribution(Microsoft.Tts.Offline.Htk.Gaussian[])">
            <summary>
            Detects gaussian distribution type according gaussians.
            </summary>
            <param name="gaussians">Gaussians.</param>
            <returns>Gaussian distribution type.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.FilePath">
            <summary>
            Gets or sets File path of this MMF file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.ModelType">
            <summary>
            Gets Model type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.Distribution">
            <summary>
            Gets or sets Multi-space distribution if
            Two gaussians in the stream, and mean and variance of the second one are all zero.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.StreamCount">
            <summary>
            Gets or sets Stream count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.StreamIndexes">
            <summary>
            Gets or sets Stream indexes.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.StreamWidths">
            <summary>
            Gets or sets Array of stream width for each stream.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.Streams">
            <summary>
            Gets or sets Key, state macro name, i.e. "dh_logF0_s2_93-2"
            Value, HMM Stream, with Gaussians.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.NamedStreams">
            <summary>
            Gets Name-indexed HMM streams.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.GaussianMixtureCount">
            <summary>
            Gets Mixture count of the Gaussian distribution, excluding zero-dimension mixture.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.PositionedStreams">
            <summary>
            Gets Dictionary, offset to stream.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsMmfFile.AlgorithmId">
            <summary>
            Gets or sets The ID string of algorithm.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.Segment">
            <summary>
            Store the information of Htk segmentation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Segment.HtkTimeUnit">
            <summary>
            The Htk time unit.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Segment.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the Segment class by given start time and end time.
            </summary>
            <param name="startTime">The given start time.</param>
            <param name="endTime">The given end time.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Segment.StartTime">
            <summary>
            Gets or sets start time of this segment, in 1.0e-7s.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Segment.EndTime">
            <summary>
            Gets or sets end time of this segment, in 1.0e-7s.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Segment.StartTimeInSecond">
            <summary>
            Gets or sets start time of this segment, in second.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Segment.EndTimeInSecond">
            <summary>
            Gets or sets end time of this segment, in second.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Segment.DurationInSecond">
            <summary>
            Gets the duration of this segment, in second.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.PhoneSegment">
            <summary>
            The basic phone segment.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.PhoneSegment._stateSegments">
            <summary>
            The state alignments data of this phoneme.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PhoneSegment.Load(System.Collections.Generic.IList{System.String},System.Int32@)">
            <summary>
            Loads the phoneme from the lines in the format of master label file.
            Please notice this load may be called multi-times to load the different information, such as full-context label, alignment data and so on.
            </summary>
            <param name="lines">The lines in master label file format.</param>
            <param name="index">The current index of the given lines.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PhoneSegment.Save(Microsoft.Tts.Offline.Htk.LabelTypeOptions,Microsoft.Tts.Offline.Htk.LabelAlignOptions,System.Boolean)">
            <summary>
            Saves the candidate into the lines in the format of master label file.
            </summary>
            <param name="typeOption">The given label type.</param>
            <param name="alignOption">The given alignment data.</param>
            <param name="keepRemainingPart">Whether to keep the remaining part.</param>
            <returns>The lines contains the candidate information.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.Label">
            <summary>
            Gets or sets the label of this phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.Name">
            <summary>
            Gets the name of the phone.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.LeftPhoneme">
            <summary>
            Gets the left phoneme of this phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.RightPhoneme">
            <summary>
            Gets the right phoneme of this phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.Sentence">
            <summary>
            Gets or sets the sentence which this phoneme belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.Index">
            <summary>
            Gets or sets the index of this phoneme in the sentences.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.IndexOfNonSilence">
            <summary>
            Gets or sets the index of this phoneme in those non-silence phoneme of the sentences.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.StartTime">
            <summary>
            Gets or sets the start time of this phoneme, in 1.0e-7s.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.EndTime">
            <summary>
            Gets or sets the end time of this phoneme, in 1.0e-7s.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.StartFrame">
            <summary>
            Gets the start frame index of this phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.EndFrame">
            <summary>
            Gets of sets the end frame index of this phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.StateAlignments">
            <summary>
            Gets or sets the state alignments data of this phoneme. Currently, there are usually 5 state in HTS.
            Phone level alignment will be considered as there is only 1 state.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.LabelRemainings">
            <summary>
            Gets the label remainings of the phoneme.
            The key is the state number, the value is respective remaining.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.StartTimeInSecond">
            <summary>
            Gets or sets the start time of this phoneme, in second.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.EndTimeInSecond">
            <summary>
            Gets or sets the end time of this phoneme, in second.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.FullContextLabel">
            <summary>
            Gets the full-context label.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneSegment.Features">
            <summary>
            Gets or sets feature extraction engine output.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.Sentence">
            <summary>
            Sentence is used to store the all candidates inside the same sentence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Sentence.EndOfSentence">
            <summary>
            The line in the master label file to indicate the end of sentence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Sentence._phoneSegments">
            <summary>
            The list to contains all the phone segments in the sentence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Sentence._unitCandidates">
            <summary>
            The list to contains all the unit candidates in the sentence.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Sentence.Load(System.IO.StreamReader)">
            <summary>
            Loads one sentence from the master label file.
            Please notice this load may be called multi-times to load the different
            Information, such as full-context label, alignment data and so on.
            </summary>
            <param name="reader">StreamReader of master label file.</param>
            <returns>A bool value indicates whether end of sentence exists.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Sentence.LoadMargin(Microsoft.Tts.Offline.Waveform.WaveFile,System.Int32)">
            <summary>
            Loads head and tail margins for each candidates.
            </summary>
            <param name="wave">WaveFile from which to load wave data.</param>
            <param name="marginLength">Cross correlation margin length in millisecond.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Sentence.Save(System.IO.StreamWriter,Microsoft.Tts.Offline.Htk.LabelTypeOptions,Microsoft.Tts.Offline.Htk.LabelAlignOptions,System.Boolean)">
            <summary>
            Saves one sentence into master label file.
            </summary>
            <param name="writer">StreamWriter to save the sentence to.</param>
            <param name="typeOption">The given label type.</param>
            <param name="alignOption">The given alignment data.</param>
            <param name="keepRemainingPart">Whether to keep the remaining part.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Sentence.BuildUnitCandidates(Microsoft.Tts.Offline.Htk.UnitCandidateType)">
            <summary>
            Build Unit Candidate List according to the unit candidate type.
            </summary>
            <param name="type">Unit type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Sentence.GetStateStartTime(System.Int32,System.Int32)">
            <summary>
            Get start time of state in sentence.
            </summary>
            <param name="phoneIndex">Phone index.</param>
            <param name="stateIndex">State index.</param>
            <returns>Start time.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Sentence.GetStateEndTime(System.Int32,System.Int32)">
            <summary>
            Get end time of state in sentence.
            </summary>
            <param name="phoneIndex">Phone index.</param>
            <param name="stateIndex">State index.</param>
            <returns>End time.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Sentence.GetStateDurTime(System.Int32,System.Int32)">
            <summary>
            Get duration time of state.
            </summary>
            <param name="phoneIndex">Phone index.</param>
            <param name="stateIndex">State index.</param>
            <returns>Duration Time.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Sentence.GetAllStatesDurTime(System.Int32)">
            <summary>
            Get duration time of all states in a phone.
            </summary>
            <param name="phoneIndex">Phone index.</param>
            <returns>Duration Times.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Sentence.LoadLines(System.IO.StreamReader,System.Boolean@)">
            <summary>
            Loads the lines belong to this sentence from the given stream reader.
            </summary>
            <param name="reader">The given reader to load the lines.</param>
            <param name="endOfSentenceExist">A bool value indicates whether end of sentence exists.</param>
            <returns>The lines belong this sentence.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Sentence.Id">
            <summary>
            Gets or sets the sentence id, which is an unique index to find the sentence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Sentence.TrainingSet">
            <summary>
            Gets or sets trainingSet represents which training set this sentence belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Sentence.PhoneSegments">
            <summary>
            Gets the phone segment which belongs to this sentences.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Sentence.Candidates">
            <summary>
            Gets the unit candidates which belongs to this sentences.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Sentence.GlobalFrameIndex">
            <summary>
            Gets or sets the global start frame index in acoustic data table.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.TrainingSentenceSet">
            <summary>
            Manipulate the Htk training data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.MasterLabelFileHeader">
            <summary>
            The header of master label file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.SentIdFormatString">
            <summary>
            The string used to format sentence id into master label file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.RegexOfSentId">
            <summary>
            The regex to match the sentence id.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TrainingSentenceSet._idKeyedSentences">
            <summary>
            The key is the sentence id, and the value is the Sentence identified by the id.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.GenerateFileListFile(System.String,System.String,System.String,System.String)">
            <summary>
            Builds the file list and then save them to file.
            </summary>
            <param name="masterLabelFile">The file name of the master label file.</param>
            <param name="corpusPath">Path of the corpus for which file list will be built.</param>
            <param name="fileListFile">Path of the target fileList.</param>
            <param name="extension">Extension of the corpus.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.GenerateFileListFile(System.String,System.String,System.String,System.IO.SearchOption)">
            <summary>
            Search specific files in one directory and then save them as a file list.
            </summary>
            <param name="fileDirectory">Directory which the files to be searched.</param>
            <param name="fileListFile">Path of the target fileList.</param>
            <param name="extension">File extension to be searched.</param>
            <param name="searchOption">Search option, include subdirectory or not.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.ConvertMlfToLabelFiles(System.String,System.String,Microsoft.Tts.Offline.Htk.LabelAlignOptions)">
            <summary>
            Converts the master label file to label files.
            </summary>
            <param name="mlfFileName">The name of target master label file.</param>
            <param name="alignmentDir">The directory of the alignment files.</param>
            <param name="alignOption">The given alignment data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.ConvertLabelFilesToMlf(System.String,System.String)">
            <summary>
            Converts label files to master label file.
            </summary>
            <param name="alignmentDir">The directory of alignment files.</param>
            <param name="mlfFileName">The name of target master label file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.BuildUnitCandidateList(Microsoft.Tts.Offline.Htk.UnitCandidateType)">
            <summary>
            Build unit candidate list from phone segment list.
            </summary>
            <param name="type">Unit candidate type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.Load(System.String)">
            <summary>
            Loads full-context label or mono align label from master label file.
            </summary>
            <param name="masterLabelFile">The file name of the master label file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.Save(System.String,Microsoft.Tts.Offline.Htk.LabelTypeOptions,Microsoft.Tts.Offline.Htk.LabelAlignOptions,System.Boolean)">
            <summary>
            Saves the full-context label or mono align label into master label file.
            </summary>
            <param name="masterLabelFile">The file name of the master label file for full-context label.</param>
            <param name="typeOption">The given label type.</param>
            <param name="alignOption">The given alignment data.</param>
            <param name="keepRemainingPart">Whether to keep the remaining part.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.LoadMargin(System.String,System.Int32)">
            <summary>
            Loads head and tail margins for candidates of all sentences.
            </summary>
            <param name="waveDir">Wave directory.</param>
            <param name="marginLength">Cross correlation margin length in millisecond.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.GenerateLabelListFile(System.String,Microsoft.Tts.Offline.Htk.LabelTypeOptions)">
            <summary>
            Generates the label list and then save them to file.
            </summary>
            <param name="labelListFile">The file name of the label list file.</param>
            <param name="typeOption">The given label type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.GenerateFileListFile(System.String,System.String,System.String)">
            <summary>
            Build the file list and then save them to file.
            </summary>
            <param name="corpusPath">Path of the corpus for which file list will be built.</param>
            <param name="fileListFile">Path of the target fileList.</param>
            <param name="extension">Extension of the corpus.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.TagSubsetIds(Microsoft.Tts.Offline.Htk.TrainingSentenceSet)">
            <summary>
            Tag subset candidates id according to the its sentence and position.
            </summary>
            <param name="subset">Subset of training sentences.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.GetCandidate(System.String,System.Int32)">
            <summary>
            Gets a candidate by its sentence id and index.
            </summary>
            <param name="sentenceId">Sentence id of the candidate.</param>
            <param name="index">Index of the candidate.</param>
            <returns>The candidate if exists; null otherwise.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.LabelFreeSplit(System.Int32)">
            <summary>
            Splits the training set into several pieces, the sentence count in each piece will be less than the
            Given value. This function is usually used to split the training set to perform computation in parallel.
            Please notice:
             1. There is no same label in each piece.
             2. The count of training set will be even since the count of CPU is always even.
             3. The sentences in each piece will be balance as possible.
            </summary>
            <param name="maxSentenceInPiece">Max sentence count in one piece.</param>
            <returns>Array of training sentence set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.CalculatePiecesNumber(System.Int32)">
            <summary>
            Calculate how many pieces should be splitted into.
            </summary>
            <param name="maxSentenceInPiece">Max sentence count in one piece.</param>
            <returns>Piece count to split into.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.TouchDuplicateLabels(Microsoft.Tts.Offline.Htk.TrainingSentenceSet,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.ObjectModel.Collection{System.String}},System.Int32)">
            <summary>
            Find duplicated full context labels, and put sentences with same full context labels in same piece.
            </summary>
            <param name="sentenceSet">Training sentence set.</param>
            <param name="currentSentences">Current sentences whose labels will be checked.</param>
            <param name="usedSentences">Sentences that have been checked.</param>
            <param name="fullContextLabeledSentenceIds">Map of full context label to sentence collection.</param>
            <param name="subSetSize">Max set size (sentence count).</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.TagIds">
            <summary>
            Tags the candidate id and candidate group id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.Sentences">
            <summary>
            Gets the key is the sentence id, and the value is the Sentence identified by the id.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.FileListMap">
            <summary>
            Gets or sets the file list map, which hold the directories structure.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.UnitCandidateNameIds">
            <summary>
            Gets or sets the map, which gives all possible unit candidate one unique ID, 
            The Ids will be used in pre-selection module and UNT file generation
            The map will be generated in BuildUnitCandidateList().
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TrainingSentenceSet.MilliSecondsPerFrame">
            <summary>
            Gets or sets the millisecond per frame. The candidate's frame index will depends on this value. 
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HtkExtension">
            <summary>
            Helper class to hold some Htk constant and utility function.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkExtension.ToHtkPath(System.String)">
            <summary>
            Convert the windows path to Htk path format.
            </summary>
            <param name="path">The input windows path.</param>
            <returns>The path in Htk path format.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LabelTypeOptions">
            <summary>
            Htk Label type options, could be FullContext or MonoPhonme.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelTypeOptions.FullContext">
            <summary>
            Full-context label, which contains many features in the label.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelTypeOptions.MonoPhoneme">
            <summary>
            Mono phoneme label, only contains the phoneme name in the label.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LabelAlignOptions">
            <summary>
            Htk Label alignment options.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelAlignOptions.NoAlign">
            <summary>
            Withou any alignment data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelAlignOptions.PhonemeAlign">
            <summary>
            With phoneme-level alignment data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelAlignOptions.StateAlign">
            <summary>
            With state-level alignment data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LabelLine">
            <summary>
            A helper class to parse a string to get Label object or convert Label to text.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelLine.SplitterChars">
            <summary>
            The split characters for the columns in a line.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelLine.Parse(System.String)">
            <summary>
            Parses a string and return a HtkLabelHelper instance by default LabelFeatureNameSet.
            </summary>
            <param name="value">The given string to be parsed.</param>
            <returns>The parsed HtkLabelHelper.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelLine.Parse(System.String,Microsoft.Tts.Offline.Htk.LabelFeatureNameSet)">
            <summary>
            Parses a string and return a HtkLabelHelper instance by given LabelFeatureNameSet.
            </summary>
            <param name="value">The given string to be parsed.</param>
            <param name="featureNames">The given feature names.</param>
            <returns>The parsed HtkLabelHelper.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelLine.ToString(Microsoft.Tts.Offline.Htk.LabelTypeOptions,System.Boolean)">
            <summary>
            Converts the HtkLabelHelper to string.
            </summary>
            <param name="typeOption">The given label type.</param>
            <param name="keepRemainingPart">Whether to keep the remaining part.</param>
            <returns>The string to indicate this object.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelLine.Segment">
            <summary>
            Gets or sets the Segment of this HtkLabel. null means not exist.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelLine.State">
            <summary>
            Gets or sets the state of this HtkLabel. Negative value (-1) means not exist.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelLine.Label">
            <summary>
            Gets or sets the HtkLabel contained in this string.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelLine.Remaining">
            <summary>
            Gets or sets the remaining parts which cannot parse here.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet">
            <summary>
            A helper class to hold the feature name information.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.SeparatorChars">
            <summary>
            The all separator characters. This is in the order of the label.
            The label will be generated according to this list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.CentralPhonemeFeatureName">
            <summary>
            The feature name of central phoneme.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.LeftPhonemeFeatureName">
            <summary>
            The feature name of left phoneme.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.RightPhonemeFeatureName">
            <summary>
            The feature name of right phoneme.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.MandatoryFeatureNameArray">
            <summary>
            The mandatory features will be keep in the first of the all features.
            For example, currently, the "left-phoneme", "central-phoneme" and
            "right-phoneme" will be placed in this list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.NamedSet">
            <summary>
            The all user create feature name set. The key is the name given by user.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.DefaultSet">
            <summary>
            The default set, which only contains the mandatory features.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.MonoLabelFeatureNameSet">
            <summary>
            The mono label set, which only contains the central phoneme.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet._featureNameToIndex">
            <summary>
            The feature name set. The key is the feature name and the value is the index
            Of the feature in the label.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.#ctor">
            <summary>
            Prevents a default instance of the LabelFeatureNameSet class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.Create(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a new feature name set.
            </summary>
            <param name="setName">The user specified name of this set.</param>
            <param name="featureNames">The feature names in order.</param>
            <returns>The created feature name set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.Exist(System.String)">
            <summary>
            Tests the set named as given whether exists.
            </summary>
            <param name="setName">The given set name.</param>
            <returns>True or false to indicate whether exits.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.Query(System.String)">
            <summary>
            Queries the set named as given.
            </summary>
            <param name="setName">The given set name.</param>
            <returns>The corresponding set.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.Remove(System.String)">
            <summary>
            Removes the given set.
            </summary>
            <param name="setName">The given set name.</param>
            <returns>True to indicate the set is removed successfully, false to indicate the set is not found.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.GetIndex(System.String)">
            <summary>
            Gets the index of the given feature.
            </summary>
            <param name="featureName">The name of the given feature.</param>
            <returns>The index of the feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.GetFeatureName(System.Int32)">
            <summary>
            Gets the feature name of the given index.
            </summary>
            <param name="indexOfFeature">The index of the feature.</param>
            <returns>The feature name of the given index.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.GetLeftSeparator(System.String)">
            <summary>
            Gets the left separator of the given feature.
            </summary>
            <param name="featureName">The given feature name.</param>
            <returns>The left separator string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.GetRightSeparator(System.String)">
            <summary>
            Gets the right separator of the given feature.
            </summary>
            <param name="featureName">The given feature name.</param>
            <returns>The right separator string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.GetLeftSeparator(System.Int32)">
            <summary>
            Gets the left separator of the given feature index.
            </summary>
            <param name="indexOfFeature">The given feature index.</param>
            <returns>The left separator string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.GetRightSeparator(System.Int32)">
            <summary>
            Gets the right separator of the given feature index.
            </summary>
            <param name="indexOfFeature">The given feature index.</param>
            <returns>The right separator string.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.MandatoryFeatureNames">
            <summary>
            Gets the mandatory features will be keep in the first of the all features.
            For example, currently, the "left-phoneme", "central-phoneme" and
            "right-phoneme" will be placed in this list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.Triphone">
            <summary>
            Gets the Triphone set, which is the same as the default now.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.Default">
            <summary>
            Gets the default set, which only contains the mandatory features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.MonoLabel">
            <summary>
            Gets the mono label set, which only contains the central phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.Count">
            <summary>
            Gets the count of the feature names.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LabelFeatureNameSet.FeatureNames">
            <summary>
            Gets the current feature name list.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.Label">
            <summary>
            This class is designed to hold the information about the htk label.
            Htk label looks like: 1) mono phone: "ax"
                                  2) tri-phone: "ax-b+eh"
                                  3) full-context: "ae-n+d+4|1...20-4".
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Label.NotApplicableFeatureValue">
            <summary>
            Gets the string to indicate the not available  or not applicable value.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Label._text">
            <summary>
            The text of this label.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Label._featureValues">
            <summary>
            The all values of this feature vector.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Label._featureNames">
            <summary>
            The LabelFeatureNameSet which contains all feature name and order info.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.#ctor">
            <summary>
            Initializes a new instance of the Label class by using default LabelFeatureNameSet.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.#ctor(Microsoft.Tts.Offline.Htk.LabelFeatureNameSet)">
            <summary>
            Initializes a new instance of the Label class by using a given LabelFeatureNameSet.
            </summary>
            <param name="featureNams">The given feature name set.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.#ctor(Microsoft.Tts.Offline.Htk.Label)">
            <summary>
            Initializes a new instance of the Label class as a copy of the given one.
            </summary>
            <param name="label">The given label to copy.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.IsNotApplicableValue(System.String)">
            <summary>
            Test whether the input value is not available (or not applicable) value.
            </summary>
            <param name="value">The input value to be tested.</param>
            <returns>Ture to indicate the value is not applicable value. Otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.ResizeFeatureValue(Microsoft.Tts.Offline.Htk.LabelFeatureNameSet)">
            <summary>
            Resizes the feature value according to the given LabelFeatureNameSet.
            </summary>
            <param name="set">The given LabelFeatureNameSet.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.GetFeatureValue(System.String)">
            <summary>
            Gets the feature value of the given feature name.
            </summary>
            <param name="featureName">The given feature name.</param>
            <returns>The value in string type of the given feature.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.SetFeatureValue(System.String,System.String)">
            <summary>
            Set the feature value of the given feature name.
            </summary>
            <param name="featureName">The given feature name.</param>
            <param name="value">The value in string type of the given feature.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.ToString">
            <summary>
            Override the ToString() method to build the text of the label.
            </summary>
            <returns>The label text.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.Equals(System.Object)">
            <summary>
            Override the Equals() method.
            </summary>
            <param name="obj">The given object to compare.</param>
            <returns>True indicate the two object is equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.GetHashCode">
            <summary>
            Override the GetHashCode() method.
            </summary>
            <returns>The hash code of this object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Label.UpdateFields(System.String)">
            <summary>
            Updates the fields according to the given text.
            </summary>
            <param name="text">The given text of this label.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Label.Text">
            <summary>
            Gets or sets the text of the label.
            Sets the text will cause a parsing for the text to fill all the feature.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Label.FeatureNameSet">
            <summary>
            Gets or sets the label feature name set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Label.FeatureValueCount">
            <summary>
            Gets the count of feature values.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Label.CentralPhoneme">
            <summary>
            Gets or sets the central phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Label.LeftPhoneme">
            <summary>
            Gets or sets the left phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Label.RightPhoneme">
            <summary>
            Gets or sets the right phoneme.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LingFeatureValueType">
            <summary>
            Linguistic feature value type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LingFeatureValueType.Null">
            <summary>
            Enum type feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LingFeatureValueType.Enumerable">
            <summary>
            Enum type feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LingFeatureValueType.Integer">
            <summary>
            Integer type feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.LingFeatureValueType.PhoneID">
            <summary>
            Enum type feature.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.QuestionMode">
            <summary>
            The all values for QuestionMode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionMode.Lsp">
            <summary>
            Build question for LSP.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionMode.LogF0">
            <summary>
            Build question for logF0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionMode.Duration">
            <summary>
            Build question for duration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionMode.Mbe">
            <summary>
            Build question for multi-band excitation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionMode.Power">
            <summary>
            Build question for power.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionMode.Prosody">
            <summary>
            Build question for logF0 and duration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionMode.All">
            <summary>
            Build question for LSP, logF0, duration and power.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.QuestionBuilder">
            <summary>
            The class to build Hts Question builder.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionBuilder._questionList">
            <summary>
            The question list of this question builder.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the QuestionBuilder class according to phonetic question file.
            </summary>
            <param name="phoneticQuestionFile">The phonetic question file from Hts.</param>
            <param name="phonemes">The valid phoneme set, used to validate the phonetic questions.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the QuestionBuilder class according to a name and its value.
            </summary>
            <param name="namedValues">A dictionary to hold the name and its value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the QuestionBuilder class according to enum.
            </summary>
            <param name="enumType">A enum type used to generate questions.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes a new instance of the QuestionBuilder class according to integer values.
            </summary>
            <param name="values">The valid values.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.#ctor(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Int32,Microsoft.Tts.Offline.Htk.LingFeatureValueType)">
            <summary>
            Initializes a new instance of the QuestionBuilder class according to values, range and value type.
            </summary>
            <param name="values">The valid values.</param>
            <param name="minValue">The minimum feature value for generating questions.</param>
            <param name="maxValue">The maximum feature value for generating questions.</param>
            <param name="valueType">The value type.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the QuestionBuilder class according to integer values.
            </summary>
            <param name="minValue">The minValue of this item.</param>
            <param name="maxValue">The maxValue of this item.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.#ctor(Microsoft.Tts.Offline.Htk.QuestionOperator,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the QuestionBuilder class according to given values.
            </summary>
            <param name="oper">
            The given value of operator.
            </param>
            <param name="name">
            The given name.
            </param>
            <param name="valueSet">
            The given value set.
            </param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.#ctor(Microsoft.Tts.Offline.Htk.QuestionOperator,System.Int32)">
            <summary>
            Initializes a new instance of the QuestionBuilder class according to given values.
            </summary>
            <param name="oper">The given value of operator.</param>
            <param name="value">The given value.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.BuildNotApplicableFeatureQuestion(System.String,System.String,System.String)">
            <summary>
            Build question for not applicable feature value.
            </summary>
            <param name="featureName">The corresponding feature name.</param>
            <param name="leftSeparator">The left separator of this feature.</param>
            <param name="rightSeparator">The right separator of this feature.</param>
            <returns>The question for not applicable feature value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.ExtendQuestionMarkInValueSet(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Extends question mark in value set.
            </summary>
            <param name="valueSet">The input value set of the question.</param>
            <returns>The all possible values.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.BuildQuestions(System.String,System.String,System.String)">
            <summary>
            Build questions.
            </summary>
            <param name="featureName">The corresponding feature name.</param>
            <param name="leftSeparator">The left separator of this feature.</param>
            <param name="rightSeparator">The right separator of this feature.</param>
            <returns>The array of questions.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.LoadPhoneticQuestions(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Load and verify the phonetic questions.
            </summary>
            <param name="phoneticQuestionFile">The file name of phonetic question.</param>
            <param name="phonemes">The current phoneme set.</param>
            <returns>The array which containts the all phonetic question.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.BuildQuestionMarkLessQuestion(System.Int32,System.Int32)">
            <summary>
            Builds less question including '?' mark for the value (digit * times, i.e. digit is 2, times is 100).
            </summary>
            <param name="digit">The first digit of the value, must be range in [1 ~ 9].</param>
            <param name="times">The times of the digit, must be multiple of 10.</param>
            <returns>The all possible pattern in the question.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.BuildLessQuestionValueSet(System.Int32)">
            <summary>
            Builds value set for less questions.
            </summary>
            <param name="value">The given value to build less question.</param>
            <returns>The all possible pattern in the less question.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.QuestionBuilder.BuildLessQuestionValueSetStartsWithDigit(System.Int32)">
            <summary>
            Builds value set for less questions and ensure all the pattern starts with digit (not '?').
            </summary>
            <param name="value">The given value to build less question.</param>
            <returns>The all possible pattern in the less question.</returns>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HtsLingFeatureType">
            <summary>
            HTS linguistic feature type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HtsLingFeatureType.UnKnown">
            <summary>
            Unknown feature type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HtsLingFeatureType.Integer">
            <summary>
            Interger feature type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HtsLingFeatureType.TtsPhone">
            <summary>
            Phone feature type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HtsLingFeatureType.TtsPos">
            <summary>
            Part of speech feature type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HtsLingFeatureType.Stress">
            <summary>
            Stress feature type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HtsLingFeatureType.BoundaryTone">
            <summary>
            Boundary tone feature type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.HtsLingFeatureType.Tone">
            <summary>
            Tone feature type.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.QuestionOperator">
            <summary>
            HTS question operators.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionOperator.Equal">
            <summary>
            Equal operator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionOperator.Belong">
            <summary>
            Belong operator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionOperator.Greater">
            <summary>
            Greater operator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionOperator.GreaterEqual">
            <summary>
            Greater or equal operator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionOperator.Less">
            <summary>
            Less operator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.QuestionOperator.LessEqual">
            <summary>
            Less or equal.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.Question">
            <summary>
            HTS question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question.QuestionKeyword">
            <summary>
            The key word to identify a question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question.QuestionRegex">
            <summary>
            The regex to match the whole question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question.NameRegex">
            <summary>
            The regex to match the name of the question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question.PatternRegex">
            <summary>
            The regex to match the single pattern of the question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question.ValueDelimiter">
            <summary>
            The delimiter for values embedded in feature name for each question .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question.OperatorStrings">
            <summary>
            The Dictionary whose key is operator string, and whose the value is the QuestionOperator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._name">
            <summary>
            The name of the question, which depends _featureName, _oper and _valueSetName.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._featureName">
            <summary>
            The feature name of the question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._oper">
            <summary>
            The operator of the question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._valueSetName">
            <summary>
            The value set name of the question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._valueSet">
            <summary>
            The value set of the question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._codeValueSet">
            <summary>
            The code value set of the question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._expression">
            <summary>
            The expresssion string of the question, which depends _name and _patterns.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._patterns">
            <summary>
            The match pattern string of the question, which depends _valueSet, _leftSeparator and _rightSeparator.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._leftSeparator">
            <summary>
            The left separator of the value in the question.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.Question._rightSeparator">
            <summary>
            The right separator of the value in the question.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.#ctor">
            <summary>
            Initializes a new instance of the Question class as an empty class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Question class and set its Expression.
            </summary>
            <param name="expression">Question expression.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.ToString">
            <summary>
            Gets the expression of Question in HTK format.
            </summary>
            <returns>Question string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.Equals(System.Object)">
            <summary>
            Tests equal with obj.
            </summary>
            <param name="obj">Object to test with.</param>
            <returns>True if equal, otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
            <returns>Hash code of this object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.ToOperator(System.String)">
            <summary>
            Converts string to question operator.
            </summary>
            <param name="operString">Operator string.</param>
            <returns>Question operator.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.ToOperator(Microsoft.Tts.Offline.Htk.QuestionOperator)">
            <summary>
            Converts question operator to string.
            </summary>
            <param name="oper">Question operator.</param>
            <returns>Question string.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.ExpandWildCard(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Expand question value with wildcard ?.
            </summary>
            <param name="questionValue">Question value.</param>
            <param name="valueSet">Value set to add.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.UpdateFields(System.String)">
            <summary>
            Updates the fields of this object according to given expression.
            The expression looks like: QS Phone.PhoneIdentity_High { "*-ih+*","*-iy+*","*-uh+*","*-uw+*" }
                                       QS Phone.BwPosInSyllable==6 { "*|6-*" }
                                       QS Phone.BwPosInSyllable&lt;=2 { "*|1-*","*|2-*" }.
            </summary>
            <param name="expression">The given expression.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.UpdateName(System.String)">
            <summary>
            Updates the fields of this object according to the given name.
            The name looks like: Phone.PhoneIdentity_High
                                 Phone.BwPosInSyllable==6
                                 Phone.BwPosInSyllable&lt;=2.
            </summary>
            <param name="name">The given name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.ResetName">
            <summary>
            Resets name to rebuild.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.Question.ResetPatterns">
            <summary>
            Resets patterns to rebuild.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.Expression">
            <summary>
            Gets or sets question expression.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.Language">
            <summary>
            Gets or sets the language.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.Name">
            <summary>
            Gets or sets the question name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.FeatureName">
            <summary>
            Gets or sets feature Name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.Oper">
            <summary>
            Gets or sets operator of the question.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.ValueSetName">
            <summary>
            Gets or sets the name of the value set of the question.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.Patterns">
            <summary>
            Gets operator of the question.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.ValueSet">
            <summary>
            Gets or sets the value set of the question.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.CodeValueSet">
            <summary>
            Gets or sets the code value set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.LeftSeparator">
            <summary>
            Gets or sets the left separator of the question.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Question.RightSeparator">
            <summary>
            Gets or sets the right separator of the question.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.StatisticFileSplitOptions">
            <summary>
            The options for statistic file split.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.StatisticFileSplitOptions.Phoneme">
            <summary>
            Split by phoneme.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.StatisticItem">
            <summary>
            One item of the Htk statistic file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.StatisticItem.SplitChars">
            <summary>
            The split characters for statistic item.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.StatisticItem.Parse(System.String)">
            <summary>
            Parses a line to generate a statistic item.
            </summary>
            <param name="line">A line in statistic file.</param>
            <returns>The corresponding statistic item object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.StatisticItem.ToString">
            <summary>
            Converts this object to string.
            </summary>
            <returns>The string represent the object.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.StatisticItem.Label">
            <summary>
            Gets or sets the Htk label of this item.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.StatisticItem.Count">
            <summary>
            Gets or sets the number of times the state occurred.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.StatisticItem.Occupancies">
            <summary>
            Gets or sets the occupancy of each state.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.StatisticFile">
            <summary>
            The statistic file object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.StatisticFile.#ctor">
            <summary>
            Initializes a new instance of the StatisticFile class as an empty object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.StatisticFile.Load(System.String)">
            <summary>
            Loads the statistic file.
            </summary>
            <param name="statisticFile">The statistic file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.StatisticFile.Save(System.String)">
            <summary>
            Saves the object into a statistic file.
            </summary>
            <param name="statisticFile">The statistc file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.StatisticFile.Split(Microsoft.Tts.Offline.Htk.StatisticFileSplitOptions)">
            <summary>
            Splits the statistic file.
            </summary>
            <param name="option">The split options.</param>
            <returns>A dictionry whose key is phoneme and value is statistic file object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.StatisticFile.GenerateFullListFile(System.String)">
            <summary>
            Generates the full list file.
            </summary>
            <param name="fullListFile">The full list file name.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.StatisticFile.Items">
            <summary>
            Gets or sets the list of statistic items.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.DecisionForestExtension">
            <summary>
            Extension class for DecisionForest.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForestExtension.GetSelectiveTriphone(Microsoft.Tts.Offline.Htk.DecisionForest,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Gets the selective tri-phone for each leaf nodes in the forest.
            </summary>
            <remarks>This method bases on this assumption: The leaf nodes in a forest must have different name.</remarks>
            <param name="forest">The given forest.</param>
            <param name="phonemes">The whole set of phoneme, which is used to initialize the tri-phone pairs.</param>
            <returns>The selective tri-phone for each leaf node in decision forest. The key is the leaf node, and the tri-phone pair set is the value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForestExtension.GetPreselectionTriphone(Microsoft.Tts.Offline.Htk.DecisionForest,System.Collections.Generic.List{Microsoft.Tts.Offline.Htk.Label})">
            <summary>
            Gets the pre-selection triphone for each leaf nodes in pre-selection forest.
            </summary>
            <param name="forest">The pre-selection forest.</param>
            <param name="labels">The given list of the labels in training set.</param>
            <returns>A Dictionary whose key is a Label to indicate a triphone, whose value is leaf nodes in forest.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForestExtension.FilterDecisionForest(Microsoft.Tts.Offline.Htk.DecisionForest,Microsoft.Tts.Offline.Htk.Label)">
            <summary>
            Gets the all leaf nodes which can match the given label in the decision forst.
            </summary>
            <param name="forest">The given decision forest.</param>
            <param name="label">The given label.</param>
            <returns>A List object contains all the matched leaf nodes.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForestExtension.MatchHtsQuestion(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.String)">
            <summary>
            Match a question in HTS.
            </summary>
            <param name="valueSet">The validate value for this question.</param>
            <param name="featureValue">The feature value to judge.</param>
            <returns>Match result(true/false).</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForestExtension.FilterTree(Microsoft.Tts.Offline.Htk.DecisionTreeNode,System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.Htk.Question},Microsoft.Tts.Offline.Htk.Label)">
            <summary>
            Filters a tree to get the leaf node.
            </summary>
            <param name="node">The first node of the tree.</param>
            <param name="questions">A Dictionary to contains all the Question used by the tree.</param>
            <param name="label">The given label.</param>
            <returns>The leaf node which match the label.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForestExtension.GetSelectiveTriphone(Microsoft.Tts.Offline.Htk.DecisionTree,System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.Htk.Question},System.Collections.Generic.HashSet{System.String})">
            <summary>
            Gets the selective tri-phone for each leaf nodes in the tree.
            </summary>
            <param name="tree">The given tree.</param>
            <param name="questions">The related questions.</param>
            <param name="phonemes">The whole set of phoneme, which is used to initialize the tri-phone pairs.</param>
            <returns>The selective tri-phone for each leaf node in decision tree.
            The key is the leaf node, and the tri-phone pair set is the value.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.DecisionForestExtension.GetSelectiveTriphone(System.Collections.Generic.Dictionary{Microsoft.Tts.Offline.Htk.DecisionTreeNode,Microsoft.Tts.Offline.Htk.TriphoneSet},System.Collections.Generic.IDictionary{System.String,Microsoft.Tts.Offline.Htk.Question})">
            <summary>
            Gets the selective tri-phone for each leaf nodes in the tree.
            </summary>
            <param name="nodeToTriphone">The selective tri-phone for first node in decision tree. The key is the leaf node, and the tri-phone pair set is the value.</param>
            <param name="questions">The related questions.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.TriphoneSet">
            <summary>
            The tri-phone set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TriphoneSet.#ctor">
            <summary>
            Initializes a new instance of the TriphoneSet class as an empty set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TriphoneSet.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the TriphoneSet class as a whole set of all given phonemes.
            </summary>
            <param name="phonemes">The given phonemes.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TriphoneSet.#ctor(Microsoft.Tts.Offline.Htk.TriphoneSet)">
            <summary>
            Initializes a new instance of the TriphoneSet class as a copy of the given instance.
            </summary>
            <param name="set">The set to copied.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TriphoneSet.GetAllTriphone">
            <summary>
            Gets the all possible tri-phone from this set.
            </summary>
            <returns>The list of Label object to hold the tri-phone.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TriphoneSet.LeftPhones">
            <summary>
            Gets or sets the left phoneme set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TriphoneSet.CentralPhones">
            <summary>
            Gets or sets the central phoneme set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TriphoneSet.RightPhones">
            <summary>
            Gets or sets the right phoneme set.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.XML.TtsXmlSerializer">
            <summary>
            TtsXmlSerializer.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.XML.TtsXmlSerializer.LoadConfig``1(System.String,System.Xml.Schema.XmlSchema)">
            <summary>
            LoadConfig.
            </summary>
            <typeparam name="T">Serialze type.</typeparam>
            <param name="configFile">ConfigFile.</param>
            <param name="schema">Schema.</param>
            <returns>Serialzed object.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.XML.TtsXmlSerializer.SaveConfig``1(``0,System.String)">
            <summary>
            SaveConfig.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="t">T t.</param>
            <param name="destFile">DestFile.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.PositionKind">
            <summary>
            Postion kind of wave snippet for candidate.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.PositionKind.Head">
            <summary>
            Head of candidate.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.PositionKind.Tail">
            <summary>
            Tail of candidate.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.CandidateGroup">
            <summary>
            The leaf node for pre-selection, which contains many candidates here as a candidate group.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.CandidateGroup._candidates">
            <summary>
            The all candidates in this gourp.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.CandidateGroup.Load(System.IO.StreamReader,Microsoft.Tts.Offline.Htk.TrainingSentenceSet)">
            <summary>
            Loads the candidate group from file.
            </summary>
            <param name="reader">The StreamReader of candidate group data file.</param>
            <param name="sentenceSet">Sentence set where to find the candidates.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.CandidateGroup.Save(System.IO.StreamWriter)">
            <summary>
            Saves candidate group to file.
            </summary>
            <param name="fileWriter">The StreamWriter of the candidate group data file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.CandidateGroup.BuildMargins(Microsoft.Tts.Offline.Htk.PositionKind)">
            <summary>
            Builds margins for the candidate group.
            </summary>
            <param name="position">Position of wave margin.</param>
            <returns>A list of margins.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.CandidateGroup.FindCandidate(Microsoft.Tts.Offline.Htk.TrainingSentenceSet,System.String,System.Int32,System.String)">
            <summary>
            Finds the corresponding candidate in the given sentence set.
            </summary>
            <param name="sentenceSet">The given sentence set.</param>
            <param name="sentId">The sentence id which contains the candidate.</param>
            <param name="indexOfNonSilence">The index of non-silence unit of the candidate.</param>
            <param name="label">The label of the candidate.</param>
            <returns>The corresponding candidate.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.CandidateGroup.Id">
            <summary>
            Gets or sets group Id which is an unique index for each group.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.CandidateGroup.Name">
            <summary>
            Gets or sets group name. Currently, it is a tri-phone name.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.CandidateGroup.Candidates">
            <summary>
            Gets all the candidates which belong to this group.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.PreSelectionData">
            <summary>
            Pre-selection data object model, used to save/load/compiler the pre-selection data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.PreSelectionData._nameIndexedCandidateGroup">
            <summary>
            The key is the name of CandidateGroup (same as the leaf nodes' name of pre-selection decision forest), and the value is the specified CandidateGroup.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.PreSelectionData._decisionForest">
            <summary>
            The pre-selection decision forest.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.PreSelectionData._sentenceSet">
            <summary>
            The related sentence set.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PreSelectionData.#ctor">
            <summary>
            Initializes a new instance of the PreSelectionData class as an empty object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PreSelectionData.#ctor(Microsoft.Tts.Offline.Htk.DecisionForest,Microsoft.Tts.Offline.Htk.TrainingSentenceSet,Microsoft.Tts.Offline.Htk.LabelFeatureNameSet)">
            <summary>
            Initializes a new instance of the PreSelectionData class according to given forest and sentenceSet.
            </summary>
            <param name="forest">The given forest.</param>
            <param name="sentenceSet">The given sentence set where to find candiates.</param>
            <param name="fullFeatureNameSet">The full feature set to parse tree.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PreSelectionData.SaveAsText(System.String,System.String)">
            <summary>
            Saves the pre-selection data as text.
            </summary>
            <param name="forestFile">The file name of decision forest.</param>
            <param name="candidateGroupFile">The file name of candidate group data.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PreSelectionData.LoadFromText(System.String,System.String,Microsoft.Tts.Offline.Htk.TrainingSentenceSet)">
            <summary>
            Loads the pre-selection data from text file.
            </summary>
            <param name="forestFile">The file name of decision forest.</param>
            <param name="candidateGroupFile">The file name of candidate group data.</param>
            <param name="sentenceSet">The given sentence set where to find candidates.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PreSelectionData.GetCandidatesByPhone(System.String)">
            <summary>
            Gets candidates of a phone, ordered by their id.
            </summary>
            <param name="phone">The phone name.</param>
            <returns>The candidates of the phone.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PreSelectionData.BuildCCMatrix(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Build cross correlation matrix.
            </summary>
            <param name="phoneList">Mono phone list.</param>
            <returns>Cross correlation matrix.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PreSelectionData.PreselectionForest">
            <summary>
            Gets the all pre-selection decision trees.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PreSelectionData.CandidateGroups">
            <summary>
            Gets the all candidate groups in pre-selection.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PreSelectionData.CandidateGroupsDictionary">
            <summary>
            Gets the name - candidate groups in pre-selection.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PreSelectionData.Names">
            <summary>
            Gets distinct phone names.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.Distribution">
            <summary>
            The distribution information for Hts decision tree.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Distribution.Id">
            <summary>
            Gets or sets the unique identifier for the distribution. Here it will be the stream offset.
            For multi-stream scenario (i.e. logf0), it should be the first stream offset.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Distribution.Name">
            <summary>
            Gets or sets the name of the distribution, exactly, it is the leaf nodes' name of HTS decision forest.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Distribution.State">
            <summary>
            Gets or sets the state which this leaf nodes' represented.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.Distribution.Streams">
            <summary>
            Gets or sets the streams which this leaf nodes' represented.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.TextF0File">
            <summary>
            The class to manipulate the text f0 file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TextF0File._fileName">
            <summary>
            The file name of this f0 file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TextF0File._data">
            <summary>
            The data to store the data of f0 file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextF0File.Load(System.String)">
            <summary>
            Loads the data from the given file.
            </summary>
            <param name="file">
            The given file name.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Exception.
            </exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextF0File.Save(System.String)">
            <summary>
            Saves the file into text file.
            </summary>
            <param name="file">
            The given file name to store the f0 data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Exception.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            Exception.
            </exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextF0File.Smooth(System.Int32,System.Int32,System.Single,System.Single,System.String)">
            <summary>
            Smooths f0 data using median filter.
            </summary>
            <param name="windowLength">
            The window length of the median filter.
            </param>
            <param name="iteration">
            The iteration number of the median filter.
            </param>
            <param name="minValue">
            The min value of the f0 data.
            </param>
            <param name="maxValue">
            The max value of the f0 data.
            </param>
            <param name="uvFile">
            Uv file.
            </param>
            <exception cref="T:System.ArgumentException">
            Exception.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            Exception.
            </exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextF0File.ConvertToLog">
            <summary>
            Converts the f0 data to logarithmic data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextF0File.ZeroSilence(System.String,System.Single)">
            <summary>
            Zeros f0 in the silence frames.
            </summary>
            <param name="alignmentFile">
            The alignment file.
            </param>
            <param name="secondsPerFrame">
            The seconds per frame.
            </param>
            <exception cref="T:System.ArgumentException">
            Exception.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            Exception.
            </exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextF0File.IsAllDataZero">
            <summary>
            Check whether all data is zero.
            </summary>
            <returns>Whether all data is zero.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TextF0File.Data">
            <summary>
            Gets data of the f0 file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.PitchMarkerFile">
            <summary>
            The class to manipulate the text pitch marker file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.PitchMarkerFile._fileName">
            <summary>
            The file name of this pitch marker file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.PitchMarkerFile._data">
            <summary>
            The data to store the data of pitch marker file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.PitchMarkerFile._dataWithinFrame">
            <summary>
            The data store the frame offset and period.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PitchMarkerFile.Load(System.String,System.Int32)">
            <summary>
            Loads the data from the given file.
            </summary>
            <param name="file">
            The given file name.
            </param>
            <param name="frameNumber">
            The number of frame.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Exception.
            </exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PitchMarkerFile.Save(System.String)">
            <summary>
            Saves the file into text file.
            </summary>
            <param name="file">
            The given file name to store the pitch marker data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Exception.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            Exception.
            </exception>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PitchMarkerFile.Data">
            <summary>
            Gets data of the pitch marker file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PitchMarkerFile.DataWithInFrame">
            <summary>
            Gets data of the pitch marker within frame.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.TextPowerFile">
            <summary>
            The class to manipulate the text power file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TextPowerFile._fileName">
            <summary>
            The file name of this power file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TextPowerFile._data">
            <summary>
            The data to store the data of power file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextPowerFile.Load(System.String)">
            <summary>
            Loads the data from the given file.
            </summary>
            <param name="file">
            The given file name.
            </param>
            <exception cref="T:System.ArgumentNullException">ArgumentNullException.
            </exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextPowerFile.Save(System.String)">
            <summary>
            Saves the file into text file.
            </summary>
            <param name="file">
            The given file name to store the power data.
            </param>
            <exception cref="T:System.ArgumentNullException">ArgumentNullException.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">InvalidDataException.
            </exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextPowerFile.Smooth(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Smooths power data using median filter.
            </summary>
            <param name="windowLength">
            The window length of the median filter.
            </param>
            <param name="iteration">
            The iteration number of the median filter.
            </param>
            <param name="minValue">
            The min value of the power data.
            </param>
            <param name="maxValue">
            The max value of the power data.
            </param>
            <exception cref="T:System.ArgumentException">ArgumentException.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">InvalidDataException.
            </exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextPowerFile.ConvertToLog">
            <summary>
            Converts the power data to logarithmic data.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextPowerFile.ZeroSilence(System.String,System.Single)">
            <summary>
            Zeros power in the silence frames.
            </summary>
            <param name="alignmentFile">
            The alignment file.
            </param>
            <param name="secondsPerFrame">
            The seconds per frame.
            </param>
            <exception cref="T:System.ArgumentException">ArgumentException.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">InvalidDataException.
            </exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.TextPowerFile.IsAllDataZero">
            <summary>
            Check whether all data is zero.
            </summary>
            <returns>Whether all data is zero.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.TextPowerFile.Data">
            <summary>
            Gets data of the power file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.F0Extractor">
            <summary>
            The class to extract more accurate f0 by uv model.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,Microsoft.Tts.Offline.Utility.ILogger,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.F0Extractor"/> class.
            </summary>
            <param name="fileMap">File list map.</param>
            <param name="waveDir">Input wave directory.</param>
            <param name="workDir">Output data direcotry.</param>
            <param name="getF0Tool">The path of get_f0.exe file.</param>
            <param name="getF0Config">The path of get_f0.config file.</param>
            <param name="straightTool">The path of straight_all.exe file.</param>
            <param name="svmScaleTool">The path of svm-scale.exe file.</param>
            <param name="svmPredictTool">The path of svm-predit.exe file.</param>
            <param name="modelFilePath">Svm model file path.</param>
            <param name="minF0">The min f0 value.</param>
            <param name="maxF0">The max f0 value.</param>
            <param name="secondsPerFrame">The length of one frame in seconds.</param>
            <param name="samplesPerSecond">The sample number in one second.</param>
            <param name="dimension">Uv feature dimension.</param>
            <param name="frameBias">Frame bias of f0.</param>
            <param name="logger">The logger.</param>
            <param name="enableCosmos">Enable cosmos.</param>
            <param name="cosmosPath">Cosmos path.</param>
            <param name="fileSS">The structured stream file.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Exception.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Exception.</exception>
            <exception cref="T:System.ArgumentNullException">Exception.</exception>
            <exception cref="T:System.ArgumentException">Exception</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractLpcResidualErrorOneFile(System.String[],System.IO.TextWriter)">
            <summary>
            Extract lpc residual error.
            </summary>
            <param name="args">Arguments: wave file, lpc file, lpc error file.</param>
            <param name="logWriter">LogWriter to implement parallel computing interface.</param>
            <exception cref="T:System.ArgumentException">Exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.MergeFeaturesOneFile(System.String[],System.IO.TextWriter)">
            <summary>
            Merge 6 basic features.
            </summary>
            <param name="args">Arguments: related fea file, residual fea file, nccf fea file, merged fea file.</param>
            <param name="logWriter">LogWriter to implement parallel computing interface.</param>
            <exception cref="T:System.ArgumentException">Exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExpandFeaturesOneFile(System.String[],System.IO.TextWriter)">
            <summary>
            Expand features: add previous frame, next frame and calculate delta.
            </summary>
            <param name="args">Arguments: basic six fea file, expanded fea file.</param>
            <param name="logWriter">LogWriter to implement parallel computing interface.</param>
            <exception cref="T:System.ArgumentException">Exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.FormatFeaturesOneFile(System.String[],System.IO.TextWriter)">
            <summary>
            Format features into svm style: lable 1:fea1 2:fea2.
            </summary>
            <param name="args">Arguments: f0 file, raw fea file, svm fea file.</param>
            <param name="logWriter">LogWriter to implement parallel computing interface.</param>
            <exception cref="T:System.ArgumentException">Exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractRelatedFeaturesOneFile(System.String[],System.IO.TextWriter)">
            <summary>
            Extract related features from wave: zero crossing, energy, autocorrelation.
            </summary>
            <param name="args">Arguments: wave file, fea file.</param>
            <param name="logWriter">LogWriter to implement parallel computing interface.</param>
            <exception cref="T:System.ArgumentException">Exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.GenerateExtractLpcArgument(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Single)">
            <summary>
            Generate argument for Lpc extractor.
            </summary>
            <param name="waveFile">Wave file.</param>
            <param name="f0File">F0 file.</param>
            <param name="lpcFile">Lpc file.</param>
            <param name="of0File">OF0 file.</param>
            <param name="fftDim">FFT Dim.</param>
            <param name="lpcOrder">Lpc ordier.</param>
            <param name="secondsPerFrame">Seconds per frame.</param>
            <returns>Neutral format.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.GenerateExtractF0NccfArgument(System.String,System.String,System.String,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Generate argument for F0 extractor.
            </summary>
            <param name="getF0Config">F0 config.</param>
            <param name="waveFile">Wave file.</param>
            <param name="f0NccfFile">Nccf file.</param>
            <param name="frameBias">Frame bias.</param>
            <param name="secondsPerFrame">Seconds per frame.</param>
            <param name="minF0Value">Min F0 value.</param>
            <param name="maxF0Value">Max F0 vlaue.</param>
            <returns>The arguements.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractF0NccfOneFile(System.String[],System.IO.TextWriter)">
            <summary>
            Process one f0 nccf file.
            </summary>
            <param name="args">Arguments: f0_nccf file, nccf file, f0 file.</param>
            <param name="logWriter">LogWriter to implement parallel computing interface.</param>
            <exception cref="T:System.ArgumentException">Exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.SmoothOneF0File(System.String[],System.IO.TextWriter)">
            <summary>
            Smooth f0 for one wave.
            </summary>
            <param name="args">Arguments: f0 file, raw fea file, svm fea file.</param>
            <param name="logWriter">LogWriter to implement parallel computing interface.</param>
            <exception cref="T:System.ArgumentException">Exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.SmoothF0(System.String,System.String)">
            <summary>
            Smooth f0.
            </summary>
            <param name="if0Dir">Directory of input f0.</param>
            <param name="uvDir">Directory of uv data.</param>
            <exception cref="T:System.ArgumentNullException">Exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractEnhancedF0">
            <summary>
            Extract enhanced F0.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractFeatures">
            <summary>
            Extract features for uv prediction.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.PredictUV(System.String)">
            <summary>
            Predict uv results.
            </summary>
            <param name="feaDir">Direcotry of feature files.</param>
            <exception cref="T:System.ArgumentNullException">Exception.</exception>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractBasicFeatures">
            <summary>
            Extract 6 basic features.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractF0Nccf">
            <summary>
            Extract NCCF.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractRelatedFeatures">
            <summary>
            Extarct related features: zero crossing, energy, autocorrelation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractLpc">
            <summary>
            Extract wave.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExtractLpcResidualError">
            <summary>
            Extract lpc residual error.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.MergeFeatures">
            <summary>
            Merge 6 features.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ExpandFeatures">
            <summary>
            Calculate expand and delta features.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.FormatFeatures">
            <summary>
            Format features.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.F0Extractor.ScaleFeatures">
            <summary>
            Scale features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.WaveDir">
            <summary>
            Gets or sets wave directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.WorkDir">
            <summary>
            Gets or sets work directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.ModelFilePath">
            <summary>
            Gets or sets svm model file path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.MinF0Value">
            <summary>
            Gets or sets the minimal F0 value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.MaxF0Value">
            <summary>
            Gets or sets the maximum f0 value.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.SecondsPerFrame">
            <summary>
            Gets or sets the length of one frame in seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.FrameShift">
            <summary>
            Gets or sets the sample count of one frame shift.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.FrameLength">
            <summary>
            Gets or sets the sample count of one frame.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.Dimension">
            <summary>
            Gets or sets uv feature dimension.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.FrameBias">
            <summary>
            Gets or sets frame bias.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.Logger">
            <summary>
            Gets or sets logger.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.FileMap">
            <summary>
            Gets or sets file map list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.IntermediateDir">
            <summary>
            Gets or sets intermediate directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.GetF0Tool">
            <summary>
            Gets or sets the get_f0.exe.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.GetF0Config">
            <summary>
            Gets or sets the tool configuration file for get_f0.exe.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.StraightTool">
            <summary>
            Gets or sets the get_f0.exe.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.SvmScaleTool">
            <summary>
            Gets or sets the svm-scale.exe.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.SvmPredictTool">
            <summary>
            Gets or sets the svm-predict.exe.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.F0NccfDir">
            <summary>
            Gets or sets directory for f0_nccf data.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.RealtedFeaDir">
            <summary>
            Gets or sets directory for related features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.NccfDir">
            <summary>
            Gets or sets directory for nccf features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.LPCDir">
            <summary>
            Gets or sets directory for lpc features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.ResidualDir">
            <summary>
            Gets or sets directory for lpc residual error.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.F0Dir">
            <summary>
            Gets or sets directory for f0 features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.MergedFeaDir">
            <summary>
            Gets or sets directory for merged six basic features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.ExpandFeaDir">
            <summary>
            Gets or sets directory for expanded features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.SvmFeaDir">
            <summary>
            Gets or sets directory for svm features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.ScaledSvmFeaDir">
            <summary>
            Gets or sets directory for scaled svm features.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.UVDir">
            <summary>
            Gets or sets directory for uv result.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.F0Extractor.SmoothedF0Dir">
            <summary>
            Gets or sets directory for smoothed f0 files.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.KldCalculator">
            <summary>
            Groups KLD table calculation inputs.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.KldCalculator.CalculateKld(Microsoft.Tts.Offline.Utility.Pair{System.String,System.String}[],System.String,System.IO.TextWriter)">
            <summary>
            Process pairs of candidate group and leaf nodes for KLD calculation.
            Three steps are performed:
            1. Prepare HKLD input.
            2. Call HKLD for KLD calculation.
            3. save kld result into a float array.
            </summary>
            <param name="pairs">Array to contain the two model names.</param>
            <param name="name">The id of this part.</param>
            <param name="logWriter">The log writer.</param>
            <returns>Kld result array.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.KldCalculator.PrepareHKldInput(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.Utility.Pair{System.String,System.String}},System.String,System.String,System.String)">
            <summary>
            Prepare input files for HKLD.
            </summary>
            <param name="pairs">Candidate group and leaf nodes pairs.</param>
            <param name="scriptFile">The HKLD script file to build.</param>
            <param name="fullContextHmmListFile">The full context HMM list file to build.</param>
            <param name="clusteredHmmListFile">The clustered HMM list file to build.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.KldCalculator.PrepareHKldScript(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.Utility.Pair{System.String,System.String}},System.String)">
            <summary>
            Prepare script file for HKLD.
            </summary>
            <param name="pairs">Candidate group and leaf nodes pairs.</param>
            <param name="scriptFile">The HKLD script file to build.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.KldCalculator.PrepareHkldClusteredHmmList(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.Utility.Pair{System.String,System.String}},System.String)">
            <summary>
            Prepare clustered HMM list for HKLD.
            </summary>
            <param name="pairs">Candidate group and leaf nodes pairs.</param>
            <param name="clusteredHmmListFile">The clustered HMM list file to build.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.KldCalculator.PrepareHkldFullContextHmmList(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.Utility.Pair{System.String,System.String}},System.String)">
            <summary>
            Prepare full context HMM list for HKLD.
            </summary>
            <param name="pairs">Candidate group and leaf nodes pairs.</param>
            <param name="fullContextHmmListFile">The full context HMM list file to build.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.KldCalculator.TrimStateStreamInfo(System.String)">
            <summary>
            Trim the state and stream info on given full context label.
            </summary>
            <param name="label">Given full context label.</param>
            <returns>The pure full context lable.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.KldCalculator.CollectKldTables(System.Collections.Generic.IEnumerable{Microsoft.Tts.Offline.Utility.Pair{System.String,System.String}},System.String,System.IO.TextWriter)">
            <summary>
            Save KLD cost tables from parsing HKLD output file.
            </summary>
            <param name="pairs">Candidate group and leaf nodes pairs.</param>
            <param name="hkldOutputFile">HKLD output file to parse.</param>
            <param name="logWriter">The log writer.</param>
            <returns>Kld result array .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.KldCalculator.RunHkld(System.String,System.String,System.String,System.String,System.IO.TextWriter)">
            <summary>
            Calculate KLD with HKLD.exe.
            </summary>
            <param name="scriptFile">The HKLD script file to build.</param>
            <param name="outputFile">The HKLD output file.</param>
            <param name="fullContextHmmListFile">The full context HMM list file to build.</param>
            <param name="clusteredHmmListFile">The clustered HMM list file to build.</param>
            <param name="logWriter">The log writer.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.KldCalculator.IntermediatePath">
            <summary>
            Gets or sets the intermediate path
            Input of this handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.KldCalculator.HKldTool">
            <summary>
            Gets or sets the hkld tool
            Input of this handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.KldCalculator.HtkToolConfigurationFile">
            <summary>
            Gets or sets the configuration file for external Htk tool.
            Input of this handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.KldCalculator.FullContextModelFile">
            <summary>
            Gets or sets the file name of the full-context model from Hts.
            Input of this handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.KldCalculator.ClusteredModelFile">
            <summary>
            Gets or sets the file name of the clustered full-context model from Hts.
            Input of this handler.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.ParameterKinds">
            <summary>
            The parameter kinds.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.WaveForm">
            <summary>
            Sampled waveform.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.Lpc">
            <summary>
            Linear prediction filter coefficients.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.LpcReflection">
            <summary>
            Linear prediction reflection coefficients.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.LpcCepstral">
            <summary>
            LPC cepstral coefficients.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.LpcCepstralWithDela">
            <summary>
            LPC cepstral plus delta coefficients.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.LpcReflection16Bit">
            <summary>
            LPC reflection coefficients in 16 bit integer.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.Mfcc">
            <summary>
            Mel-frequncy cepstral coefficients.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.LogMelBankChannel">
            <summary>
            Log mel-filter bank channel outpus.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.LinearMelBankChannel">
            <summary>
            Linear mel-filter bank channel outputs.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.UserDefined">
            <summary>
            User defined sample kind.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.ParameterKinds.Discrete">
            <summary>
            Vector quantised data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HtkParameterFile">
            <summary>
            The HTK format parameter file, which consist of a contiguous sequance of samples preceded by a header.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkParameterFile.Load(System.String)">
            <summary>
            Loads data file file.
            </summary>
            <param name="file">The given file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtkParameterFile.Save(System.String)">
            <summary>
            Saves data into file.
            </summary>
            <param name="file">The given file name.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkParameterFile.SampleCount">
            <summary>
            Gets number of samples in file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkParameterFile.SamplePeriod">
            <summary>
            Gets or sets sample period in 100ns units.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkParameterFile.SampleSize">
            <summary>
            Gets number of bytes per sample.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkParameterFile.ParameterKind">
            <summary>
            Gets or sets a code indicating the sample kind.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkParameterFile.SamplePeriodInSecond">
            <summary>
            Gets or sets the sample period in second units.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtkParameterFile.Data">
            <summary>
            Gets or sets the data in the parameter file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.UnitCandidateType">
            <summary>
            Unit Candidate Type. Currently, support phone and halfphone only. Could add incrementally.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.UnitCandidateType.Phone">
            <summary>
            Phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.UnitCandidateType.Halfphone">
            <summary>
            Half phone.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.UnitCandidate">
            <summary>
            The candidate is the unit instance in each sentence, which represent a segmentation of waveform.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.UnitCandidate.InvalidId">
            <summary>
            The unique identifier for this candidate in this unit type. InvalidId means it not tagged id yet or it have no id.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.UnitCandidate.LoadMargin(Microsoft.Tts.Offline.Waveform.WaveFile,System.Int32)">
            <summary>
            Loads wave margin for the candidate.
            </summary>
            <param name="wave">WaveFile from which to load the data.</param>
            <param name="marginLength">Cross correlation margin length in millisecond.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.UnitCandidate.ResetId">
            <summary>
            Resets the candidate Id to negative value.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.UnitCandidate.GetClusterArea(System.Int32)">
            <summary>
            Get focus area in decision tree.
            </summary>
            <param name="streamIdxOfGuidanceLsp">Stream index of guidance LSP.</param>///
            <returns>Cluster area.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.Type">
            <summary>
            Gets or sets Unit candidate type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.Id">
            <summary>
            Gets or sets the unique identifier for this candidate in this unit type.
            It is assigned to build voice font and may difference in each run time.
            After preselection tree is loaded, if the Id is negative value, it means this candidate is not used in the
            Voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.GlobalId">
            <summary>
            Gets or sets the unique identifier for this candidate in overall voice font.
            It is assigned to build voice font and may difference in each run time.
            After preselection tree is loaded, if the Id is negative value, it means this candidate is not used in the
            Voice font.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.Label">
            <summary>
            Gets or sets the label of this Candidate.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.Name">
            <summary>
            Gets or sets  the name of the candidate.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.LeftPhoneme">
            <summary>
            Gets or sets  the left phoneme of this phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.RightPhoneme">
            <summary>
            Gets or sets  the right phoneme of this phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.Sentence">
            <summary>
            Gets or sets the sentence which this candidate belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.Index">
            <summary>
            Gets or sets the index of this candidate in the sentences.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.IndexOfNonSilence">
            <summary>
            Gets or sets the index of this candidate in those non-silence candidate of the sentences.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.StartTime">
            <summary>
            Gets or sets the start time of this candidate, in 1.0e-7s.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.EndTime">
            <summary>
            Gets or sets the end time of this candidate, in 1.0e-7s.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.StartTimeInSecond">
            <summary>
            Gets or sets the start time of this candidate, in second.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.EndTimeInSecond">
            <summary>
            Gets or sets the end time of this candidate, in second.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.StartFrame">
            <summary>
            Gets the start frame index of this phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.EndFrame">
            <summary>
            Gets the end frame index of this phoneme.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.FullContextLabel">
            <summary>
            Gets the full-context label.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.HeadMargin">
            <summary>
            Gets or sets the head margin for the candidate.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.TailMargin">
            <summary>
            Gets or sets the tail margin for the candidate.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.MustHold">
            <summary>
            Gets or sets a value indicating whether the candidate holdon attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.SilenceCandidate">
            <summary>
            Gets or sets a value indicating whether the candidate is part of silence.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.UnitCandidate.ExistInUnitInventory">
            <summary>
            Gets a value indicating whether this unit candidate belongs to unit inventory.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.PhoneCandidate">
            <summary>
            Class to represent phone candidate, contain the specific data for phone candidate.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PhoneCandidate.#ctor(Microsoft.Tts.Offline.Htk.PhoneSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.PhoneCandidate"/> class.
            </summary>
            <param name="phoneme">Phone segment link.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.PhoneCandidate.GetClusterArea(System.Int32)">
            <summary>
            Get cluster area, for phone, the cluster area is whole states.
            Generally, only Lsp and LogF0 are used for clustering. If guidanceLsp is modeled, Lsp is replaced by guidanceLsp.
            </summary>
            <param name="streamIdxOfGuidanceLsp">Stream index of guidance LSP.</param>///
            <returns>Cluster area.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.PhoneCandidate.PhoneSegmentLink">
            <summary>
            Gets or sets Link to corresponding phone segment.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HalfPhoneCandidate">
            <summary>
            Class to represent half phone candidate, contain the specific data for half phone.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HalfPhoneCandidate.#ctor(Microsoft.Tts.Offline.Htk.PhoneSegment,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.HalfPhoneCandidate"/> class.
            </summary>
            <param name="phoneme">Phone segment link.</param>
            <param name="isLeftHalfPhone">Flag to left or right half phone.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HalfPhoneCandidate.GetClusterArea(System.Int32)">
            <summary>
            Get cluster area, for half phone, the cluster area is first 2 states for left half phone, and last 2 states for right half phone.
            Generally, only Lsp and LogF0 are used for clustering. If guidanceLsp is modeled, Lsp is replaced by guidanceLsp.
            </summary>
            <param name="streamIdxOfGuidanceLsp">Stream index of guidance LSP.</param>///
            <returns>Cluster area.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HalfPhoneCandidate.PhoneSegmentLink">
            <summary>
            Gets or sets Link to corresponding phone segment.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HalfPhoneCandidate.IsLeftHalfPhone">
            <summary>
            Gets or sets a value indicating whether Flag for left half phone or right half phone.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.AdaptationTransformType">
            <summary>
            Voice adaptation transform type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.AdaptationTransformType.UNDEFINED">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.AdaptationTransformType.CMP">
            <summary>
            Cmp.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.AdaptationTransformType.StateDuration">
            <summary>
            State duration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.AdaptationTransformType.PhoneDuration">
            <summary>
            Phone duration.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.TransformType">
            <summary>
            Voice adaptation transform type.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TransformType.UNDEFINED">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TransformType.MEAN">
            <summary>
            Mean.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.TransformType.VARIANCE">
            <summary>
            Variance.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile">
            <summary>
            The base class definition file used in voice adaptation process.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.Load(System.String)">
            <summary>
            Loads base class file. The file path is "..\va.cmpRegTree\AdaptationRegression.base".
            </summary>
            <param name="filePath">The given file name.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.StreamCount">
            <summary>
            Gets or sets the stream count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.StreamWidths">
            <summary>
            Gets or sets the width of each stream.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ClassCount">
            <summary>
            Gets or sets the class count.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ClassDef">
            <summary>
            Gets the base class definition. Key = class ID. Value = list of base class definition.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ModelItem">
            <summary>
            The linear transform matrixes.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ModelItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ModelItem"/> class.
            </summary>
            <param name="baseItem"> The model item string. </param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ModelItem.Parse(System.String)">
            <summary>
            Parse model item string.
            </summary>
            <param name="baseItem"> The model item string. </param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ModelItem.Name">
            <summary>
            Gets or sets the name of model.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ModelItem.StateIndex">
            <summary>
            Gets or sets the index of state.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ModelItem.StreamIndex">
            <summary>
            Gets or sets the index of stream.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsRegressionBaseFile.ModelItem.MixtureIndex">
            <summary>
            Gets or sets the index of mixture.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.HtsTransformFile">
            <summary>
            The transform matrix file used in voice adaptation process.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtsTransformFile.Load(System.String)">
            <summary>
            Loads the transform matrix file.
            </summary>
            <param name="filePath">The given file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.HtsTransformFile.LoadLinearTransform(System.IO.StreamReader)">
            <summary>
            Loads one linear transform from the stream.
            </summary>
            <param name="sr">Stream reader that contains the transform matrix.</param>
            <returns>The loaded linear transform.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsTransformFile.MeanFormMapping">
            <summary>
            Gets the mean transform mapping. 
            Key = mean transform matrix ID. Value = base class indexes that shared the same transform matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsTransformFile.VarFormMapping">
            <summary>
            Gets the variance transform mapping. 
            Key = variance transform matrix ID. Value = base classes that shared the same transform matrix.
            In current adaptation process, the "MeanFormMapping" is exactly same with "VarFormMapping".
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsTransformFile.MeanForms">
            <summary>
            Gets the mean transforms. 
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.HtsTransformFile.VarForms">
            <summary>
            Gets the variance transforms. 
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.LinXForm">
            <summary>
            The linear transform matrixes.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.LinXForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Htk.LinXForm"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LinXForm.Type">
            <summary>
            Gets or sets the type of current linear transform. 
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LinXForm.ID">
            <summary>
            Gets or sets the ID of current linear transform. 
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LinXForm.VecSize">
            <summary>
            Gets or sets the vector size of current linear transform. 
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LinXForm.Bias">
            <summary>
            Gets or sets the bias array of current linear transform. 
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.LinXForm.Blocks">
            <summary>
            Gets the transform matrix values of current linear transform.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.AdaptationMapping">
            <summary>
            The mapping relationship between transform matrix and HMM models, used for voice adaptation debug and investigation.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.AdaptationMapping.GetTransformIndexFromModelName(System.String)">
            <summary>
            Gets the transform matrix index from the model name.
            </summary>
            <param name="modelName">The model name.</param>
            <returns>The transform matrix index.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.AdaptationMapping.Transform2ModelMapping">
            <summary>
            Gets The mapping relationship from transform matrix index to HMM models.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.AdaptationMappingFile">
            <summary>
            The transform matrix and stream mapping file used for voice adaptation debugging.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.AdaptationMappingFile.CreateXformStreamMapping(System.String,System.String,System.String)">
            <summary>
            Creates mapping relationship between transform matrix and shared streams.
            </summary>
            <param name="mmfFile">The HMM model file, including unseen model.</param>
            <param name="regressionBaseFile">The regression base class definition file.</param>
            <param name="xformFile">The transform matrix file.</param>
            <returns>The mapping relationship between transform matrix and shared streams.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.AdaptationMappingFile.Save(System.String)">
            <summary>
            Saves adaptation mapping file.
            </summary>
            <param name="filePath">The given file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.AdaptationMappingFile.Load(System.String)">
            <summary>
            Loads adaptation mapping file.
            </summary>
            <param name="filePath">The given file name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.AdaptationMappingFile.Append(System.String)">
            <summary>
            Append adaptation mapping file.
            </summary>
            <param name="filePath">The given file name.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.AdaptationMappingFile.AdaptationMappings">
            <summary>
            Gets The adaptation mapping(Key = feature discription. Value = transform and stream mapping).
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Htk.MbeFile">
            <summary>
            The class to manipulate the multi-band excitation file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.MbeFile._fileName">
            <summary>
            The file name of this multi-band excitation file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Htk.MbeFile._data">
            <summary>
            The data to store the data of multi-band excitation file.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Htk.MbeFile.Load(System.String)">
            <summary>
            Loads the data from the given file.
            </summary>
            <param name="file">
            The given file name.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Exception.
            </exception>
        </member>
        <member name="P:Microsoft.Tts.Offline.Htk.MbeFile.Data">
            <summary>
            Gets data of the multi-band excitation file.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation">
            <summary>
            This class calculate the Root-Mean-Square-Error distance (Euclidean Distance)
            And correlation coefficient between two groups of acoustic features.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FFTDim">
            <summary>
            Dimension for FFT.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FrameLength">
            <summary>
            Time length for a frame, by second.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.Pi">
            <summary>
            Pi.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.RusDurationState">
            <summary>
            Fake RUS duration state to 2 to load the duration file. 
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.Process(Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles,Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Given reference and target duration, f0 and lsp file for a sentence,
            Return the evaluation result for this sentence.
            </summary>
            <param name="referenceFiles">
            Reference duration, f0, and lsp files.
            </param>
            <param name="targetFiles">
            Target duration, f0, and lsp files.
            </param>
            <param name="referenceLpcOrder">
            Dimension of reference SPS voice font, e.g. 16 or 40.
            </param>
            <param name="targetLpcOrder">
            Dimension of target SPS voice font, e.g. 16 or 40.
            </param>
            <param name="voicedUnvoicedThreshold">
            The threshold to judge whether a frame is voiced or unvoiced, by Hz.
            </param>
            <param name="lowerBoundFrequency">
            Lower bound of frequency band on which to calculate the spectrum distance.
            </param>
            <param name="upperBoundFrequency">
            Upper bound of frequency band on which to calculate the spectrum distance.
            </param>
            <param name="sampleFrequency">
            Sample frequency of the voice font.
            </param>
            <returns>The evaluation result for this sentence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.Process(Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles,Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles,System.Collections.Generic.List{Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneWordMap},System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Given reference and target duration, f0 and lsp file for a sentence,
            Return the evaluation result for this sentence.
            </summary>
            <param name="referenceFiles">
            Reference duration, f0, and lsp files.
            </param>
            <param name="targetFiles">
            Target duration, f0, and lsp files.
            </param>
            <param name="phoneWordMaps">
            The mapping information between words and phonemes.
            </param>
            <param name="referenceLpcOrder">
            Dimension of reference SPS voice font, e.g. 16 or 40.
            </param>
            <param name="targetLpcOrder">
            Dimension of target SPS voice font, e.g. 16 or 40.
            </param>
            <param name="voicedUnvoicedThreshold">
            The threshold to judge whether a frame is voiced or unvoiced, by Hz.
            </param>
            <param name="lowerBoundFrequency">
            Lower bound of frequency band on which to calculate the spectrum distance.
            </param>
            <param name="upperBoundFrequency">
            Upper bound of frequency band on which to calculate the spectrum distance.
            </param>
            <param name="sampleFrequency">
            Sample frequency of the voice font.
            </param>
            <returns>The evaluation result for this sentence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessDuration(System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}},System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}})">
            <summary>
            Calculate RMSE distance of two lists of duration.
            </summary>
            <param name="referenceDurationList">Reference duration list.</param>
            <param name="targetDurationList">Target duration list.</param>
            <returns>
            Evaluation result, correlation coefficient and in-used frame number is set to void.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessF0(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Int32})">
            <summary>
            Calculate RMSE distance and correlation coefficient of two lists of F0.
            </summary>
            <param name="referenceF0List">Reference F0 list.</param>
            <param name="targetF0List">Target F0 list.</param>
            <param name="inusedList">
            Maybe you don't want to do calculation on the whole list, this is the mask.
            </param>
            <returns>
            Evaluation result, containing RMSE distance, correlation coefficient and inused frame number.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessLsp(System.Collections.Generic.List{System.Collections.Generic.List{System.Double}},System.Collections.Generic.List{System.Collections.Generic.List{System.Double}})">
            <summary>
            Calculate RMSE distance of two lists of LSP.
            </summary>
            <param name="referenceLspList">Reference LSP list.</param>
            <param name="targetLspList">Target LSP list.</param>
            <returns>Evaluation result, correlation coefficient is set to void.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessWeightedLsp(System.Collections.Generic.List{System.Collections.Generic.List{System.Double}},System.Collections.Generic.List{System.Collections.Generic.List{System.Double}},System.Int32)">
            <summary>
            Calculate Weighted Euclidean distance of two lists of LSP.
            </summary>
            <param name="referenceLspList">Reference LSP list.</param>
            <param name="targetLspList">Target LSP list.</param>
            <param name="calculatedDimension">Calculated Dimension.</param>
            <returns>Evaluation result, correlation coefficient is set to void.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessSpectrum(System.Collections.Generic.List{System.Collections.Generic.List{System.Double}},System.Collections.Generic.List{System.Collections.Generic.List{System.Double}},System.Double,System.Double,System.Double)">
            <summary>
            Calculate RMSE distance of two lists of spectrum.
            </summary>
            <param name="referenceSpectrumList">Reference spectrum list.</param>
            <param name="targetSpectrumList">Target spectrum list.</param>
            <param name="lowerBoundFrequency">Lower bound of frequency band to do band filter.</param>
            <param name="upperBoundFrequency">Upper bound of frequency band to do band filter.</param>
            <param name="sampleFrequency">Sample frequency for the voice.</param>
            <returns>Evaluation result, correlation coefficient is set to void.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessGain(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Int32})">
            <summary>
            Calculate RMSE distance and correlation coefficient of two lists of F0.
            </summary>
            <param name="referenceGainList">Reference gain list.</param>
            <param name="targetGainList">Target gain list.</param>
            <param name="inusedList">
            Maybe you don't want to do calculation on the whole list, this is the mask.
            </param>
            <returns>
            Evaluation result, containing RMSE distance, correlation coefficient and inused frame number.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessUV(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Double,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Statistic on voiced/unvoiced frames number.
            </summary>
            <param name="referenceF0List">Reference F0 list.</param>
            <param name="targetF0List">Target F0 list.</param>
            <param name="voicedUnvoicedThreshold">Threshold to judge voiced/unvoiced frame, by Hz.</param>
            <param name="bothVoicedList">
            Return a list containing frame indexes which is voiced in both reference and target.
            </param>
            <returns>Voiced/unvoiced statistic result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.CalculateSummary(System.Collections.Generic.List{Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult})">
            <summary>
            Calculate average value from a list of FullEvaluationResult.
            </summary>
            <param name="evaluationResultList">
            A list of FullEvaluationResult.
            </param>
            <returns>
            Average value on each acoustic feature.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.WriteResult(System.Collections.Generic.List{Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult},Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary,System.String)">
            <summary>
            Write the evaluation result for all sentences and the summary into several files.
            </summary>
            <param name="resultList">FullEvaluationResult list.</param>
            <param name="summary">EvaluationSummary.</param>
            <param name="reportFolder">Folder to output the result files and summary file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessRUS(Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles,Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles,System.Int32,System.Int32,System.Double,System.Int32,System.Double,System.Double,System.Int32,Microsoft.Tts.Offline.UnitLatticeSentence)">
            <summary>
            Given reference and target duration, f0 and lsp file for a sentence,
            Return the evaluation result for this sentence.
            </summary>
            <param name="referenceFiles">
            Reference duration, f0, and lsp files, it is from SPS. 
            </param>
            <param name="targetFiles">
            Target duration, f0, and lsp files, it is from RUS best path. 
            </param>
            <param name="referenceLpcOrder">
            Dimension of reference HTS voice font, e.g. 16 or 40.
            </param>
            <param name="targetLpcOrder">
            Dimension of target HTS voice font, e.g. 16 or 40.
            </param>
            <param name="voicedUnvoicedThreshold">
            The threshold to judge whether a frame is voiced or unvoiced, by Hz.
            </param>
            <param name="calculatedDimension">
            The calculated dimension against weighted lsp distance.
            </param>
            <param name="lowerBoundFrequency">
            Lower bound of frequency band on which to calculate the spectrum distance.
            </param>
            <param name="upperBoundFrequency">
            Upper bound of frequency band on which to calculate the spectrum distance.
            </param>
            <param name="sampleFrequency">
            Sample frequency of the voice font.
            </param>
            <param name="bestPath">
            BestPath of RUS.
            </param>
            <returns>FullEvaluationResult.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessF0Outlier(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Int32})">
            <summary>
            Calculate outlier frame which the distance between reference f0 and target f0 larger than 10hz.
            </summary>
            <param name="referenceF0List">Reference f0 list.</param>
            <param name="targetF0List">Target f0 list.</param>
            <param name="inusedList">
            Maybe you don't want to do calculation on the whole list, this is the mask.
            </param>
            <returns>
            Outlier f0 info, containing outlier frame number, total frame number frame number, outlier ratio.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessCC(Microsoft.Tts.Offline.UnitLatticeSentence)">
            <summary>
            Process the concatenation info of the best path.
            </summary>
            <param name="bestPath">Best path.</param>
            <returns>ConcatenationCostInfo.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessVoicedCC(Microsoft.Tts.Offline.UnitLatticeSentence,System.Collections.Generic.List{System.Double},System.Double,System.Int32)">
            <summary>
            Process the voiced boundary of the bestpath.
            </summary>
            <param name="bestPath">Best path.</param>
            <param name="bestPathF0s">Bestpath F0 info.</param>
            <param name="voicedUnvoicedThreshold">Voiced and unvoiced threshold.</param>
            <param name="sampleRate">Sample rate of the wave.</param>
            <returns>ConcatenationCostInfo.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ProcessContinueUnitCount(Microsoft.Tts.Offline.UnitLatticeSentence)">
            <summary>
            Process the continue unit info.
            </summary>
            <param name="bestPath">Best path.</param>
            <returns>ContinueUnitInfo.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.CalculateSummaryRUS(System.Collections.Generic.List{Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult})">
            <summary>
            Calculate average value from a list of FullEvaluationResult.
            </summary>
            <param name="evaluationResultList">
            A list of FullEvaluationResult.
            </param>
            <returns>
            Average value on each acoustic feature.
            </returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.WriteResultRUS(System.Collections.Generic.List{Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult},Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary,System.String)">
            <summary>
            RUS version of Write the evaluation result for all sentences and the summary into several files.
            </summary>
            <param name="resultList">FullEvaluationResult list.</param>
            <param name="summary">EvaluationSummary.</param>
            <param name="reportFolder">Folder to output the result files and summary file.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.Rmse``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
            <summary>
            Calculate the RMSE distance between two lists of elements.
            </summary>
            <typeparam name="T">Type of elements in the list.</typeparam>
            <param name="referenceList">Reference list.</param>
            <param name="targetList">Target list.</param>
            <returns>RMSE distance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.RemoveGain(System.Collections.Generic.List{System.Collections.Generic.List{System.Double}},System.Boolean)">
            <summary>
            Original lsp list contains lsp and log gain information.
            This method remove log gain and do normalization on it.
            </summary>
            <param name="originalLspList">Original lsp list (containing gain).</param>
            <param name="withNormalization">Whether do normalization on lsp.</param>
            <returns>Gain removed lsp list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.WeightedLspEuclideanDistance(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Calculate the weighted Euclidean distance to calculate LSP distance
            Weight is calculated based on the adjacent distance of the notes. 
            Weight = 1 / (R(i) - R(i-1)) + 1 / (R(i+1) - R(i)).
            </summary>
            <param name="referenceList">Reference list.</param>
            <param name="targetList">Target list.</param>
            <param name="calculatedDimension">Calculated dimension.</param>
            <returns>Weighted Euclidean distance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.MaxDistance``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
            <summary>
            Calculate the maximum distance between two lists of elements.
            </summary>
            <typeparam name="T">Type of elements in the list.</typeparam>
            <param name="referenceList">Reference list.</param>
            <param name="targetList">Target list.</param>
            <returns>Maximum distance.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.CorrelationCoefficient``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
            <summary>
            Calculate the correlation coefficient between two lists of elements.
            </summary>
            <typeparam name="T">Type of elements in the list.</typeparam>
            <param name="referenceList">Reference list.</param>
            <param name="targetList">Target list.</param>
            <returns>Correlation coefficient.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.Average``1(System.Collections.Generic.List{``0})">
            <summary>
            Calculate the average value of a list of elements.
            </summary>
            <typeparam name="T">Type of elements in the list.</typeparam>
            <param name="elementList">Element list.</param>
            <returns>Average.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UnaryVectorCalculation``2(System.Collections.Generic.List{``0},System.Func{``0,``1})">
            <summary>
            Do unary operation on each of a list of elements.
            </summary>
            <typeparam name="TOperand">Type of operand.</typeparam>
            <typeparam name="TReturn">Type of result.</typeparam>
            <param name="operandList">Operand list.</param>
            <param name="unaryOperator">A unary operator, e.g. Log, Exp, or a customized function.</param>
            <returns>Result list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.BinaryVectorCalculation``3(System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Func{``0,``1,``2})">
            <summary>
            Do binary operation on each of a list of elements.
            </summary>
            <typeparam name="TOperand1">Type of first operand.</typeparam>
            <typeparam name="TOperand2">Type of second operand.</typeparam>
            <typeparam name="TReturn">Type of result.</typeparam>
            <param name="operandList1">List of first operand.</param>
            <param name="operandList2">List of second operand.</param>
            <param name="binaryOperator">A binary operator, e.g. Pow, Multiply.</param>
            <returns>List of result.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UnaryMatrixCalculation``2(System.Collections.Generic.List{System.Collections.Generic.List{``0}},System.Func{``0,``1})">
            <summary>
            Do unary operation on each of a matrix of elements.
            </summary>
            <typeparam name="TOperand">Type of operand.</typeparam>
            <typeparam name="TReturn">Type of result.</typeparam>
            <param name="operandMatrix">Operand matrix.</param>
            <param name="unaryOperator">A unary operator, e.g. Log, Exp, or a customized function.</param>
            <returns>Result matrix.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FilterElementByIndex``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.Int32})">
            <summary>
            Select the element from element list whose index is in index list.
            </summary>
            <typeparam name="T">Type of element.</typeparam>
            <param name="elementList">The element list.</param>
            <param name="indexList">The index list (can also called mask).</param>
            <returns>The filtered element list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.LoadDuration(System.String)">
            <summary>
            Load the duration for each state of each phone for a sentence from a file.
            </summary>
            <param name="durationFile">The file containing duration info for a sentence.</param>
            <returns>A list of duration, by number of frames.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.LoadF0(System.String)">
            <summary>
            Load the f0 for each frame for a sentence from a file.
            </summary>
            <param name="f0File">The file containing f0 info for a sentence.</param>
            <returns>A list of f0, by Hz.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.LoadLsp(System.String,System.Int32)">
            <summary>
            Load the lsp on difference dimensions for each frame for a sentence from a file.
            </summary>
            <param name="lspFile">The file containing lsp info for a sentence.</param>
            <param name="lpcOrder">The LPC order, 40 is a usual value.</param>
            <returns>A list of lsp, on each dimension of each frame.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.GetDataFileList(System.String)">
            <summary>
            Get acoustic data file list from given data folder.
            </summary>
            <param name="dataFolder">Data folder.</param>
            <returns>Data file list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.GetLpcOrder(System.String,System.String)">
            <summary>
            Calculate LPC order by F0 file and LSP file.
            </summary>
            <param name="f0File">F0 file.</param>
            <param name="lspFile">LSP file.</param>
            <returns>LPC order.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.GetPhoneLevelMaximumDistance(System.Collections.Generic.List{Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult},System.Func{Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult,System.Double})">
            <summary>
            Calculate maximum distance on phoneme level.
            </summary>
            <param name="phoneLevelResult">The original phoneme level result.</param>
            <param name="featureSelector">The acoustic feature selector.</param>
            <returns>The maximum distance, will be NaN if all the phonemes are silence.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FilterUnvoicedF0(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Double,System.Int32@,System.Int32@)">
            <summary>
            Get the index list for voiced frames on both reference and target.
            </summary>
            <param name="referenceF0List">Reference F0 list.</param>
            <param name="targetF0List">Target F0 list.</param>
            <param name="voicedUnvoicedThreshold">
            The threshold to judge whether a frame is voiced or unvoiced, by Hz.
            </param>
            <param name="voicedOfReference">Number of voiced frames in reference list.</param>
            <param name="voicedOfTarget">Number of voiced frames in target list.</param>
            <returns>A list of integers representing the index of both voiced frames.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.GetStateLevelF0(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}},System.Double)">
            <summary>
            Get the average f0 on each state according to the given duration list.
            </summary>
            <param name="f0List">F0 list.</param>
            <param name="durationList">Duration list.</param>
            <param name="voicedUnvoicedThreshold">
            The threshold to judge whether a frame is voiced or unvoiced, by Hz.
            </param>
            <returns>The average f0 list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.GetGain(System.Collections.Generic.List{System.Collections.Generic.List{System.Double}})">
            <summary>
            Original lsp list contains lsp and log gain information.
            This method extracts gain from original lsp list.
            </summary>
            <param name="originalLspList">Original lsp list (containing gain).</param>
            <returns>Gain list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.LspListToFrequencyList(System.Collections.Generic.List{System.Collections.Generic.List{System.Double}},System.Int32)">
            <summary>
            Transform a lsp list to a frequency (spectrum without gain) list.
            </summary>
            <param name="lspList">Lsp list.</param>
            <param name="lpcOrder">Dimension of HTS voice font, e.g. 16 or 40.</param>
            <returns>Frequency (spectrum without gain) list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FrequencyListToSpectrumList(System.Collections.Generic.List{System.Collections.Generic.List{System.Double}},System.Collections.Generic.List{System.Double})">
            <summary>
            Transform frequency list to spectrum list by adding gain.
            </summary>
            <param name="frequencyList">Frequency (spectrum without gain) list.</param>
            <param name="gainList">Gain (not logarithmic) list.</param>
            <returns>Spectrum list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.LspToLpcOneFrame(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Transform a lsp frame to a lpc frame
            Note: 1: Using the Chebyshev polynomial evaluation
                  2: This is a positive system: H(z) = 1 + A(z).
            </summary>
            <param name="lspFrame">A lsp frame.</param>
            <param name="lpcOrder">Dimension of HTS voice font, e.g. 16 or 40.</param>
            <returns>A LPC frame.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.LpcToSpectrumOneFrame(System.Collections.Generic.List{System.Double},System.Int32,System.Double)">
            <summary>
            Transform a lpc frame to a spectrum frame, using real FFT.
            </summary>
            <param name="lpcFrame">A LPC frame.</param>
            <param name="lpcOrder">Dimension of HTS voice font, e.g. 16 or 40.</param>
            <param name="gain">
            If this value is set to 1.0, the result will not contain gain information.
            </param>
            <returns>A spectrum frame.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FrequencyBandFilter(System.Collections.Generic.List{System.Collections.Generic.List{System.Double}},System.Double,System.Double,System.Double)">
            <summary>
            Filter spectrum by specified frequency band, on each frame of the given list.
            </summary>
            <param name="frameList">Input frame list.</param>
            <param name="lowerBoundFrequency">Lower bound of the frequency band.</param>
            <param name="upperBoundFrequency">Upper bound of the frequency band.</param>
            <param name="sampleFrequency">Sample frequency of the voice.</param>
            <returns>Spectrum filtered frame list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.GeneratePhoneLevelInfo(Microsoft.Tts.Offline.UnitLatticeSentence)">
            <summary>
            Get the phone level info of start frame, frame length, phone string. 
            </summary>
            <param name="bestPath">BestPath.</param>
            <returns>PhoneLevelResults.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.StateCount">
            <summary>
            Gets or sets the number of states in one phone.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneWordMap">
            <summary>
            This structure is used to store the mapping information between word and phonemes,
            For a single sentence.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneWordMap.WordOffset">
            <summary>
            The offset in original text of the word that the phonemes belongs to.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneWordMap.WordLength">
            <summary>
            The length in original text of the word that the phonemes belongs to.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneWordMap.PhonemeCount">
            <summary>
            The phoneme count in current word.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult">
            <summary>
            This structure is used to store the full evaluation result for a sentence,
            Including input file path, RMSE distance, correlation coefficient, voice/unvoiced frame number, etc,
            On different acoustic features.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.ReferenceFiles">
            <summary>
            Files for reference acoustic data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.TargetFiles">
            <summary>
            Files for target acoustic data.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.UVInfo">
            <summary>
            Voiced/unvoiced frame number statistic information for F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.UVInfo_StateLevel">
            <summary>
            Voiced/unvoiced frame number statistic information for state level F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.Duration">
            <summary>
            Evaluation result for duration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.F0">
            <summary>
            Evaluation result for F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.F0_StateLevel">
            <summary>
            Evalation result for state level F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.Lsp">
            <summary>
            Evaluation result for LSP.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.LogSpectrum">
            <summary>
            Evaluation result for logarithmic spectrum with gain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.LogFrequency">
            <summary>
            Evaluation result for logarithmic spectrum without gain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.Gain">
            <summary>
            Evaluation result for logarithmic gain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.PhoneLevelResult">
            <summary>
            Phone level evaluation result.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.OutlierF0">
            <summary>
            Evaluation result of Outlier F0 frame info, only used in RUS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.LogFrequencyVoiced">
            <summary>
            Evaluation result for logarithmic specutrum of low frequency part and voiced part. 
            </summary> 
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.CCInfo">
            <summary>
            Evaluation result of concatenation cost.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.VoiceCCInfo">
            <summary>
            Evaluation result of voiced boundy for concatenation result.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.FullEvaluationResult.ContinueUnitInfo">
            <summary>
            Evaluation result of continues units in recording info.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationResult">
            <summary>
            This structure is used to store the evaluation result on a single acoustic feature.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationResult.InusedFrameNumber">
            <summary>
            Inused frame number to calculation the result.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationResult.RMSE">
            <summary>
            Root-Mean-Square-Error distance.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationResult.MaxDistance">
            <summary>
            Maximum distance.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationResult.CorrelationCoefficient">
            <summary>
            Correlation coefficient.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ConcatenationCostInfo">
            <summary>
            This structure is used to store the concatenation cost info.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ConcatenationCostInfo.BoundaryNumber">
            <summary>
            Boundary number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ConcatenationCostInfo.TotalConcatenationCost">
            <summary>
            Sum of the concatenation cost of the sentences.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ContinueUnitInfo">
            <summary>
            This structure is used to store the continue unit info.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ContinueUnitInfo.BoundaryNumber">
            <summary>
            Boundary number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.ContinueUnitInfo.TotalContinueUnitNumber">
            <summary>
            Sum of the total continue units in the sentences. 
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles">
            <summary>
            This structure is used to store the paths of acoustic data files.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles.DurationFile">
            <summary>
            Path of duration file, text format.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles.F0File">
            <summary>
            Path of F0 file, binary format, SPS use F0 while RUS use F0 to calculate.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.DataFiles.LspFile">
            <summary>
            Path of lsp file, binary format.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic">
            <summary>
            This structure is used to store the voiced/unvoiced frames statistic.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic.VoicedFrameNumberInReference">
            <summary>
            Voiced frame number in reference F0 list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic.UnvoicedFrameNumberInReference">
            <summary>
            Unvoiced frame number in reference F0 list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic.VoicedFrameNumberInTarget">
            <summary>
            Voiced frame number in target F0 list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic.UnvoicedFrameNumberInTarget">
            <summary>
            Unvoiced frame number in target F0 list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic.VoicedFrameNumberInBoth">
            <summary>
            Number of frames that are voiced in both reference F0 list and target F0 list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic.UnvoicedFrameNumberInBoth">
            <summary>
            Number of frames that are unvoiced in both reference F0 list and target F0 list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic.UnexpectedVoicedFrameNumber">
            <summary>
            Number of frames that are unvoiced in reference F0 list but voiced in target F0 list.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic.UnexpectedUnvoicedFrameNumber">
            <summary>
            Number of frames that are voiced in reference F0 list but unvoiced in target F0 list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.UVStatistic.UVMismatchRatio">
            <summary>
            Gets Total mismatch ratio.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.OutlierF0Statistic">
            <summary>
            This structure is used to store the outlier f0 frame which the distance is bigger than 10 hz. 
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.OutlierF0Statistic.OutlierFrameNumber">
            <summary>
            Outlier frame number .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.OutlierF0Statistic.TotalFrameNumber">
            <summary>
            Total frame number .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.OutlierF0Statistic.OutlierRatio">
            <summary>
            Outlier frame ratio .
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary">
            <summary>
            This structure is used to store the final evaluation summary,
            Which is actually the average of a group of FullEvaluationResult.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.RMSE_Duration">
            <summary>
            Average RMSE of duration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.RMSE_F0">
            <summary>
            Average RMSE of F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.CorrelationCoefficient_F0">
            <summary>
            Average correlation coefficient of F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.RMSE_F0_StateLevel">
            <summary>
            Average RMSE of state level F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.CorrelationCoefficient_F0_StateLevel">
            <summary>
            Average correlation coefficient of state level F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.RMSE_Lsp">
            <summary>
            Average RMSE of LSP.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.RMSE_LogSpectrumWithGain">
            <summary>
            Average RMSE of logarithmic spectrum with gain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.RMSE_LogSpectrumWithoutGainVoiced">
            <summary>
            Average RMSE of logarithmic spectrum without gain in Voiced part.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.RMSE_LogSpectrumWithoutGain">
            <summary>
            Average RMSE of logarithmic spectrum without gain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.RMSE_Gain">
            <summary>
            Average RMSE of gain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.CorrelationCoefficient_Gain">
            <summary>
            Average correlation coefficient of gain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.OutlierF0Ratio">
            <summary>
            Outlier F0 Frame ratio .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.UVMismatchRatio">
            <summary>
            UV mismatch ratio.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.VUMismatchRatio">
            <summary>
            VU mismatch ratio.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.CC">
            <summary>
            Average CC.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.VoicedCC">
            <summary>
            Average voiced boundary CC.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.EvaluationSummary.ContiueUnitRatio">
            <summary>
            Continues ratio.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult">
            <summary>
            This class is used to store the evalution result on a single phoneme.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.PhoneString">
            <summary>
            The phone string of the test phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.WordOffset">
            <summary>
            The offset in original text of the word that current phoneme belongs to.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.WordLength">
            <summary>
            The length in original text of the word that current phoneme belongs to.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.StartFrame">
            <summary>
            The phoneme's start frame .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.FrameLength">
            <summary>
            The phoneme's frame length.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.DurationDistance">
            <summary>
            The phoneme level RMSE distance of duration.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.F0Distance">
            <summary>
            The phoneme level RMSE distance of F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.F0Correlation">
            <summary>
            The phoneme level Corelation of F0.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.F0OutlierFrameNumber">
            <summary>
            The phoneme level outlier frame number.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.LspDistance">
            <summary>
            The phoneme level LSP distance.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.WeightedLSPDistance">
            <summary>
            The phoneme level weighted LSP distance.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.UVInfo">
            <summary>
            Phone levle UV mismatch ratio.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.LogSpectrumDistance">
            <summary>
            The phoneme level RMSE distance of logarithmic spectrum.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.GainDistance">
            <summary>
            The phoneme level RMSE distance of gain.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.ObjectiveMeasure.RmseEvaluation.PhoneLevelResult.BothVoicedList">
            <summary>
            Both voiced frame list in both reference and target. 
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruneMode">
            <summary>
            Lexicon prune mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruneMode.LTS">
            <summary>
            Prune lexicon based on LTS rule.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruneMode.Freq">
            <summary>
            Prune lexicon based on word frequency.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruneMode.PruningCorrect">
            <summary>
            Pruning Correct.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.LexiconProcessor.PronComparisonMode">
            <summary>
            Pronunciation comparison mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.PronComparisonMode.StressPhone">
            <summary>
            Compare stress and phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.PronComparisonMode.OnlyPhone">
            <summary>
            Only compare phone.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner">
            <summary>
            LexiconPruner.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner"/> class.
            </summary>
            <param name="name">Name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.ValidateArguments">
            <summary>
            Validate Arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.Execute">
            <summary>
            Execute.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.ValidateResults(System.Boolean)">
            <summary>
            Validate Results.
            </summary>
            <param name="enable">Indicator to whether flow is enabled.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.IsAvailableToPruneWithLTSRule(Microsoft.Tts.Offline.Core.LexicalItem,Microsoft.Tts.ServiceProvider.Pronouncer,Microsoft.Tts.ServiceProvider.Phoneme,System.Boolean)">
            <summary>
            Whether the pronunciation of this lexicon item can be correctly predicted with LTS rule.
            </summary>
            <param name="item">Lexicon item.</param>
            <param name="pronouncer">TTS pronouncer.</param>
            <param name="phoneTable">Phone table.</param>
            <param name="onlyPhone">Whether only compare phones or not.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.IsEqualPronunciation(System.String,System.String,System.Boolean)">
            <summary>
            Compare two pronunciations.
            </summary>
            <param name="pronFirst">First pronunciation.</param>
            <param name="pronSecond">Second pronunciation.</param>
            <param name="onlyPhone">Comparison mode (only phones or all symbols.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.GetPronunciationWithLTSRule(System.String,Microsoft.Tts.ServiceProvider.Pronouncer,Microsoft.Tts.ServiceProvider.Phoneme)">
            <summary>
            Get pronunciation with LTS rules.
            </summary>
            <param name="grapheme">Word grapheme.</param>
            <param name="pronouncer">TTS pronouncer.</param>
            <param name="phoneTable">Phoneme table.</param>
            <returns>Pronunciation.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.IsWrongPronunciationByEndToEndFrontEnd(Microsoft.Tts.Offline.Core.LexicalItem,Microsoft.Tts.ServiceProvider.TtsEngine,System.Boolean)">
            <summary>
            End to end check the OOV word by the tts engine front end.
            If it will have a different pronunciation according to the removed lexicon pronunciation.
            </summary>
            <param name="item">Lexicon item.</param>
            <param name="engine">TTS engine.</param>
            <param name="onlyPhone">Whether only compare phones or not.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.CompileEngineData(System.String,Microsoft.Tts.Offline.Core.Lexicon)">
            <summary>
            Compile engine data.
            </summary>
            <param name="engineDataPath">Engine data path.</param>
            <param name="lexicon">The lexicon.</param>
            <returns>If the compile successed.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InitializeEngineSetting(Microsoft.Tts.Offline.Language,System.String)">
            <summary>
            Initialize Engine setting.
            </summary>
            <param name="language">Language.</param>
            <param name="engineDataPath">EngineDataPath.</param>
            <returns>Engine setting.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.CopyDomainDAT(System.String,System.String,Microsoft.Tts.Offline.Language)">
            <summary>
            Copy domain data file.
            </summary>
            <param name="sourceDir">Source directory.</param>
            <param name="destDir">Target directory.</param>
            <param name="language">Language.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.ParseCutoffFreq(System.String)">
            <summary>
            Parse cutoff frequency string.
            </summary>
            <param name="cutOffFreq">Cutoff frequency string in config.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.PruneLexiconWithWordFrequency">
            <summary>
            Prune lexicon with word frequency:
            We set cut off frequency as cutOffFreq. If the accumulated frequency sum is larger than
            Predefined threshold, we stop the pruning process and only high frequency words are kept.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.CombineWordlistWithFCS(System.Collections.Generic.List{Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.CutoffWordlist})">
            <summary>
            Extract words from each wordlist with fcs less equal than user specified,
            Then combine extracted words into dictionary.
            </summary>
            <param name="cutoffWordlist">Mutil wordlists are used to extract words with fcs.</param>
            <returns>Extract words which fcs less equal than user specified fcs.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.PruneByLtsRule(Microsoft.Tts.ServiceProvider.ServiceProvider,Microsoft.Tts.Offline.Core.Lexicon,Microsoft.Tts.Offline.Core.Lexicon,Microsoft.Tts.Offline.Core.Lexicon,System.String,Microsoft.Tts.Offline.LexiconProcessor.PronComparisonMode,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Prune word entries in filters with LTS rule:
            We only process word entries which have one kind of POS values in the filers, e.g.,
            If "noun" is in the filters, only word entries with POS="noun" will be processed.
            Just like in PruneAllWordsWithLTSRule, word entries which pronunciations can be correctly
            Predicted by LTS rule will be dropped.
            </summary>
            <param name="sp">ServiceProvider.</param>
            <param name="mainLexicon">Main lexicon.</param>
            <param name="outLexicon">Out lexicon.</param>
            <param name="ltsRemovedLexicon">Lts removed lexicon.</param>
            <param name="posFilter">Pos filter.</param>
            <param name="pronComparisonMode">Pronunciation comparison mode.</param>
            <param name="exceptionWords">Exception word list.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.GetExceptionWordList">
            <summary>
            Get the exception word list
            Use dictionary for performance.
            </summary>
            <returns>IDictionary.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.ExtracWordsFromTNML(System.String)">
            <summary>
            Extract words from tnml.
            </summary>
            <param name="strTNMLFile">Tnml file.</param>
            <returns>The words.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.ExtractWordsFromCharTable(System.String)">
            <summary>
            Extract words from chartable.
            </summary>
            <param name="strCharTable">Chartable file.</param>
            <returns>Word list.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.PruningCorrect(Microsoft.Tts.ServiceProvider.ServiceProvider,Microsoft.Tts.Offline.Core.Lexicon,Microsoft.Tts.Offline.Core.Lexicon,Microsoft.Tts.Offline.LexiconProcessor.PronComparisonMode)">
            <summary>
            PruningCorrect.
            </summary>
            <param name="sp">ServiceProvider.</param>
            <param name="mainLexicon">Main lexicon.</param>
            <param name="removedLexicon">Removed lexicon.</param>
            <param name="pronComparisonMode">Pronunciation comparison mode.</param>
            <returns>Count of entries put back to lexicon.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InMode">
            <summary>
            Gets or sets Mode of Lexicon Pruner.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InLocaleHandlerDir">
            <summary>
            Gets or sets Locale Handler Dir.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InLexicon">
            <summary>
            Gets or sets Input Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InRemovedLexicon">
            <summary>
            Gets or sets Input Removed Lexicon for pruning correct.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InExceptionWordFile">
            <summary>
            Gets or sets Exception word file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InLangDataFile">
            <summary>
            Gets or sets Language Data File for Lts Mode.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InExceptionWordList">
            <summary>
            Gets or sets Exception word list, when it is set, InEceptionWordFile will be disable.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InCompiler">
            <summary>
            Gets or sets The object of Compiler.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InPosFilter">
            <summary>
            Gets or sets POS filter.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InPronComparisonMode">
            <summary>
            Gets or sets Pronunciation Comparison mode.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InSetOutLexiconPath">
            <summary>
            Gets or sets  the output lexicon path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InSetOutRemovedLexiconPath">
            <summary>
            Gets or sets  the output removed lexicon path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InVoiceFont">
            <summary>
            Gets or sets Voice Font Path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.InExtraDAT">
            <summary>
            Gets or sets Extra LangData.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.OutPrunedLexicon">
            <summary>
            Gets Output Pruned lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.OutLtsRemovedLexicon">
            <summary>
            Gets Output Removed Lexicon by LTS Pruning.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.OutEngineData">
            <summary>
            Gets Output Engine Data.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.CutoffWordlist">
            <summary>
            Save the cut off word list.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.CutoffWordlist.Fcs">
            <summary>
            Gets or sets Fcs.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconPruner.CutoffWordlist.Path">
            <summary>
            Gets or sets Word list path.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessorMode">
            <summary>
            LexiconProcessorMode.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessorMode.Merge">
            <summary>
            Merge two TTS xml Lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessorMode.ExtractDomainLexicon">
            <summary>
            Extract domain lexicon from reviewed script with pronunciation.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessorMode.ExtractSubLexicon">
            <summary>
            Extract a sub lexicon from main lexicon by the words in a corpus file.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessorMode.ExtractWordListFromLexicon">
            <summary>
            Extract the word List from Lexicon.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.LexiconProcessor.MergeMode">
            <summary>
            The merge mode for lexicon merging when facing the same word.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.MergeMode.KeepAll">
            <summary>
            Keep all pronunciation .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.MergeMode.KeepLastOne">
            <summary>
            Keep the the pronunciation in the last lexicon.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.LexiconProcessor.MergeMode.KeepFirstOne">
            <summary>
            Keep the the pronunciation in the first lexicon.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor">
            <summary>
            Lexicon Processor.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor"/> class.
            </summary>
            <param name="name">Name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.ValidateArguments">
            <summary>
            Validate Arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.Execute">
            <summary>
            Execute.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.ValidateResults(System.Boolean)">
            <summary>
            Validate Results.
            </summary>
            <param name="enable">Indicator to whether flow is enabled.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.ExtractDomainLexicon(System.String,System.String,Microsoft.Tts.Offline.Core.Lexicon,System.String,Microsoft.Tts.Offline.LexiconProcessor.MergeMode,Microsoft.Tts.Offline.TtsPhoneSet,Microsoft.Tts.Offline.Core.LexicalAttributeSchema)">
            <summary>
            Extract Domain Lexicon from script.
            </summary>
            <param name="scriptFolder">Script Folder.</param>
            <param name="domainListFile">Domain List File.</param>
            <param name="inMainLex">Input Main Lexicon.</param>
            <param name="defaultPartOfSpeech">Default Part of Speech.</param>
            <param name="mergeMode">Merging Mode for Lexicon.</param>
            <param name="phoneSet">Phone set.</param>
            <param name="attribSchema">Lexical attribute schema.</param>
            <returns>Lexicon.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.MergeLexicon(Microsoft.Tts.Offline.Core.Lexicon,Microsoft.Tts.Offline.Core.Lexicon,Microsoft.Tts.Offline.LexiconProcessor.MergeMode)">
            <summary>
            Merge lexicons.
            </summary>
            <param name="mergedLexicon">Lexicon to be merged to.</param>
            <param name="subLexicon">Lexicon to be merged.</param>
            <param name="mergeMode">MergeMode.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.MergeLexiconWithKeepAll(Microsoft.Tts.Offline.Core.Lexicon,Microsoft.Tts.Offline.Core.Lexicon)">
            <summary>
            Merge lexicon, when facing conflict word, keep all attributes.
            </summary>
            <param name="mergedLexicon">Main lexicon and merged lexicon.</param>
            <param name="subLexicon">Sub lexicon.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.MergeLexiconWithKeepLastOne(Microsoft.Tts.Offline.Core.Lexicon,Microsoft.Tts.Offline.Core.Lexicon)">
            <summary>
            Merge lexicon, when facing conflict word, use the attributes in the last lexicon.
            </summary>
            <param name="mergedLexicon">Main lexicon and merged lexicon.</param>
            <param name="subLexicon">Sub lexicon.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.MergeLexiconWithKeepFirstOne(Microsoft.Tts.Offline.Core.Lexicon,Microsoft.Tts.Offline.Core.Lexicon)">
            <summary>
            Merge lexicon. when facing conflict word, use the attributes in the first lexicon.
            </summary>
            <param name="mergedLexicon">Main lexicon and merged lexicon.</param>
            <param name="subLexicon">Sub lexicon.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.ExtractSubLexicon(System.String,System.String,Microsoft.Tts.Offline.Core.Lexicon)">
            <summary>
            ExtractSubLexicon.
            </summary>
            <param name="corpusType">Corpus type.</param>
            <param name="corpusFile">Corpus file.</param>
            <param name="mainLexicon">Main lexicon.</param>
            <returns>Lexicon.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.ExtractWordsFromWordList(System.String)">
            <summary>
            Extract words from word list.
            </summary>
            <param name="wordListFile">Word list file.</param>
            <returns>Word list.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InMode">
            <summary>
            Gets or sets Mode of Lexicon Processor.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InMainLexicon">
            <summary>
            Gets or sets Main Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InAdditionalLexicon">
            <summary>
            Gets or sets Additional Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InMergeMode">
            <summary>
            Gets or sets Merge Mode.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InPhoneSet">
            <summary>
            Gets or sets Phone Set.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InAttribSchema">
            <summary>
            Gets or sets Attribute Schema.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InScriptFolder">
            <summary>
            Gets or sets Script Folder.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InDomainListFile">
            <summary>
            Gets or sets Domain List File.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InPos">
            <summary>
            Gets or sets Default Part of Speech.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InCorpusType">
            <summary>
            Gets or sets Corpus Type.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InCorpusFile">
            <summary>
            Gets or sets Corpus File.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.InSetOutLexiconPath">
            <summary>
            Gets or sets the out lexicon path.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.OutLexicon">
            <summary>
            Gets or sets Output Lexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.LexiconProcessor.LexiconProcessor.OutWordList">
            <summary>
            Gets or sets Out Word List.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Dictionary.DictionaryModel">
            <summary>
            Online dictionary interface .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.space">
            <summary>
            Define a space.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.resourceName">
            <summary>
            Embedded config file path.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.url">
            <summary>
            Url of online dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.rawPronPattern">
            <summary>
            Regex pattern that is used to match raw pronunciatons.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.noResultPattern">
            <summary>
            No result pattern to detect if result is found.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.posPattern">
            <summary>
            POS pattern.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.wordPattern">
            <summary>
            Word pattern.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.wordDelimiter">
            <summary>
            Word delimiter.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.phoneMappping">
            <summary>
            Mapping between online phone and tts phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.posMapping">
            <summary>
            Mapping between online POS and tts POS.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.src">
            <summary>
            Whole page .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.webClient">
            <summary>
            WebClient to download the page.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.vowels">
            <summary>
            Vowels collection.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.syllable">
            <summary>
            Syllable phone.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.primaryStress">
            <summary>
            Primary stress.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel.secondaryStress">
            <summary>
            Secondary stress.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel._pronunciations">
            <summary>
            Pronunciations.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel._pos">
            <summary>
            POS field.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel._word">
            <summary>
            Word field .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryModel._defaultPOS">
            <summary>
            Default POS .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.#ctor">
            <summary>
            Initializes a new instance of the DictionaryModel class .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Tts.Offline.Dictionary.DictionaryModel"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.Dispose">
            <summary>
            Disposes the resources used in this object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.Lookup(System.String)">
            <summary>
            Lookup word pronunciation from online .
            </summary>
            <param name="word">Word paramter .</param>
            <returns>Look-up pronunciations .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.Reset">
            <summary>
            Reset method .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the RewindableTextReader.
            </summary>
            <param name="disposing">True to release both managed and unmanaged resources;
            False to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.LoadResource(System.String)">
            <summary>
            Load embedded configuration file.
            </summary>
            <param name="resourceName">Resource name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.Process">
            <summary>
            Process method .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.ConvertToTTSPron(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Convert online pron to TTS pron .
            </summary>
            <param name="sourcePron">Online pron .</param>
            <param name="phoneMapping">Phonemapping data .</param>
            <returns>Tts pron .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.HandlePartialPron(System.String,System.String)">
            <summary>
            Process some partial online like /trænsˈleɪt, trænz-, ˈtrænsleɪt, ˈtrænz-/ .
            </summary>
            <param name="sourcePron">Partial pron.</param>
            <param name="refFullPron">Full pron reference.</param>
            <returns>Processed pron.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.SplitPhones(System.String)">
            <summary>
            Split pron into phone array .
            </summary>
            <param name="pron">Pronunciaton .</param>
            <returns>Phone array .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.FindPhone(System.String,System.Int32@)">
            <summary>
            Find longest phone from pronunciation .
            </summary>
            <param name="pron">Pron parameter .</param>
            <param name="startIndex">Start index .</param>
            <returns>Return phone .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.IsStress(System.String)">
            <summary>
            Is it a stress phone .
            </summary>
            <param name="phone">Phone parameter .</param>
            <returns>True/false .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.IsValidPhone(System.String)">
            <summary>
            Is it a valid phone .
            </summary>
            <param name="phone">Phone parameter .</param>
            <returns>True/false .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.IsVowel(System.String)">
            <summary>
            Is it a vowel phone .
            </summary>
            <param name="phone">Phone parameter .</param>
            <returns>True/false .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.IsFind">
            <summary>
            Identify whether result is found .
            </summary>
            <returns>True/false .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.EnsureStress(System.String)">
            <summary>
            Ensure stress is after vowel.
            </summary>
            <param name="pron">Source pron.</param>
            <returns>Target pron.</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.ThrowExceptionIfPronsNull">
            <summary>
            If online dictionary shows result found but pronunciations can't be extracted, it will throw a exception.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.PostProcess(System.String)">
            <summary>
            Process the raw pronunciation .
            </summary>
            <param name="rawPron">Raw pron .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.GetRawPron">
            <summary>
            Gets raw pron .
            </summary>
            <returns>Raw pron .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.GetWord">
            <summary>
            Get word from page .
            </summary>
            <returns>Return word .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.GetPOS">
            <summary>
            Get POS from page .
            </summary>
            <returns>Return POS .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.DictionaryModel.LoadData(System.IO.Stream)">
            <summary>
            Read configuration file.
            </summary>
            <param name="stream">File stream.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.DictionaryModel.Pronunciations">
            <summary>
            Gets Pronunciatons .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.DictionaryModel.POS">
            <summary>
            Gets part of speech .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.DictionaryModel.Word">
            <summary>
            Gets word .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.DictionaryModel.IsOOV">
            <summary>
            Gets or sets a value indicating whether the word is OOV or not.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Dictionary.DictionaryName">
            <summary>
            Enum of online dictionaries.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryName.DictionaryReference">
            <summary>
            Http://dictionary.reference.com/.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryName.MerriamWebster">
            <summary>
            Http://www.merriam-webster.com/.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.DictionaryName.All">
            <summary>
            All dictionaries.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Dictionary.LanguageAttribute">
            <summary>
            Language Name Attribute class.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.LanguageAttribute.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tts.Offline.Dictionary.LanguageAttribute"/> class.
            </summary>
            <param name="lang">Lanuage name.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.LanguageAttribute.Language">
            <summary>
            Gets Language name.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Dictionary.OnlineDictionary">
            <summary>
            OnlineDictionary class. Interface of library.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.OnlineDictionary._language">
            <summary>
            Language .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.OnlineDictionary._word">
            <summary>
            Word field .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.OnlineDictionary._dics">
            <summary>
            Dictionary instances .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.OnlineDictionary._item">
            <summary>
            Lexicon Item .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.OnlineDictionary._isMorphology">
            <summary>
            Indicating whether it is a morphology .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.OnlineDictionary._dicItems">
            <summary>
            Store each dictionary result .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.OnlineDictionary._dictionaryTypes">
            <summary>
            Online dictionary type array .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.#ctor">
            <summary>
            Initializes a new instance of the OnlineDictionary class .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.#ctor(Microsoft.Tts.Offline.Language)">
            <summary>
            Initializes a new instance of the OnlineDictionary class .
            </summary>
            <param name="language">Language .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.#ctor(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.Dictionary.DictionaryName)">
            <summary>
            Initializes a new instance of the OnlineDictionary class with specified Dictionary.
            </summary>
            <param name="language">Language name.</param>
            <param name="dicName">Dictionary name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.Lookup(System.String,System.Boolean@)">
            <summary>
            Look up word from online dictionary .
            </summary>
            <param name="word">Word parameter .</param>
            <param name="isOOV">If the word is OOV.</param>
            <returns>Return a LexicalItem for each word .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.GenerateLexicalItem(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.Collection{System.String}})">
            <summary>
            Generate a LexicalItem from a dictionary.
            </summary>
            <param name="prons">Pronunciation dictionary.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.Initialize(Microsoft.Tts.Offline.Language)">
            <summary>
            Initialize method .
            </summary>
            <param name="language">Language .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.Initialize(Microsoft.Tts.Offline.Language,Microsoft.Tts.Offline.Dictionary.DictionaryName)">
            <summary>
            Initialize method with specified dictionary.
            </summary>
            <param name="language">Language name.</param>
            <param name="dicName">Dictionary name.</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.GetDictionaryAttribute(Microsoft.Tts.Offline.Dictionary.DictionaryName)">
            <summary>
            Get dictionary name's language attribute.
            </summary>
            <param name="dicName">Dictionary name.</param>
            <returns>Language attribute value.</returns>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.Language">
            <summary>
            Gets lanuage .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.Word">
            <summary>
            Gets word .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.Item">
            <summary>
            Gets lexicalItem with pronunciaton and POS .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.IsMorphology">
            <summary>
            Gets a value indicating whether current word is a morphology word.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.DicItems">
            <summary>
            Gets items from all dictionaries.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.DicItem">
            <summary>
            Result item from each online dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.DicItem.Word">
            <summary>
            Gets or sets word .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.DicItem.POS">
            <summary>
            Gets or sets POS .
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.Dictionary.OnlineDictionary.DicItem.Pronunciations">
            <summary>
            Gets or sets pronunciations .
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference">
            <summary>
            DictionaryReference class. Map online dictionary http://dictionary.reference.com.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference.Language">
            <summary>
            Language flag of this dictionary .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference._nonProns">
            <summary>
            Define a delimiter array .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference.ifWebClientDisposed">
            <summary>
            If webclient object is disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference.#ctor">
            <summary>
            Initializes a new instance of the DictionaryReference class .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference.InitializeWebClient">
            <summary>
            Initialize Webclient object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference.Lookup(System.String)">
            <summary>
            Lookup word pronunciation from online .
            </summary>
            <param name="word">Word parameter .</param>
            <returns>Look-up pronunciations .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference.PostProcess(System.String)">
            <summary>
            Process the raw pronunciation .
            </summary>
            <param name="rawPron">Raw pron .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference.EnsureSyllable(System.String)">
            <summary>
            Ensure word pronunciation is syllabled .
            </summary>
            <param name="pron">Pronunciation .</param>
            <returns>Pron with syllable .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference.CleanPron(System.String)">
            <summary>
            Clean some useless tags .
            </summary>
            <param name="rawPron">Raw pron parameter .</param>
            <returns>Cleaned raw pron .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.DictionaryReference.IfWebClientDisposed(System.Object,System.EventArgs)">
            <summary>
            A event function, will be called when webclient's dispose() is called.
            </summary>
            <param name="sender">Sender.</param>
            <param name="eventArgs">Event Args.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster">
            <summary>
            MerriamWebster class. Map online dictionary http://www.merriam-webster.com.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster.Language">
            <summary>
            Language flag of this dictionary .
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster.delimiter">
            <summary>
            Define a delimiter array.
            </summary>
        </member>
        <member name="F:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster.ifWebClientDisposed">
            <summary>
            If webclient object is disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster.#ctor">
            <summary>
            Initializes a new instance of the MerriamWebster class .
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster.InitializeWebClient">
            <summary>
            Initialize Webclient object.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster.Lookup(System.String)">
            <summary>
            Lookup word pronunciation from online .
            </summary>
            <param name="word">Word parameter .</param>
            <returns>Look-up pronunciations .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster.PostProcess(System.String)">
            <summary>
            Process the raw pronunciation .
            </summary>
            <param name="rawPron">Raw pron parameter .</param>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster.CleanPron(System.String)">
            <summary>
            Clean some useless tags .
            </summary>
            <param name="rawPron">Raw pron parameter .</param>
            <returns>Cleaned raw pron .</returns>
        </member>
        <member name="M:Microsoft.Tts.Offline.Dictionary.EnUS.MerriamWebster.IfWebClientDisposed(System.Object,System.EventArgs)">
            <summary>
            A event function, will be called when webclient's dispose() is called.
            </summary>
            <param name="sender">Sender.</param>
            <param name="eventArgs">Event Args.</param>
        </member>
        <member name="T:Microsoft.Tts.Offline.NUS.NuuCandidate">
            <summary>
            NuuCandidate.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.NUS.NuuCandidate.ScriptItemId">
            <summary>
            Gets or sets ScriptItemId.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.NUS.NuuCandidate.OffsetWords">
            <summary>
            Gets or sets OffsetWords.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.NUS.NuuCandidate.LenWords">
            <summary>
            Gets or sets LenWords.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.NUS.NuuCandidate.PronString">
            <summary>
            Gets or sets The pronunciation string of this candidate.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.NUS.NuuGroup">
            <summary>
            NuuGroup.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.NUS.NuuGroup.Text">
            <summary>
            Gets or sets Text.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.NUS.NuuGroup.Candidates">
            <summary>
            Gets or sets Candidates.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.NUS.NusIndexFile">
            <summary>
            NusIndexFile.
            </summary>
        </member>
        <member name="M:Microsoft.Tts.Offline.NUS.NusIndexFile.PerformanceLoad(System.IO.StreamReader,System.Object)">
            <summary>
            PerformanceLoad.
            </summary>
            <param name="reader">Reader.</param>
            <param name="contentController">ContentController.</param>
        </member>
        <member name="P:Microsoft.Tts.Offline.NUS.NusIndexFile.NuuGroups">
            <summary>
            Gets NuuGroups.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.NUS.NusIndexFile.Schema">
            <summary>
            Gets Microsoft.Tts.Offline.Schema.NusIndex.xsd.
            </summary>
        </member>
        <member name="T:Microsoft.Tts.Offline.VoiceFontTag">
            <summary>
            A class provide all format-tag in backend file.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdUnitSelectData">
            <summary>
            Gets format tag for UnitSelectData.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdFeatureCARTData">
            <summary>
            Gets format tag for FeatureCARTData.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdHTSVoiceData">
            <summary>
            Gets format tag for HTSVoiceData.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdParameterTable">
            <summary>
            Gets format tag for ParameterTable.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdDataTable">
            <summary>
            Gets format tag for DataTable.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdNusVoiceData">
            <summary>
            Gets format tag for NusVoiceData.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdTemplateNusVoiceData">
            <summary>
            Gets format tag for TemplateNusVoiceData.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdDNNVoiceData">
            <summary>
            Gets format tag for DNNVoiceData.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdCRFModelManager">
            <summary>
            Gets format tag for CRFModelManager.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdTrieLexicon">
            <summary>
            Gets format tag for TrieLexicon.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdPhraseBuilder">
            <summary>
            Gets format tag for PhraseBuilder.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdPhoneEventData">
            <summary>
            Gets format tag for PhoneEventData.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdPreselection">
            <summary>
            Gets format tag for Preselection.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdRandomAccessDecodingData">
            <summary>
            Gets format tag for RandomAccessDecodingData.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdUncompressedWaveInventory">
            <summary>
            Gets format tag for UncompressedWaveInventory.
            </summary>
        </member>
        <member name="P:Microsoft.Tts.Offline.VoiceFontTag.FmtIdWaveInfoHeader">
            <summary>
            Gets format tag for WaveInfoHeader.
            </summary>
        </member>
    </members>
</doc>
